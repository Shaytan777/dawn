{% style %}
	.smi-product-card{text-align:var(--alignment)}.smi-product-card__thumbnail a.smi-image-inner{aspect-ratio:var(--media-ratio)}.smi-product-card__thumbnail a.smi-image-inner img,.smi-product-card__thumbnail a.smi-image-inner svg.smi-default-image{transition:all .2s}.smi-product-card__thumbnail a.smi-image-inner img:nth-child(2),.smi-product-card__thumbnail a.smi-image-inner svg.smi-default-image:nth-child(2){width:100%;height:100%;object-fit:cover}.smi-product-card__thumbnail .smi-labels{top:calc(12px + var(--image-padding));left:calc(12px + var(--image-padding))}.smi-product-card__thumbnail:hover .smi-button-cart{opacity:1;visibility:visible}.smi-product-card__thumbnail:hover a.smi-image-inner:not(.smi-shape-blob) img,.smi-product-card__thumbnail:hover a.smi-image-inner:not(.smi-shape-blob) svg{transform:scale(1.05)}.smi-product-card__thumbnail:hover a.smi-image-inner.smi-has-second-image img:nth-child(1){opacity:0}.smi-product-card__thumbnail:hover a.smi-image-inner.smi-has-second-image img:nth-child(2){opacity:1}.smi-product-card__thumbnail:hover a.smi-image-inner.smi-has-second-image:hover img:nth-child(2){clip-path:polygon(var(--shape-hover))}.smi-product-card__thumbnail:hover a.smi-image-inner:not(.smi-has-second-image):hover img{clip-path:polygon(var(--shape-hover))}.smi-product-card__thumbnail.shape-blob,.smi-product-card__thumbnail.round{background:rgba(0,0,0,0) !important}.smi-product-card__info .smi-variants__item{--item-padding: 4px;width:24px;height:24px;border:1px solid rgba(var(--color-foreground), 0.2);padding:var(--item-padding);border-radius:var(--border-radius);transition:all .2s;position:relative}.smi-product-card__info .smi-variants__item span{border-radius:calc(var(--border-radius) - 1px - var(--item-padding))}.smi-product-card__info .smi-variants__item--active{border-color:var(--color-foreground)}.smi-product-card__info .smi-variants__item--desktop-hidden{display:none}@media screen and (max-width: 767.98px){.smi-product-card__info .smi-variants__item--mobile-hidden{display:none}}.smi-product-card__info .smi-variants__item--more{padding:2px;min-width:24px;width:auto}.smi-product-card__info .smi-variants__item .smi-tooltip{font-size:14px !important;text-align:center;padding:2.5px 5px;margin-top:-35px;transition:opacity .3s;width:fit-content;background-color:#555;color:#fff;text-align:center;border-radius:6px;position:absolute;z-index:1;top:-3px;left:50%;transform:translateX(-50%);display:none}.smi-product-card__info .smi-variants__item .smi-tooltip:after{content:"";position:absolute;top:100%;left:50%;margin-left:-5px;border-width:5px;border-style:solid;border-color:#555 rgba(0,0,0,0) rgba(0,0,0,0) rgba(0,0,0,0)}.smi-product-card__info .smi-variants__item:hover .smi-tooltip{display:block}.smi-product-card__info .smi-variants:hover .smi-variants__item--desktop-hidden,.smi-product-card__info .smi-variants:hover .smi-variants__item--mobile-hidden{display:flex !important}.smi-product-card__info .smi-variants:hover .smi-variants__item--more{display:none !important}.smi-product-card__info .smi-price{justify-content:var(--alignment);flex-wrap:wrap}.smi-product-card__info .smi-button-cart{display:none}.smi-product-card .smi-button-cart{width:calc(100% - 20px);left:10px;bottom:10px}@media screen and (max-width: 767.98px){.smi-product-card .smi-button-cart{display:none}}.smi-product-card .smi-button-cart .smi-cart-text{display:inline-block;flex:none}.smi-product-card .smi-button-cart a{gap:4px;padding:calc(10px*var(--buttons-scale, 1)) calc(24px*var(--buttons-scale, 1))}.smi-product-card .smi-button-cart a .smi-loading{width:20px !important;height:20px !important;border:2px solid rgba(var(--color-button-text), 1);border-bottom-color:rgba(0,0,0,0);border-radius:50%;display:inline-block;box-sizing:border-box;animation:smi-rotation .7s linear infinite;max-width:20px;max-height:20px}.smi-product-card .smi-button-cart a.smi-cart-adding .smi-loading{display:block !important}.smi-product-card .smi-product-description{display:none}.smi-product-card.smi-card--card .smi-product-card__info{padding-left:24px;padding-right:24px}.smi-card--standard .smi-product-card__thumbnail{border-radius:var(--border-radius);padding:var(--image-padding)}.smi-card--standard .smi-product-card__thumbnail.smi-border{border:var(--border-width) solid rgba(var(--color-border-section), var(--border-opacity));box-shadow:var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius) rgba(var(--color-shadow-section), var(--shadow-opacity))}.smi-card--standard .smi-product-card__thumbnail:before{content:"";position:absolute;width:100%;height:100%;background:rgb(var(--color-background));z-index:-1;top:0;left:0}.smi-card--standard .smi-product-card__thumbnail.smi-round{overflow:visible}.smi-card--standard .smi-product-card__thumbnail.smi-round:before{border-radius:2000px}.smi-card--standard .smi-product-card__thumbnail .smi-image-inner{border:none !important;box-shadow:none !important;border-radius:calc(var(--border-radius) - var(--border-width) - var(--image-padding))}.smi-card--standard .smi-product-card__thumbnail .smi-button-cart{left:max(10px,var(--image-padding));width:calc(100% - max(20px,var(--image-padding)*2));bottom:max(10px,var(--image-padding))}.smi-card--standard.smi-product-card--left .smi-product-card__info{padding-right:16px}.smi-card--standard.smi-product-card--right .smi-product-card__info{padding-left:16px}.smi-card--standard.smi-product-card--center .smi-product-card__info{padding-left:16px;padding-right:16px}.smi-card--card{border-radius:var(--border-radius);position:relative;overflow:hidden;box-shadow:var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius) rgba(var(--color-shadow-section), var(--shadow-opacity));border:var(--border-width) solid rgba(var(--color-border-section), var(--border-opacity))}.smi-card--card:before{content:"";position:absolute;width:100%;height:100%;background:var(--gradient-background);z-index:-1;left:0}.smi-card--card .smi-product-card__thumbnail{padding:var(--image-padding) var(--image-padding) 0 var(--image-padding);border-radius:calc(var(--border-radius) - var(--border-width) - var(--image-padding)) calc(var(--border-radius) - var(--border-width) - var(--image-padding)) 0 0}.smi-card--card .smi-product-card__thumbnail .smi-image-inner{border:none !important;box-shadow:none !important;border-radius:0}.smi-card--card .smi-product-card__thumbnail .smi-labels{top:12px;left:12px}.smi-card--card .smi-product-card__info{padding:calc(24px*var(--spacing-elements)) 24px}@keyframes smi-rotation{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.smi-product-card{text-align:var(--alignment)}.smi-product-card__thumbnail a.smi-image-inner{aspect-ratio:var(--media-ratio)}.smi-product-card__thumbnail a.smi-image-inner img,.smi-product-card__thumbnail a.smi-image-inner svg.smi-default-image{transition:all .2s}.smi-product-card__thumbnail a.smi-image-inner img:nth-child(2),.smi-product-card__thumbnail a.smi-image-inner svg.smi-default-image:nth-child(2){width:100%;height:100%;object-fit:cover}.smi-product-card__thumbnail .smi-labels{top:calc(12px + var(--image-padding));left:calc(12px + var(--image-padding))}.smi-product-card__thumbnail:hover .smi-button-cart{opacity:1;visibility:visible}.smi-product-card__thumbnail:hover a.smi-image-inner:not(.smi-shape-blob) img,.smi-product-card__thumbnail:hover a.smi-image-inner:not(.smi-shape-blob) svg{transform:scale(1.05)}.smi-product-card__thumbnail:hover a.smi-image-inner.smi-has-second-image img:nth-child(1){opacity:0}.smi-product-card__thumbnail:hover a.smi-image-inner.smi-has-second-image img:nth-child(2){opacity:1}.smi-product-card__thumbnail:hover a.smi-image-inner.smi-has-second-image:hover img:nth-child(2){clip-path:polygon(var(--shape-hover))}.smi-product-card__thumbnail:hover a.smi-image-inner:not(.smi-has-second-image):hover img{clip-path:polygon(var(--shape-hover))}.smi-product-card__thumbnail.shape-blob,.smi-product-card__thumbnail.round{background:rgba(0,0,0,0) !important}.smi-product-card__info .smi-variants__item{--item-padding: 4px;width:24px;height:24px;border:1px solid rgba(var(--color-foreground), 0.2);padding:var(--item-padding);border-radius:var(--border-radius);transition:all .2s;position:relative}.smi-product-card__info .smi-variants__item span{border-radius:calc(var(--border-radius) - 1px - var(--item-padding))}.smi-product-card__info .smi-variants__item--active{border-color:var(--color-foreground)}.smi-product-card__info .smi-variants__item--desktop-hidden{display:none}@media screen and (max-width: 767.98px){.smi-product-card__info .smi-variants__item--mobile-hidden{display:none}}.smi-product-card__info .smi-variants__item--more{padding:2px;min-width:24px;width:auto}.smi-product-card__info .smi-variants__item .smi-tooltip{font-size:14px !important;text-align:center;padding:2.5px 5px;margin-top:-35px;transition:opacity .3s;width:fit-content;background-color:#555;color:#fff;text-align:center;border-radius:6px;position:absolute;z-index:1;top:-3px;left:50%;transform:translateX(-50%);display:none}.smi-product-card__info .smi-variants__item .smi-tooltip:after{content:"";position:absolute;top:100%;left:50%;margin-left:-5px;border-width:5px;border-style:solid;border-color:#555 rgba(0,0,0,0) rgba(0,0,0,0) rgba(0,0,0,0)}.smi-product-card__info .smi-variants__item:hover .smi-tooltip{display:block}.smi-product-card__info .smi-variants:hover .smi-variants__item--desktop-hidden,.smi-product-card__info .smi-variants:hover .smi-variants__item--mobile-hidden{display:flex !important}.smi-product-card__info .smi-variants:hover .smi-variants__item--more{display:none !important}.smi-product-card__info .smi-price{justify-content:var(--alignment);flex-wrap:wrap}.smi-product-card__info .smi-button-cart{display:none}.smi-product-card .smi-button-cart{width:calc(100% - 20px);left:10px;bottom:10px}@media screen and (max-width: 767.98px){.smi-product-card .smi-button-cart{display:none}}.smi-product-card .smi-button-cart .smi-cart-text{display:inline-block;flex:none}.smi-product-card .smi-button-cart a{gap:4px;padding:calc(10px*var(--buttons-scale, 1)) calc(24px*var(--buttons-scale, 1))}.smi-product-card .smi-button-cart a .smi-loading{width:20px !important;height:20px !important;border:2px solid rgba(var(--color-button-text), 1);border-bottom-color:rgba(0,0,0,0);border-radius:50%;display:inline-block;box-sizing:border-box;animation:smi-rotation .7s linear infinite;max-width:20px;max-height:20px}.smi-product-card .smi-button-cart a.smi-cart-adding .smi-loading{display:block !important}.smi-product-card .smi-product-description{display:none}.smi-product-card.smi-card--card .smi-product-card__info{padding-left:24px;padding-right:24px}.smi-card--standard .smi-product-card__thumbnail{border-radius:var(--border-radius);padding:var(--image-padding)}.smi-card--standard .smi-product-card__thumbnail.smi-border{border:var(--border-width) solid rgba(var(--color-border-section), var(--border-opacity));box-shadow:var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius) rgba(var(--color-shadow-section), var(--shadow-opacity))}.smi-card--standard .smi-product-card__thumbnail:before{content:"";position:absolute;width:100%;height:100%;background:rgb(var(--color-background));z-index:-1;top:0;left:0}.smi-card--standard .smi-product-card__thumbnail.smi-round{overflow:visible}.smi-card--standard .smi-product-card__thumbnail.smi-round:before{border-radius:2000px}.smi-card--standard .smi-product-card__thumbnail .smi-image-inner{border:none !important;box-shadow:none !important;border-radius:calc(var(--border-radius) - var(--border-width) - var(--image-padding))}.smi-card--standard .smi-product-card__thumbnail .smi-button-cart{left:max(10px,var(--image-padding));width:calc(100% - max(20px,var(--image-padding)*2));bottom:max(10px,var(--image-padding))}.smi-card--standard.smi-product-card--left .smi-product-card__info{padding-right:16px}.smi-card--standard.smi-product-card--right .smi-product-card__info{padding-left:16px}.smi-card--standard.smi-product-card--center .smi-product-card__info{padding-left:16px;padding-right:16px}.smi-card--card{border-radius:var(--border-radius);position:relative;overflow:hidden;box-shadow:var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius) rgba(var(--color-shadow-section), var(--shadow-opacity));border:var(--border-width) solid rgba(var(--color-border-section), var(--border-opacity))}.smi-card--card:before{content:"";position:absolute;width:100%;height:100%;background:var(--gradient-background);z-index:-1;left:0}.smi-card--card .smi-product-card__thumbnail{padding:var(--image-padding) var(--image-padding) 0 var(--image-padding);border-radius:calc(var(--border-radius) - var(--border-width) - var(--image-padding)) calc(var(--border-radius) - var(--border-width) - var(--image-padding)) 0 0}.smi-card--card .smi-product-card__thumbnail .smi-image-inner{border:none !important;box-shadow:none !important;border-radius:0}.smi-card--card .smi-product-card__thumbnail .smi-labels{top:12px;left:12px}.smi-card--card .smi-product-card__info{padding:calc(24px*var(--spacing-elements)) 24px}@keyframes smi-rotation{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.smi-product-card{text-align:var(--alignment)}.smi-product-card__thumbnail a.smi-image-inner{aspect-ratio:var(--media-ratio)}.smi-product-card__thumbnail a.smi-image-inner img,.smi-product-card__thumbnail a.smi-image-inner svg.smi-default-image{transition:all .2s}.smi-product-card__thumbnail a.smi-image-inner img:nth-child(2),.smi-product-card__thumbnail a.smi-image-inner svg.smi-default-image:nth-child(2){width:100%;height:100%;object-fit:cover}.smi-product-card__thumbnail .smi-labels{top:calc(12px + var(--image-padding));left:calc(12px + var(--image-padding))}.smi-product-card__thumbnail:hover .smi-button-cart{opacity:1;visibility:visible}.smi-product-card__thumbnail:hover a.smi-image-inner:not(.smi-shape-blob) img,.smi-product-card__thumbnail:hover a.smi-image-inner:not(.smi-shape-blob) svg{transform:scale(1.05)}.smi-product-card__thumbnail:hover a.smi-image-inner.smi-has-second-image img:nth-child(1){opacity:0}.smi-product-card__thumbnail:hover a.smi-image-inner.smi-has-second-image img:nth-child(2){opacity:1}.smi-product-card__thumbnail:hover a.smi-image-inner.smi-has-second-image:hover img:nth-child(2){clip-path:polygon(var(--shape-hover))}.smi-product-card__thumbnail:hover a.smi-image-inner:not(.smi-has-second-image):hover img{clip-path:polygon(var(--shape-hover))}.smi-product-card__thumbnail.shape-blob,.smi-product-card__thumbnail.round{background:rgba(0,0,0,0) !important}.smi-product-card__info .smi-variants__item{--item-padding: 4px;width:24px;height:24px;border:1px solid rgba(var(--color-foreground), 0.2);padding:var(--item-padding);border-radius:var(--border-radius);transition:all .2s;position:relative}.smi-product-card__info .smi-variants__item span{border-radius:calc(var(--border-radius) - 1px - var(--item-padding))}.smi-product-card__info .smi-variants__item--active{border-color:var(--color-foreground)}.smi-product-card__info .smi-variants__item--desktop-hidden{display:none}@media screen and (max-width: 767.98px){.smi-product-card__info .smi-variants__item--mobile-hidden{display:none}}.smi-product-card__info .smi-variants__item--more{padding:2px;min-width:24px;width:auto}.smi-product-card__info .smi-variants__item .smi-tooltip{font-size:14px !important;text-align:center;padding:2.5px 5px;margin-top:-35px;transition:opacity .3s;width:fit-content;background-color:#555;color:#fff;text-align:center;border-radius:6px;position:absolute;z-index:1;top:-3px;left:50%;transform:translateX(-50%);display:none}.smi-product-card__info .smi-variants__item .smi-tooltip:after{content:"";position:absolute;top:100%;left:50%;margin-left:-5px;border-width:5px;border-style:solid;border-color:#555 rgba(0,0,0,0) rgba(0,0,0,0) rgba(0,0,0,0)}.smi-product-card__info .smi-variants__item:hover .smi-tooltip{display:block}.smi-product-card__info .smi-variants:hover .smi-variants__item--desktop-hidden,.smi-product-card__info .smi-variants:hover .smi-variants__item--mobile-hidden{display:flex !important}.smi-product-card__info .smi-variants:hover .smi-variants__item--more{display:none !important}.smi-product-card__info .smi-price{justify-content:var(--alignment);flex-wrap:wrap}.smi-product-card__info .smi-button-cart{display:none}.smi-product-card .smi-button-cart{width:calc(100% - 20px);left:10px;bottom:10px}@media screen and (max-width: 767.98px){.smi-product-card .smi-button-cart{display:none}}.smi-product-card .smi-button-cart .smi-cart-text{display:inline-block;flex:none}.smi-product-card .smi-button-cart a{gap:4px;padding:calc(10px*var(--buttons-scale, 1)) calc(24px*var(--buttons-scale, 1))}.smi-product-card .smi-button-cart a .smi-loading{width:20px !important;height:20px !important;border:2px solid rgba(var(--color-button-text), 1);border-bottom-color:rgba(0,0,0,0);border-radius:50%;display:inline-block;box-sizing:border-box;animation:smi-rotation .7s linear infinite;max-width:20px;max-height:20px}.smi-product-card .smi-button-cart a.smi-cart-adding .smi-loading{display:block !important}.smi-product-card .smi-product-description{display:none}.smi-product-card.smi-card--card .smi-product-card__info{padding-left:24px;padding-right:24px}.smi-card--standard .smi-product-card__thumbnail{border-radius:var(--border-radius);padding:var(--image-padding)}.smi-card--standard .smi-product-card__thumbnail.smi-border{border:var(--border-width) solid rgba(var(--color-border-section), var(--border-opacity));box-shadow:var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius) rgba(var(--color-shadow-section), var(--shadow-opacity))}.smi-card--standard .smi-product-card__thumbnail:before{content:"";position:absolute;width:100%;height:100%;background:rgb(var(--color-background));z-index:-1;top:0;left:0}.smi-card--standard .smi-product-card__thumbnail.smi-round{overflow:visible}.smi-card--standard .smi-product-card__thumbnail.smi-round:before{border-radius:2000px}.smi-card--standard .smi-product-card__thumbnail .smi-image-inner{border:none !important;box-shadow:none !important;border-radius:calc(var(--border-radius) - var(--border-width) - var(--image-padding))}.smi-card--standard .smi-product-card__thumbnail .smi-button-cart{left:max(10px,var(--image-padding));width:calc(100% - max(20px,var(--image-padding)*2));bottom:max(10px,var(--image-padding))}.smi-card--standard.smi-product-card--left .smi-product-card__info{padding-right:16px}.smi-card--standard.smi-product-card--right .smi-product-card__info{padding-left:16px}.smi-card--standard.smi-product-card--center .smi-product-card__info{padding-left:16px;padding-right:16px}.smi-card--card{border-radius:var(--border-radius);position:relative;overflow:hidden;box-shadow:var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius) rgba(var(--color-shadow-section), var(--shadow-opacity));border:var(--border-width) solid rgba(var(--color-border-section), var(--border-opacity))}.smi-card--card:before{content:"";position:absolute;width:100%;height:100%;background:var(--gradient-background);z-index:-1;left:0}.smi-card--card .smi-product-card__thumbnail{padding:var(--image-padding) var(--image-padding) 0 var(--image-padding);border-radius:calc(var(--border-radius) - var(--border-width) - var(--image-padding)) calc(var(--border-radius) - var(--border-width) - var(--image-padding)) 0 0}.smi-card--card .smi-product-card__thumbnail .smi-image-inner{border:none !important;box-shadow:none !important;border-radius:0}.smi-card--card .smi-product-card__thumbnail .smi-labels{top:12px;left:12px}.smi-card--card .smi-product-card__info{padding:calc(24px*var(--spacing-elements)) 24px}@keyframes smi-rotation{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.smi-media-wrapper{aspect-ratio:var(--media-ratio)}.smi-media-wrapper:hover img,.smi-media-wrapper:hover svg,.smi-media-wrapper:hover video,.smi-media-wrapper:hover iframe,.smi-media-wrapper:hover div{clip-path:polygon(var(--shape-hover));transition:all .4s}.smi-blob-wrapper.smi-has-blob{border:none !important;box-shadow:none !important}.smi-media-wrapper{aspect-ratio:var(--media-ratio)}.smi-media-wrapper:hover img,.smi-media-wrapper:hover svg,.smi-media-wrapper:hover video,.smi-media-wrapper:hover iframe,.smi-media-wrapper:hover div{clip-path:polygon(var(--shape-hover));transition:all .4s}.smi-blob-wrapper.smi-has-blob{border:none !important;box-shadow:none !important}.smi-media-wrapper{aspect-ratio:var(--media-ratio)}.smi-media-wrapper:hover img,.smi-media-wrapper:hover svg,.smi-media-wrapper:hover video,.smi-media-wrapper:hover iframe,.smi-media-wrapper:hover div{clip-path:polygon(var(--shape-hover));transition:all .4s}.smi-blob-wrapper.smi-has-blob{border:none !important;box-shadow:none !important}.smi-mega .smi-mega-products:not(.smi-content-gap-0) .smi-swiper{--shadow-padding-sides: calc((var(--shadow-horizontal-offset) + var(--shadow-blur-radius)) * var(--shadow-visible));--shadow-padding-sides-negative: calc((var(--shadow-horizontal-offset) * -1 + var(--shadow-blur-radius)) * var(--shadow-visible));margin-left:min(0px,var(--shadow-padding-sides-negative)*-1);margin-right:min(0px,var(--shadow-padding-sides)*-1);padding-left:max(0px,var(--shadow-padding-sides-negative));padding-right:max(0px,var(--shadow-padding-sides));overflow-y:visible}.smi-predictive-search{border-top:1px solid rgba(var(--color-foreground), 0.2)}.smi-predictive-search .smi-search-column>div:first-child{width:40%}.smi-predictive-search .smi-search-column>div:last-child{width:60%;flex:1}.smi-predictive-search__search-for-button button{padding-top:10px;padding-bottom:10px;border:none;background:rgba(var(--color-foreground), 0.04)}.smi-section-header-1 .smi-actions__search .smi-search-cover{position:fixed;width:100%;height:100%;background:rgba(var(--color-foreground), 0.5);left:0;top:0;opacity:0;visibility:hidden;transition:all .2s}.smi-section-header-1 .smi-actions__search .smi-search-panel{position:absolute;width:100%;top:0;left:0;display:flex;flex-direction:column;opacity:0;visibility:hidden;transition:all .2s;z-index:9;min-height:150%}.smi-section-header-1 .smi-actions__search .smi-search-panel .smi-search-inner{max-height:calc(100vh - 150px);overflow:auto}.smi-section-header-1 .smi-actions__search .smi-search-panel .smi-search-inner .smi-container-search{--container-max-width: calc(var(--page-width) - var(--container-gutter) * 2);margin-inline-start:max(var(--container-gutter),50% - var(--container-max-width)/2);margin-inline-end:max(var(--container-gutter),50% - var(--container-max-width)/2)}.smi-section-header-1 .smi-actions__search .smi-search-panel .smi-search-inner .smi-container-search .smi-component-arrow-slider .swiper-button-disabled{opacity:.5;cursor:default}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar{width:600px;max-width:100%;margin-left:auto;margin-right:auto}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar .smi-input{flex:1;position:relative}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar .smi-input .smi-icons{margin-left:auto;cursor:pointer;z-index:9}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar .smi-input .smi-icons .smi-icon-clear{display:none !important}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar .smi-input .smi-icons .smi-icon-clear ._inner{width:20px;height:20px;border-radius:40px;border:1px solid rgba(var(--color-foreground), 0.2);display:flex;align-items:center;justify-content:center}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar .smi-input .smi-icons .smi-icon-clear svg{width:16px;height:16px;margin:0}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar .smi-input .smi-icons .smi-icon-clear span{display:block;width:1px;height:24px;background:rgba(var(--color-foreground), 0.2)}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar .smi-input .smi-icons .smi-icon-search{position:relative}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar .smi-input .smi-icons .smi-icon-search .smi-loader{position:absolute;top:50%;left:50%;margin-top:-11px;margin-left:-11px;display:none}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar input{position:absolute;width:calc(100% - 6px);height:calc(100% - 6px);left:3px;top:3px;padding:7.5px 15px;border:none;box-shadow:none;flex:1;background:rgba(0,0,0,0);color:var(--color-foreground);border-radius:calc(var(--border-radius) - 6px)}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar input::placeholder{color:rgba(var(--color-foreground), 0.55)}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar input:focus-visible{outline:none !important}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar input:focus{box-sizing:border-box;outline:2px solid rgb(var(--color-foreground)) !important}.smi-section-header-1 .smi-actions__search .smi-search-panel__bar .smi-no-result{text-align:center;width:600px;max-width:100%;margin:auto;width:100%;margin-top:calc(12px*var(--spacing-elements));display:none}.smi-section-header-1 .smi-actions__search .smi-search-panel .smi-tags{width:600px;max-width:100%;margin:auto}.smi-section-header-1 .smi-actions__search .smi-search-panel .smi-tags a{border-radius:40px;border:1px solid rgba(var(--color-foreground), 0.2);transition:all .2s}.smi-section-header-1 .smi-actions__search .smi-search-panel .smi-tags a:hover{border-color:var(--color-foreground)}.smi-section-header-1 .smi-actions__search .smi-search-panel .smi-search-wrapper{display:none}.smi-section-header-1 .smi-actions__search .smi-search-panel .smi-search-wrapper .smi-search-result{width:100%;min-height:300px}.smi-section-header-1 .smi-actions__search .smi-search-panel.smi-open .smi-tags,.smi-section-header-1 .smi-actions__search .smi-search-panel.smi-open .smi-mega-products{display:none}.smi-section-header-1 .smi-actions__search .smi-search-panel.smi-open .smi-search-wrapper{display:block}.smi-section-header-1 .smi-actions__search .smi-search-panel.smi-loading .smi-icons .smi-icon-search svg{opacity:0}.smi-section-header-1 .smi-actions__search .smi-search-panel.smi-loading .smi-icons .smi-icon-search .smi-loader{display:block}.smi-section-header-1 .smi-actions__search.smi-open .smi-search-panel{opacity:1;visibility:visible}.smi-section-header-1 .smi-actions__search.smi-open .smi-search-cover{opacity:1;visibility:visible}.smi-section-header-1 .smi-actions__search.has-value .smi-search-panel__bar .smi-input .smi-icons .smi-icon-clear{display:flex !important}.smi-mega-products{border-top:1px solid rgba(var(--color-foreground), 0.2)}.smi-mega-products--no-border{border:none !important;padding-top:0 !important}.smi-mega-products .smi-component-arrow-slider{width:auto}.smi-mega-products .smi-component-arrow-slider .arrow-icon{opacity:.75}.smi-mega-products .smi-component-arrow-slider .arrow-icon:hover{opacity:1}.smi-mega-products .smi-swiper .swiper-slide{height:unset}.smi-mega-products .smi-swiper .swiper-slide .smi-product-card{height:100%}.smi-mega-products .smi-swiper .swiper-slide .smi-product-card.smi-card-standard .smi-product-card__thumbnail{box-shadow:var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius) rgba(var(--color-shadow-product), var(--shadow-opacity));border:var(--border-width) solid rgba(var(--color-border-product), var(--border-opacity))}.smi-mega-products .smi-swiper .swiper-slide:not(.swiper-slide-visible){opacity:0;transition:all .25s}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-product-card__info{width:calc(100% - var(--product-card-border-width))}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-product-card--left .smi-product-card__info{padding-right:16px}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-product-card--right .smi-product-card__info{padding-left:16px}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-product-card--center .smi-product-card__info{padding-left:16px;padding-right:16px}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items{padding-left:var(--product-card-border-width)}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items.shape-blob,.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items.round{padding-left:0}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items .smi-swiper{margin-left:calc(var(--product-card-border-width)*-1);padding-left:var(--product-card-border-width)}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items .smi-swiper .swiper-slide.swiper-slide-prev .smi-product-card__thumbnail{border-right:none;margin-right:var(--product-card-border-width)}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items .smi-swiper .swiper-slide.swiper-slide-prev.swiper-slide-visible .smi-product-card .smi-virtual-border-right:not(.smi-round).smi-border:after{content:"";position:absolute;width:var(--product-card-border-width);height:calc(var(--border-right-height)) !important;background:rgba(var(--color-border-section), var(--border-opacity));position:absolute;right:calc(var(--product-card-border-width)*-1);bottom:calc(var(--product-card-border-width)*-1);left:auto}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items .smi-swiper .swiper-slide.swiper-slide-active .smi-product-card__thumbnail:not(.smi-round).smi-border:after{content:"";position:absolute;width:var(--product-card-border-width);height:calc(100% + var(--product-card-border-width)*2) !important;background:rgba(var(--color-border-section), var(--border-opacity));position:absolute;left:calc(var(--product-card-border-width)*-1);bottom:calc(var(--product-card-border-width)*-1)}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items .smi-swiper .swiper-slide.swiper-slide-visible .smi-product-card .smi-virtual-border{overflow:visible}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items .smi-swiper .swiper-slide.swiper-slide-visible .smi-product-card .smi-virtual-border:not(.smi-round).smi-border:after{content:"";position:absolute;width:var(--product-card-border-width);height:var(--border-height);background:rgba(var(--color-border-section), var(--border-opacity));position:absolute;left:calc(var(--product-card-border-width)*-1);bottom:calc(var(--product-card-border-width)*-1)}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items .smi-swiper .swiper-slide:first-child .smi-product-card__thumbnail{overflow:visible}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items .smi-swiper .swiper-slide:first-child .smi-product-card__thumbnail:not(.smi-round).smi-border:after{content:"";position:absolute;width:var(--product-card-border-width);height:calc(100% + var(--product-card-border-width)*2);background:rgba(var(--color-border-section), var(--border-opacity));position:absolute;left:calc(var(--product-card-border-width)*-1);bottom:calc(var(--product-card-border-width)*-1)}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items .smi-product-card__thumbnail{overflow:visible}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-standard .smi-items .smi-product-card__thumbnail:not(.smi-round){border-left:0}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-card .smi-items{padding-left:calc(var(--product-card-border-width)*1)}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-card .smi-items .smi-swiper{margin-left:calc(var(--product-card-border-width)*-1);padding-left:calc(var(--product-card-border-width)*1)}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-card .smi-items .swiper-slide.swiper-slide-prev .smi-product-card{border-right:none;margin-right:var(--product-card-border-width)}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-card .smi-items .swiper-slide.swiper-slide-active .smi-product-card{overflow:visible}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-card .smi-items .swiper-slide.swiper-slide-active .smi-product-card:after{content:"";position:absolute;width:var(--product-card-border-width);height:calc(100% + var(--product-card-border-width)*2);background:rgba(var(--color-border-section), var(--border-opacity));position:absolute;left:calc(var(--product-card-border-width)*-1);bottom:calc(var(--product-card-border-width)*-1)}.smi-mega-products.smi-spacing-false.smi-overlap-true.smi-card-style-card .smi-items .smi-product-card{border-left:none}.smi-mega-products.smi-spacing-false .smi-card--card{box-shadow:none}.smi-mega-products.smi-spacing-false .smi-card--standard .smi-product-card__thumbnail{box-shadow:none}.smi-mega{width:100%;padding:0;left:0;top:120%;opacity:0;visibility:hidden;transition:top .15s;border-top:1px solid rgba(var(--color-foreground), 0)}.smi-mega:before{content:"";position:absolute;width:100%;height:calc(var(--section-padding-top) + 10px);top:calc(var(--section-padding-top)*-1 - 5px)}.smi-mega__outer{max-height:calc(85vh - 100px);overflow:auto;overflow-x:clip;box-shadow:0px 7px 7px -5px rgba(0,0,0,.1)}.smi-mega__inner{flex-direction:var(--position)}.smi-mega__inner>.smi-menu-item{width:calc(100%/var(--column-gap) - (var(--column-gap) - 1)*var(--grid-desktop-horizontal-spacing)/var(--column-gap))}.smi-mega--divider-true{margin-top:1px;border-top:0px solid rgba(var(--color-foreground), 0)}.smi-mega--classic .smi-mega__inner{column-count:var(--column-gap);column-gap:var(--grid-desktop-horizontal-spacing);row-gap:var(--grid-desktop-vertical-spacing);display:block !important}.smi-mega--classic .smi-mega__inner>.smi-menu-item{width:100%;break-inside:avoid;margin-bottom:calc(36px*var(--spacing-elements))}.smi-mega--classic .smi-mega__inner>.smi-menu-item .smi-sub-mega-menu .smi-menu-item>a{font-weight:400}.smi-mega--collection .smi-menu-item__thumbnail{aspect-ratio:3/2;display:block;position:relative;overflow:hidden}.smi-mega--collection .smi-menu-item__thumbnail img{position:absolute;width:100%;height:100%;object-fit:cover}.smi-mega--banner .smi-item-links{width:calc((var(--column) - var(--banner))/var(--column)*100% - var(--grid-desktop-horizontal-spacing)/2);column-count:var(--column-child);column-gap:var(--grid-desktop-horizontal-spacing);row-gap:var(--grid-desktop-vertical-spacing);display:block !important}.smi-mega--banner .smi-item-links>.smi-menu-item{width:calc(100%/var(--column-child) - (var(--column-child) - 1)*var(--grid-desktop-horizontal-spacing)/var(--column-child))}.smi-mega--banner .smi-item-links>.smi-menu-item{width:100%;break-inside:avoid;margin-bottom:calc(36px*var(--spacing-elements))}.smi-mega--banner .smi-item-links>.smi-menu-item .smi-sub-mega-menu .smi-menu-item>a{font-weight:400}.smi-mega--banner .smi-item-banner{width:calc(var(--banner)/var(--column)*100% - var(--grid-desktop-horizontal-spacing)/2)}.smi-mega--banner .smi-item-banner .smi-menu-item-banner{width:calc(50% - var(--grid-desktop-horizontal-spacing)/2)}.smi-mega--banner .smi-item-banner .smi-menu-item-banner__image{width:100%}.smi-mega--banner .smi-item-banner .smi-menu-item-banner__image img{width:100%;height:auto}.smi-mega--banner .smi-item-banner .smi-menu-item-banner__heading *{color:inherit;font-size:inherit}.smi-mega--banner .smi-item-banner--column-1 .smi-menu-item-banner{width:100%}.smi-mega--banner .smi-mega__column-3 .smi-item-links{width:calc(66.6666666667% - var(--grid-desktop-horizontal-spacing)/2)}.smi-mega--banner .smi-mega__column-3 .smi-item-links>.smi-menu-item{width:calc(50% - var(--grid-desktop-horizontal-spacing)/2)}.smi-mega--banner .smi-mega__column-3 .smi-item-banner{flex-direction:column;width:calc(33.3333333333% - var(--grid-desktop-horizontal-spacing)/2)}.smi-mega--banner .smi-mega__column-3 .smi-item-banner .smi-menu-item-banner{width:100%}.smi-mega--banner .smi-mega__column-2 .smi-item-links{width:calc(50% - var(--grid-desktop-horizontal-spacing)/2)}.smi-mega--banner .smi-mega__column-2 .smi-item-banner{flex-direction:column;width:calc(50% - var(--grid-desktop-horizontal-spacing)/2)}.smi-mega--banner .smi-mega__column-2 .smi-item-banner .smi-menu-item-banner{width:100%}.smi-mega--product .smi-mega-products{border-top:1px solid rgba(var(--color-foreground), 0.2);width:100%;padding-top:var(--grid-desktop-vertical-spacing)}.smi-mega--product .smi-mega-products__heading .smi-component-arrow-slider{width:auto}.smi-mega--product .smi-mega-products__heading .smi-component-arrow-slider .swiper-button-lock,.smi-mega--product .smi-mega-products__heading .smi-component-arrow-slider .swiper-button-disabled{opacity:.3}.smi-mega--product .smi-item-links{column-count:var(--column-gap);column-gap:var(--grid-desktop-horizontal-spacing);row-gap:var(--grid-desktop-vertical-spacing);display:block !important;width:100%}.smi-mega--product .smi-item-links>.smi-menu-item{width:100%;break-inside:avoid;margin-bottom:calc(36px*var(--spacing-elements))}.smi-mega--product .smi-item-links>.smi-menu-item .smi-sub-mega-menu .smi-menu-item>a{font-weight:400}.smi-mega--product-tab .smi-mega-tabs{width:calc(25% - 12px);background:rgba(var(--color-foreground), 0.04);border-left:1px solid rgba(var(--color-foreground), 0.2);padding:calc(var(--spacing-elements)*24px) 0;margin-top:calc(var(--spacing-elements)*24px*-1)}.smi-mega--product-tab .smi-mega-tabs__item--active a{background:var(--gradient-background)}.smi-mega--product-tab .smi-mega-tabs__item a{font-weight:500;padding:12px 24px}.smi-mega--product-tab .smi-mega-tabs__item a svg{width:16px;height:16px}.smi-mega--product-tab .smi-mega-products{width:calc(75% - 12px);border-top:none}.smi-mega--product-tab .smi-mega-products .smi-mega-swiper{display:none}.smi-mega--product-tab .smi-mega-products .smi-mega-swiper--active{display:block}.smi-mega--product-tab .smi-mega-products .smi-arrows-wrapper{margin-top:var(--grid-desktop-vertical-spacing)}.smi-mega--product-tab .smi-mega-products .smi-arrows-wrapper .swiper-button-lock,.smi-mega--product-tab .smi-mega-products .smi-arrows-wrapper .swiper-button-disabled{opacity:.3}@media screen and (max-width: 767.98px){.smi-mega--product-tab .smi-mega-products .smi-arrows-wrapper{margin-top:var(--grid-mobile-vertical-spacing)}}.smi-mega a:before{display:none !important}.smi-header-mobile .smi-mega{top:0;background:var(--gradient-background);z-index:1;height:calc(100% - 51px);left:100%;transition:all .2s;opacity:1;visibility:visible}.smi-header-mobile .smi-mega__outer{box-shadow:none}.smi-header-mobile .smi-mega .smi-container,.smi-header-mobile .smi-mega .smi-container-fluid{margin:0 !important}.smi-header-mobile .smi-mega .smi-mega__inner{padding:0 !important;column-count:unset}.smi-header-mobile .smi-mega .smi-mega__inner .smi-menu-back{padding:7px 20px}.smi-header-mobile .smi-mega .smi-mega__inner .smi-menu-back svg{width:12px;height:12px;transform:rotate(90deg) !important}.smi-header-mobile .smi-mega .smi-mega__inner .smi-menu-item{width:100%;margin-bottom:unset}.smi-header-mobile .smi-mega .smi-mega__inner .smi-menu-item ul{width:100%;background:var(--gradient-background);top:0;z-index:1;padding:0 !important;left:100%;height:100%;transition:all .2s;position:absolute;margin-top:0}.smi-header-mobile .smi-mega--product .smi-item-links{column-count:unset}.smi-header-mobile .smi-mega--collection .smi-mega__inner .smi-menu-item__thumbnail{display:none}.smi-header-mobile .smi-mega--collection .smi-mega__inner .smi-menu-item__text{font-size:calc(var(--font-body-scale)*16px*93.75%);line-height:calc((1 + .8/var(--font-body-scale))*var(--body-line-height-scale, 1));font-family:var(--font-body-family);font-style:var(--font-body-style);font-weight:var(--font-body-weight)}.smi-header-mobile .smi-mega--banner .smi-mega__inner .smi-item-links{width:100%;column-count:unset}.smi-header-mobile .smi-mega--product-tab .smi-mega__inner .smi-mega-tabs{width:100%;border:none;width:100%;background:rgba(0,0,0,0);padding:0;margin:0}.smi-header-mobile .smi-mega--product-tab .smi-mega__inner .smi-mega-tabs__item a{font-weight:unset}.smi-header-mobile .smi-mega--product-tab .smi-mega__inner .smi-mega-tabs__item a svg{display:none}.smi-header-mobile .smi-mega--product-tab .smi-mega__inner .smi-mega-tabs__item--active a{background:rgba(0,0,0,0)}.smi-header-mobile .smi-mega--product-tab .smi-mega__inner .smi-mega-products{display:none}.smi-header-mobile.smi-open .smi-menu{left:0;opacity:1}.smi-header-mobile .smi-menu{border-top:1px solid rgba(var(--color-foreground), 0.2);position:fixed;top:0;left:-350px;height:100%;width:300px;background:var(--gradient-background);overflow:hidden;overflow-y:auto;transition:all .2s;box-shadow:var(--popup-shadow-horizontal-offset) var(--popup-shadow-vertical-offset) 20px rgba(var(--color-shadow), var(--popup-shadow-opacity));border-bottom:0;border-left:0;z-index:9;opacity:0;display:flex;flex-direction:column;justify-content:space-between}.smi-header-mobile .smi-menu--divider-true{border-top:none}.smi-header-mobile .smi-menu__close{display:flex !important;z-index:9}.smi-header-mobile .smi-menu__list{padding-top:0 !important;padding-left:0 !important;padding-right:0 !important;margin-bottom:auto;height:auto !important;flex:1;position:relative}.smi-header-mobile .smi-menu__list .smi-menu-item{position:unset !important;height:unset}.smi-header-mobile .smi-menu__list .smi-menu-item--main a{justify-content:space-between;padding:7px 20px}.smi-header-mobile .smi-menu__list .smi-menu-item--main.smi-menu-item--active>a:before{opacity:0;visibility:hidden;display:none !important}.smi-header-mobile .smi-menu__list .smi-menu-item--main.smi-menu-item--active>a span{position:relative}.smi-header-mobile .smi-menu__list .smi-menu-item--main.smi-menu-item--active>a span:before{content:"";position:absolute;width:100% !important;height:1px;background:rgb(var(--color-foreground));display:block !important;bottom:0;transition:all .2s}.smi-header-mobile .smi-menu__list .smi-menu-item svg.smi-svg-icon{transform:rotate(-90deg)}.smi-header-mobile .smi-menu__list .smi-menu-item .smi-sub-menu{width:100%;background:var(--gradient-background);top:0;z-index:1;padding:0 !important;left:100%;height:100%;transition:all .2s;padding-top:0;border:none !important;box-shadow:none !important}.smi-header-mobile .smi-menu__list .smi-menu-item .smi-sub-menu .smi-menu-back{padding:7px 20px}.smi-header-mobile .smi-menu__list .smi-menu-item .smi-sub-menu .smi-menu-back svg.smi-svg-icon{width:12px;height:12px;transform:rotate(90deg)}.smi-header-mobile .smi-menu__list .smi-menu-item .smi-sub-menu:not(.smi-sub-menu--depth-2){padding-top:0}.smi-header-mobile .smi-menu__list .smi-menu-item .smi-sub-menu:not(.smi-sub-menu--depth-2) .smi-menu-back{margin-top:0 !important}.smi-header-mobile .smi-menu__list .smi-menu-item .smi-sub-menu .smi-menu-item{padding:0 !important}.smi-header-mobile .smi-menu__list .smi-menu-item .smi-sub-menu .smi-menu-item a{display:flex}.smi-header-mobile .smi-menu__list .smi-menu-item.smi-open>.smi-mega,.smi-header-mobile .smi-menu__list .smi-menu-item.smi-open>.smi-sub-menu,.smi-header-mobile .smi-menu__list .smi-menu-item.smi-open>.smi-sub-mega-menu{left:0}.smi-header-mobile .smi-menu__list .smi-menu-item .smi-mega .smi-menu-back{margin-top:0 !important}.smi-header-mobile .smi-menu-actions{flex:none !important}.smi-header-mobile .smi-menu-actions .smi-dropdown__list{top:auto !important;bottom:100% !important}.smi-header-1{position:sticky;background:rgba(0,0,0,0);z-index:99999;animation:smi-shown .7s;transition:all .2s;display:block !important;margin-top:0 !important}.smi-header-1 ._text-center{text-align:center}.smi-header-1.smi-zindex-999999999{z-index:999999999 !important}.smi-header-1.smi-zindex-999999999 .smi-section-header-1 .smi-actions__search .smi-search-panel{position:fixed;top:0;max-height:85vh;min-height:unset}.smi-header-1.animate{transition:top .15s ease-out}.smi-header-1.smi-scrolled-past-header .smi-section-header-1--transparent .smi-logo__solid{display:block}.smi-header-1.smi-scrolled-past-header .smi-section-header-1--transparent .smi-logo__transparent{display:none}.smi-header-1.smi-scrolled-past-header .smi-header-sticky-alway_reduce_logo .smi-logo__link{width:75%}.smi-header-1.smi-shopify-section-header-sticky{position:sticky;top:0}.smi-header-1.smi-shopify-section-header-hidden{top:calc(-1*var(--header-height))}.smi-section-header-1{position:relative;z-index:99}.smi-section-header-1--divider{border-bottom:1px solid rgba(var(--color-foreground), 0.2)}.smi-section-header-1--shadow{box-shadow:4px 6px 20px 0px rgba(0,0,0,.1)}.smi-section-header-1 .smi-logo__solid{display:block}.smi-section-header-1 .smi-logo__transparent{display:none}.smi-section-header-1--transparent{width:100%;border-bottom:none}.smi-section-header-1--transparent .smi-logo__transparent-scroll{display:none}.smi-section-header-1--transparent .smi-logo__solid{display:none}.smi-section-header-1--transparent .smi-logo__transparent{display:block}.smi-section-header-1 .smi-hamburger-icon svg{height:100%}.smi-section-header-1 .smi-hamburger-icon .smi-menu-cover{opacity:0;visibility:hidden;position:fixed;background:rgba(var(--color-foreground), 0.5);width:100%;height:100%;top:0;left:0;transition:all .2s;z-index:9}.smi-section-header-1.smi-open .smi-hamburger-icon .smi-menu-cover{opacity:1;visibility:visible}.smi-section-header-1 .smi-logo__link{transition:width .3s cubic-bezier(0.52, 0, 0.61, 0.99);width:var(--logo-width, 150px)}.smi-section-header-1 .smi-menu__close{padding:13px 15px;display:none}.smi-section-header-1 .smi-menu .smi-menu-actions{display:none}.smi-section-header-1 .smi-menu__list .smi-menu-item--active.smi-menu-item--main>a{color:rgb(var(--color-foreground))}.smi-section-header-1 .smi-menu__list .smi-menu-item--active.smi-menu-item--main>a:before{content:"";position:absolute;width:100% !important;height:1px;background:rgb(var(--color-foreground));display:block !important;bottom:0;transition:all .2s}.smi-section-header-1 .smi-menu__list .smi-menu-item--active:not(.smi-menu-item--main)>a{color:rgb(var(--color-foreground))}.smi-section-header-1 .smi-menu__list .smi-menu-item--active:not(.smi-menu-item--main)>a span{position:relative}.smi-section-header-1 .smi-menu__list .smi-menu-item--active:not(.smi-menu-item--main)>a span:after{content:"";position:absolute;width:100%;height:1px;background:rgb(var(--color-foreground));display:block !important;bottom:0;transition:all .2s}.smi-section-header-1 .smi-menu__list .smi-menu-item svg.smi-svg-icon{width:calc(12px*var(--icon-scale, 1));height:calc(12px*var(--icon-scale, 1));display:block;position:relative;top:.1rem}.smi-section-header-1 .smi-menu__list .smi-menu-item:hover>a{color:rgb(var(--color-foreground))}.smi-section-header-1 .smi-menu__list .smi-menu-item--main{display:flex;align-items:center}.smi-section-header-1 .smi-menu__list .smi-menu-item--main>a{height:auto;width:100%}.smi-section-header-1 .smi-actions .smi-dropdown__button{font-family:inherit}.smi-section-header-1 .smi-actions .smi-dropdown__button svg{width:calc(12px*var(--icon-scale, 1));height:calc(12px*var(--icon-scale, 1));position:relative;top:.1rem}.smi-section-header-1 .smi-actions .smi-dropdown__button img{width:calc(16px*var(--font-body-scale));height:calc(12px*var(--font-body-scale))}.smi-section-header-1 .smi-actions .smi-dropdown__list{top:150%;left:0;display:none !important;margin-top:var(--section-padding-top, 0)}.smi-section-header-1 .smi-actions .smi-dropdown__list.smi-dropdown--country{width:max-content}.smi-section-header-1 .smi-actions .smi-dropdown__list.smi-dropdown--divider-true{margin-top:calc(var(--section-padding-top, 0) + 1px)}.smi-section-header-1 .smi-actions .smi-dropdown__list .smi-item a{color:rgba(var(--color-foreground), 0.75)}.smi-section-header-1 .smi-actions .smi-dropdown__list .smi-item a img{width:16px;height:12px}.smi-section-header-1 .smi-actions .smi-dropdown__list .smi-item--active a,.smi-section-header-1 .smi-actions .smi-dropdown__list .smi-item:hover a{color:rgba(var(--color-foreground))}.smi-section-header-1 .smi-actions .smi-dropdown.smi-active .smi-dropdown__button svg{transform:rotate(180deg)}.smi-section-header-1 .smi-actions .smi-dropdown.smi-active .smi-dropdown__list{max-height:300px;overflow:auto;top:100%;display:flex !important;scrollbar-width:thin;scrollbar-color:#c1c1c1 #f1f1f1}.smi-section-header-1 .smi-actions .smi-cart-badges{background:rgb(var(--color-button));color:rgb(var(--color-button-text));height:16px;min-width:16px;border-radius:20px;padding:2px;top:-9px;right:-6px}.smi-section-header-1 .smi-actions #HeaderCountryForm .smi-dropdown__button svg{top:0}.smi-section-header-1 .smi-container-fluid .smi-actions .smi-dropdown .smi-dropdown__list{left:auto;right:0}@media screen and (min-width: 992px){.smi-section-header-1--logo_middle_left .smi-header .smi-menu{margin-right:auto}.smi-section-header-1--logo_middle_left_nav_center .smi-header .smi-logo,.smi-section-header-1--logo_middle_left_nav_center .smi-header .smi-actions{flex:1 1 0%}.smi-section-header-1--logo_middle_left_nav_center .smi-header .smi-menu__list{justify-content:center}.smi-section-header-1--logo_middle_left_nav_center .smi-header .smi-actions{justify-content:end}.smi-section-header-1--logo_middle_center .smi-header .smi-logo{order:2}.smi-section-header-1--logo_middle_center .smi-header .smi-menu{order:1;flex:1 1 0%}.smi-section-header-1--logo_middle_center .smi-header .smi-menu__list{flex-wrap:wrap}.smi-section-header-1--logo_middle_center .smi-header .smi-actions{order:3;flex:1 1 0%;justify-content:end}.smi-section-header-1--logo_top_left .smi-header{flex-wrap:wrap;row-gap:calc(20px*var(--spacing-elements))}.smi-section-header-1--logo_top_left .smi-header .smi-logo{order:1}.smi-section-header-1--logo_top_left .smi-header .smi-menu{order:3;width:100%}.smi-section-header-1--logo_top_left .smi-header .smi-menu__list{padding-top:0 !important;padding-bottom:0 !important}.smi-section-header-1--logo_top_left .smi-header .smi-actions{order:2}.smi-section-header-1--logo_top_left .smi-header .smi-actions .smi-dropdown__button{padding:0}.smi-section-header-1--logo_top_center .smi-header{flex-wrap:wrap;row-gap:calc(20px*var(--spacing-elements))}.smi-section-header-1--logo_top_center .smi-header .smi-logo{order:2}.smi-section-header-1--logo_top_center .smi-header .smi-menu{order:4;width:100%}.smi-section-header-1--logo_top_center .smi-header .smi-menu__list{padding-top:0 !important;padding-bottom:0 !important;justify-content:center}.smi-section-header-1--logo_top_center .smi-header .smi-actions--pos1{order:1;flex:1 1 0%}.smi-section-header-1--logo_top_center .smi-header .smi-actions:last-child{order:3;flex:1 1 0%;justify-content:end}.smi-section-header-1--logo_top_center .smi-header .smi-actions .smi-dropdown__button{padding:0}.smi-section-header-1--drawer .smi-header{column-gap:36px !important}.smi-section-header-1--drawer .smi-header .smi-hamburger-icon{display:block !important}.smi-section-header-1--drawer .smi-header .smi-logo{margin-right:auto}.smi-section-header-1--drawer_logo_center .smi-header .smi-hamburger-icon{display:block !important;flex:1 1 0%}.smi-section-header-1--drawer_logo_center .smi-header .smi-actions{flex:1 1 0%;justify-content:end}.smi-section-header-1--drawer .smi-header .smi-menu__list,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu__list{display:block !important;padding-top:15px}.smi-section-header-1--drawer .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu{display:block !important}.smi-section-header-1--drawer .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu .smi-menu-back,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu .smi-menu-back{display:flex !important;font-size:calc(var(--font-body-scale)*16px*93.75%)}.smi-section-header-1--drawer .smi-header .smi-menu .smi-dropdown--style,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu .smi-dropdown--style{box-shadow:none !important}.smi-section-header-1--drawer .smi-header .smi-menu .smi-mega,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu .smi-mega{box-shadow:none !important}.smi-section-header-1--drawer .smi-header .smi-menu .smi-mega .smi-mega__inner,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu .smi-mega .smi-mega__inner{display:block !important}.smi-section-header-1--drawer .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-menu-back,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-menu-back{display:flex !important;font-size:calc(var(--font-body-scale)*16px*93.75%)}.smi-section-header-1--drawer .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-item-links,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-item-links{display:block !important}.smi-section-header-1--drawer .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-item-banner,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-item-banner{display:none !important}.smi-section-header-1--drawer .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-menu-item a span,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-menu-item a span{display:block !important}.smi-section-header-1--drawer .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-menu-item .smi-sub-mega-menu,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-menu-item .smi-sub-mega-menu{display:block !important}.smi-section-header-1--drawer .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-mega-products,.smi-section-header-1--drawer_logo_center .smi-header .smi-menu .smi-mega .smi-mega__inner .smi-mega-products{display:none !important}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu{--color-foreground: unset !important;background:rgba(0,0,0,0)}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item--mega{position:static}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item>a:before{content:"";position:absolute;width:0;height:1px;background:rgb(var(--color-foreground));display:block;bottom:0;transition:all .2s}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item:hover>a svg{transform:rotate(180deg)}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item:hover>a:before{width:100%}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu{top:150%;left:0;opacity:0;visibility:hidden;transition:all .2s}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu--depth-1{margin-top:var(--section-padding-top, 0)}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu--depth-1:before{content:"";position:absolute;width:100%;height:calc(var(--section-padding-top) + 10px);top:calc(var(--section-padding-top)*-1)}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu--divider-true{margin-top:calc(var(--section-padding-top, 0) + 1px)}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu .smi-menu-item a:before{display:none}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu .smi-menu-item a svg{transform:rotate(-90deg)}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item .smi-sub-menu .smi-menu-item .smi-sub-menu{left:120%;top:0}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item:hover>.smi-sub-menu,.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item:hover .smi-mega{top:100%;opacity:1;visibility:visible}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item:hover>.smi-sub-menu .smi-menu-item:hover>.smi-sub-menu,.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item:hover .smi-mega .smi-menu-item:hover>.smi-sub-menu{left:100%}.smi-section-header-1:not(.smi-header-mobile) .smi-header .smi-menu__list .smi-menu-item:hover>.smi-mega{box-shadow:none;border-top-color:rgba(var(--color-foreground), 0.2)}}@media screen and (max-width: 1360px){.smi-section-header-1 .smi-actions .smi-dropdown.smi-active .smi-dropdown__list{left:auto;right:0}}@media screen and (max-width: 991px){.smi-section-header-1 .smi-header{column-gap:36px}.smi-section-header-1 .smi-header--mobile-logo_center .smi-hamburger-icon{flex:1 1 0%}.smi-section-header-1 .smi-header--mobile-logo_center .smi-actions{flex:1 1 0%;justify-content:end}.smi-section-header-1 .smi-logo{margin-right:auto}.smi-section-header-1--logo_top_center .smi-actions--pos1{display:none !important}.smi-section-header-1--logo_top_center .smi-actions__search .smi-search-button.smi-hidden{display:block !important}}@media screen and (max-width: 767px){.smi-section-header-1 .smi-header .smi-actions smi-localization-form{display:none}.smi-section-header-1 .smi-header .smi-menu{display:flex;flex-direction:column;justify-content:space-between}.smi-section-header-1 .smi-header .smi-menu-actions{position:relative;z-index:9;padding:20px;display:flex;flex-direction:column;row-gap:20px}.smi-section-header-1 .smi-header .smi-menu-actions smi-localization-form{display:block;height:auto}.smi-section-header-1 .smi-header .smi-menu-actions .smi-dropdown.smi-active .smi-dropdown__list{left:0;right:auto;bottom:100%;top:auto}.smi-section-header-1 .smi-header .smi-logo__link{width:var(--mobile-logo-width, 60px)}.smi-section-header-1 .smi-actions__search.smi-open .smi-search-panel{padding-left:15px;padding-right:15px;transition:none}.smi-section-header-1 .smi-actions__search.smi-open .smi-search-panel .smi-mega-products{margin-right:-15px;margin-left:-15px}.smi-section-header-1 .smi-actions__search.smi-open .smi-search-panel .smi-search-wrapper{margin-left:0;margin-right:0}.smi-section-header-1 .smi-actions__search.smi-open .smi-search-panel .smi-search-result .smi-predictive-search .smi-search-column{flex-direction:column;row-gap:var(--grid-mobile-vertical-spacing)}.smi-section-header-1 .smi-actions__search.smi-open .smi-search-panel .smi-search-result .smi-predictive-search .smi-search-column .smi-predictive-group{width:100%}.smi-section-header-1 .smi-mega--product-tab .smi-mega-products{display:none !important}}
{% endstyle %}
{% comment %}#component#["settings/heading","settings/media-settings-3","settings/slider-arrows","settings/slider-dots","settings/slides","settings/section-padding","settings/button-without-url","blocks/color","blocks/background","settings/media-height-2","settings/content-position","settings/product-card","settings/content-settings","settings/rich-content-heading","settings/buttons","settings/countdown-timer","settings/container-width","settings/media-width","settings/media-position","settings/media-height","settings/content-alignment","settings/color-scheme","blocks/email-signup","settings/social-media","settings/custom-icons","blocks/product-variant","blocks/product-quantity","blocks/product-purchase","blocks/product-color","blocks/email-signup-footer","settings/mega-menu","blocks/mega-menu/color","blocks/mega-menu/classic","blocks/mega-menu/collection","blocks/mega-menu/banner","blocks/mega-menu/product","blocks/mega-menu/product-tab","blocks/header-search","settings/layout-settings","settings/icon-with-text-2","settings/icon-with-text-3","blocks/heading","settings/text","blocks/divider","settings/button-single","settings/slider-layout","settings/nation","settings/rating","settings/media-settings","blocks/collapsible-content","settings/image","settings/icon-with-text","settings/page-content","settings/content-width","settings/gap-between-content","blocks/milestone","settings/heading/block","settings/design-mode","settings/animation-settings","blocks/text","settings/divider","settings/icon-setting","settings/slider-pagination-1-style","settings/buttons-product"]#endcomponent#{% endcomment %}
{%-liquid
    assign header_classes = ''    
    if section.settings.show_divider
        assign header_classes = ' smi-section-header-1--divider'    
    endif
    if section.settings.show_shadow
        assign header_classes = header_classes | append: ' smi-section-header-1--shadow'  
    endif
    assign color_schema = section.settings.color_scheme
    assign is_transparent = false
    if section.settings.header_style == 'transparent' and request.page_type == 'index'
        assign is_transparent = true
        assign header_classes = header_classes | append: ' smi-section-header-1--transparent'
        assign color_schema_transparent = section.settings.transparent_color_scheme
    endif
    assign desktop_layout = section.settings.desktop_layout
    assign header_classes = header_classes | append: ' smi-header-sticky-' | append: section.settings.sticky_header | append: ' smi-section-header-1--' | append: desktop_layout
-%}
<style>
    {% assign colorblock = section.blocks | where: 'type', 'color' | first %}
{% if colorblock %}
      #shopify-section-{{ section.id }},
      #shopify-section-{{ section.id }} .smi-color-{{ section.settings.color_scheme }},
      .smi-block-custom-color {
        --color-background: {{ colorblock.settings.background_color.red }}, {{ colorblock.settings.background_color.green }},{{ colorblock.settings.background_color.blue }};        
        {% if colorblock.settings.background_gradient_color == blank %}
            --gradient-background: {{ colorblock.settings.background_color }};
        {% else %}
            --gradient-background: {{ colorblock.settings.background_gradient_color }};
        {% endif %}
        --color-foreground: {{ colorblock.settings.text_color.red }}, {{ colorblock.settings.text_color.green }},{{ colorblock.settings.text_color.blue }};
        --color-subtext: {{ colorblock.settings.subtext_color.red }},{{ colorblock.settings.subtext_color.green }},{{ colorblock.settings.subtext_color.blue }};
        --color-button: {{ colorblock.settings.solid_background_button_color.red }}, {{ colorblock.settings.solid_background_button_color.green }},{{ colorblock.settings.solid_background_button_color.blue }};
        --color-button-text: {{ colorblock.settings.solid_button_label_color.red }}, {{ colorblock.settings.solid_button_label_color.green }},{{ colorblock.settings.solid_button_label_color.blue }};
        --color-secondary-button-text: {{ colorblock.settings.outline_button_color.red }}, {{ colorblock.settings.outline_button_color.green }},{{ colorblock.settings.outline_button_color.blue }};
        --color-shadow: {{ colorblock.settings.shadow_color.red }}, {{ colorblock.settings.shadow_color.green }},{{ colorblock.settings.shadow_color.blue }};
    }
    {%- if is_transparent -%}
        #shopify-section-{{ section.id }} .smi-color-{{ section.settings.transparent_color_scheme }} {
            --gradient-background: {{ colorblock.settings.transparent_background_gradient_color }};
            --color-foreground: {{ colorblock.settings.transparent_text_color.red }}, {{ colorblock.settings.transparent_text_color.green }},{{ colorblock.settings.transparent_text_color.blue }};
            --color-button: {{ colorblock.settings.transparent_solid_background_button_color.red }}, {{ colorblock.settings.transparent_solid_background_button_color.green }},{{ colorblock.settings.transparent_solid_background_button_color.blue }};
            --color-button-text: {{ colorblock.settings.transparent_solid_button_label_color.red }}, {{ colorblock.settings.transparent_solid_button_label_color.green }},{{ colorblock.settings.transparent_solid_button_label_color.blue }};
        }
        #shopify-section-{{ section.id }} .smi-color-{{ section.settings.transparent_color_scheme }}.smi-search-panel {
            --gradient-background: {{ colorblock.settings.background_color }};
            --color-foreground: {{ colorblock.settings.text_color.red }}, {{ colorblock.settings.text_color.green }},{{ colorblock.settings.text_color.blue }};
        }
    {%- endif -%}
    #shopify-section-{{ section.id }} .smi-product-card-wrapper .smi-color-{{ section.settings.product_color_scheme }} {
        --color-background: {{ colorblock.settings.product_background_color.red }}, {{ colorblock.settings.product_background_color.green }},{{ colorblock.settings.product_background_color.blue }};        
        {% if colorblock.settings.product_background_gradient_color == blank %}
            --gradient-background: {{ colorblock.settings.product_background_color }};
        {% else %}
            --gradient-background: {{ colorblock.settings.product_background_gradient_color }};
        {% endif %}
        --color-foreground: {{ colorblock.settings.product_text_color.red }}, {{ colorblock.settings.product_text_color.green }},{{ colorblock.settings.product_text_color.blue }};
        --color-button: {{ colorblock.settings.product_solid_background_button_color.red }}, {{ colorblock.settings.product_solid_background_button_color.green }},{{ colorblock.settings.product_solid_background_button_color.blue }};
        --color-button-text: {{ colorblock.settings.product_solid_button_label_color.red }}, {{ colorblock.settings.product_solid_button_label_color.green }},{{ colorblock.settings.product_solid_button_label_color.blue }};
        --color-shadow: {{ colorblock.settings.product_shadow_color.red }}, {{ colorblock.settings.product_shadow_color.green }},{{ colorblock.settings.product_shadow_color.blue }};
    }
    #shopify-section-{{ section.id }} .smi-badges {
        --color-badge-background: {{ colorblock.settings.badge_sale_background_color.red }}, {{ colorblock.settings.badge_sale_background_color.green }},{{ colorblock.settings.badge_sale_background_color.blue }};
        --color-badge-foreground: {{ colorblock.settings.badge_sale_text_color.red }}, {{ colorblock.settings.badge_sale_text_color.green }},{{ colorblock.settings.badge_sale_text_color.blue }};
    }
    #shopify-section-{{ section.id }} .smi-badges--sold-out {
        --color-badge-background: {{ colorblock.settings.badge_sold_out_background_color.red }}, {{ colorblock.settings.badge_sold_out_background_color.green }},{{ colorblock.settings.badge_sold_out_background_color.blue }};
        --color-badge-foreground: {{ colorblock.settings.badge_sold_out_text_color.red }}, {{ colorblock.settings.badge_sold_out_text_color.green }},{{ colorblock.settings.badge_sold_out_text_color.blue }};
    }
{% endif %}
    #shopify-section-{{ section.id }}{
        --section-padding-top: {{ section.settings.padding_top }}px;
--section-padding-bottom: {{ section.settings.padding_bottom }}px;
{% if section.settings.padding_top_section != blank or section.settings.padding_bottom_section != blank %}
    --section-margin-top: {{ section.settings.padding_top_section }}px;
    --section-margin-bottom: {{ section.settings.padding_bottom_section }}px;
{% endif %}
        --logo-width: {{ section.settings.logo_width }}px;
        --mobile-logo-width: {{ section.settings.mobile_logo_width }}px;
    }
</style>
{% capture component_logo %}
    {%-liquid
    assign logo = section.settings.logo
    assign logo_transparent = section.settings.logo_transparent
    if logo_transparent == blank
        assign logo_transparent = logo
    endif
-%}
<div class="smi-logo">
    {%- if request.page_type == 'index' -%}
        <h1 class="smi-h-100">
    {%- endif -%}
        <a href="{{ routes.root_url }}" class="smi-align-items-center smi-h-100 smi-logo__link smi-d-flex">
            {%- if logo_transparent == blank and logo == blank -%}
                <span class="smi-h2">{{ shop.name }}</span>
            {%- else -%}
                {%- if logo != blank -%}
                    {%- assign logo_alt = logo.alt | default: shop.name | escape -%}
                    {%- assign logo_height = section.settings.logo_width | divided_by: logo.aspect_ratio -%}
                    {% capture sizes %}(max-width: {{ section.settings.logo_width | times: 2 }}px) 50vw, {{ section.settings.logo_width }}px{% endcapture %}
                    {% capture widths %}{{ section.settings.logo_width }}, {{ section.settings.logo_width | times: 1.5 | round }}, {{ section.settings.logo_width | times: 2 }}{% endcapture %}
                    {{ logo | image_url: width: 600 | image_tag:
                        class: 'smi-logo__link-image smi-w-100 smi-h-auto smi-logo__solid',
                        widths: widths,
                        height: logo_height,
                        width: section.settings.logo_width,
                        alt: logo_alt,
                        sizes: sizes,
                        preload: true
                    }}
                {%- endif -%}
                {%- if logo_transparent != blank -%}
                    {%- assign logo_alt = logo_transparent.alt | default: shop.name | escape -%}
                    {%- assign logo_height = section.settings.logo_width | divided_by: logo_transparent.aspect_ratio -%}
                    {% capture sizes %}(max-width: {{ section.settings.logo_width | times: 2 }}px) 50vw, {{ section.settings.logo_width }}px{% endcapture %}
                    {% capture widths %}{{ section.settings.logo_width }}, {{ section.settings.logo_width | times: 1.5 | round }}, {{ section.settings.logo_width | times: 2 }}{% endcapture %}
                    {{ logo_transparent | image_url: width: 600 | image_tag:
                        class: 'smi-logo__link-image smi-w-100 smi-h-auto smi-logo__transparent',
                        widths: widths,
                        height: logo_height,
                        width: section.settings.logo_width,
                        alt: logo_alt,
                        sizes: sizes,
                        preload: true
                    }}
                {%- endif -%}
            {%- endif -%}
        </a>
    {%- if request.page_type == 'index' -%}
        </h1>
    {%- endif -%}
</div>
{%  endcapture %}
{% capture component_menu %}
    {%-liquid
    assign mega_items = ''
    for block in section.blocks
        if block.type == 'mega_classic' or block.type == 'mega_collection' or block.type == 'mega_banner' or block.type == 'mega_product' or block.type == 'mega_product_tab'
            assign menu_items = block.settings.menu_item | strip
            assign menu_items = menu_items | split: ','
            if menu_items.size > 0
                assign menu_items_revert = ''
                for menu_item in menu_items
                    assign menu_item_temp = menu_item | strip
                    assign mega_data_item = menu_item_temp | append: '|' | append: block.id
                    assign mega_items = mega_items | append: mega_data_item | append: '||'
                endfor
            endif
        endif
    endfor
    assign mega_items = mega_items | remove_last: '||' | split: '||'
-%}
{% capture arrow_down %}
    {% render 'smi-icons', icon: 'arrow-down'  %}
{% endcapture %}
<div class="smi-color-{{ color_schema }} smi-menu smi-menu--divider-{{section.settings.show_divider}}">
    <div class="smi-menu__close smi-align-items-center smi-cursor-pointer">
        {%- render 'smi-icons', icon: 'close' -%}
    </div>
    {%- if section.settings.menu != blank -%}
        <ul class="smi-dropdown-popup-wrapper smi-menu__list smi-d-block smi-d-lg-flex smi-align-items-center smi-column-gap-lg smi-px-0 smi-h-100">
            {%- for link in section.settings.menu.links -%}
                {%-liquid
                    assign has_mega = false
                    assign mega_column = 4
                    for mega_item in mega_items
                        assign mega_item_data = mega_item | split: '|'
                        assign mega_item_title = mega_item_data[0] | downcase
                        assign link_title = link.title | downcase
                        if mega_item_title == link_title
                            assign has_mega = true
                            assign mega_block = section.blocks | where: 'id', mega_item_data[1] | first
                            assign block = mega_block
                        endif                        
                    endfor
                    assign menu_loop = forloop.index
                -%}      
                <li 
                    id="smi-menu-item-{{ link.handle }}"
                    class="smi-h-100 smi-menu-item smi-menu-item--main smi-list-style-none {% if has_mega %}smi-menu-item--mega {% endif %} {% if link.current or link.child_active %} smi-menu-item--active {% endif %} smi-p-relative"
                >
                    <a href="{{ link.url }}" class="smi-h-100 smi-d-flex smi-align-items-baseline smi-column-gap-xxs smi-p-relative smi-text-menu smi-color-text-75">
                        <span>{{- link.title | escape -}}</span>
                        {%- if link.links != blank or has_mega -%} {{ arrow_down }} {%- endif -%}
                    </a>
                    {% if has_mega and mega_block %}
                        {%- if mega_block.type == 'mega_classic' -%}
                            {%-liquid
    assign number_column = mega_block.settings.number_column | times: 1
    if number_column > link.links.size
        assign number_column = link.links.size
    endif
-%}
<div class="smi-color-{{ color_schema }} smi-mega smi-mega--classic smi-dropdown--style smi-mega--divider-{{section.settings.show_divider}}" style="--column-gap: {{ number_column }}">
    <div class="smi-mega__outer smi-w-100">
        <div class="smi-container{%- if section.settings.full_width -%}-fluid{%- endif -%}">
            <div class="smi-mega__inner smi-d-block smi-d-lg-flex smi-py-xl smi-mega--column-{{number_column}} smi-g-columm smi-g-row smi-flex-wrap">
                <span class="smi-menu-back smi-d-flex smi-d-lg-none smi-align-items-center smi-column-gap-xs smi-cursor-pointer smi-mt-sm">{{ arrow_down }} {{- link.title | escape -}}</span>
                {%- if link.links != blank -%}
                        {%- for childlink in link.links -%}
                            <div
                                id="smi-menu-item-{{ link.handle }}-{{ childlink.handle }}"
                                class="smi-menu-item {% if childlink.current %} smi-menu-item--active {% endif %}"
                            >
                                <a href="{{ childlink.url }}" class="smi-d-flex smi-align-items-center smi-justify-content-between smi-text-menu smi-color-text smi-text-menu">
                                    <span>{{ childlink.title | escape }}</span>
                                    {%- if childlink.links != blank -%} 
                                        <span class=" smi-d-block smi-d-lg-none">{{ arrow_down }}</span>
                                    {%- endif -%}
                                </a>
                                {%- if childlink.links != blank -%}
                                    <ul class="smi-sub-mega-menu smi-px-0 smi-d-block smi-d-lg-flex smi-flex-column smi-row-gap-xs  smi-mt-sm">
                                        <span class="smi-menu-back smi-d-flex smi-d-lg-none smi-align-items-center smi-column-gap-xs smi-cursor-pointer smi-mt-sm">{{ arrow_down }} {{- childlink.title | escape -}}</span>
                                        {%- for grandchildlink in childlink.links -%}
                                            <li
                                                id="smi-menu-item-{{ link.handle }}-{{ childlink.handle }}-{{ grandchildlink.handle }}"
                                                class="smi-menu-item smi-list-style-none {% if grandchildlink.current %} smi-menu-item--active {% endif %}"
                                            >
                                                <a href="{{ grandchildlink.url }}" class="smi-d-flex smi-align-items-center smi-justify-content-between smi-text-md smi-color-text-75"><span>{{ grandchildlink.title | escape }}</span></a>
                                            </li>
                                        {%- endfor -%}
                                    </ul>
                                {%- endif -%}
                            </div>
                        {%- endfor -%}
                {%- endif -%}
            </div>
        </div>
    </div>
</div>
                        {%- endif -%}
                        {%- if mega_block.type == 'mega_collection' -%}
                            {%-liquid
    assign number_column = mega_block.settings.number_column | times: 1
-%}
<div class="smi-color-{{ color_schema }} smi-mega smi-mega--collection smi-dropdown--style smi-mega--divider-{{section.settings.show_divider}}" style="--column-gap: {{ number_column }}">
    <div class="smi-mega__outer smi-w-100">
        <div class="smi-container{%- if section.settings.full_width -%}-fluid{%- endif -%}">
            <div class="smi-mega__inner smi-d-block smi-d-lg-flex smi-py-xl smi-mega--column-{{number_column}} smi-g-columm smi-g-row smi-flex-wrap">
                <span class="smi-menu-back smi-d-flex smi-d-lg-none smi-align-items-center smi-column-gap-xs smi-cursor-pointer smi-mt-sm">{{ arrow_down }} {{- link.title | escape -}}</span>
                {%- for collection in mega_block.settings.collection_list -%}
                    <div class="smi-menu-item smi-d-flex smi-flex-column smi-row-gap-xs">
                        <div class="smi-card smi-card--{{ settings.smi_collection_card_style }} smi-d-flex smi-flex-column smi-row-gap-xs">
                            {%- if collection.image -%}
                                {%- assign collection_image = collection.image -%}
                            {%- elsif collection.products.first and collection.products.first.images != empty -%}
                                {%- assign collection_image = collection.products.first.featured_image -%}
                            {%- else -%}
                                {%- assign collection_image = blank -%}
                            {%- endif -%}
                            <a href="{{ collection.url }}" class="smi-menu-item__thumbnail smi-media-wrapper smi-media-settings smi-border smi-shadow {{ settings.smi_animations_hover_image | default: shop.metafields.smind.settings.value.imageHoverEffect | default: 'none' | prepend: ' smi-hover-image-' }}">
                                {%- if collection_image == blank -%}
                                    {{ 'collection-apparel-1' | placeholder_svg_tag }}
                                {%- else -%}
                                    <img src="{{ collection_image | img_url: '480x' }}" alt="">
                                {%- endif -%}
                            </a>
                            <h5 class="smi-h5 smi-menu-item__text">
                                <a href="{{ collection.url }}" class="smi-d-flex smi-color-text smi-justify-content-center">{{ collection.title }}</a>
                            </h5>
                        </div>
                    </div>
                {%- endfor -%}
            </div>
        </div>
    </div>
</div>
                        {%- endif -%}
                        {%- if mega_block.type == 'mega_banner' -%}
                            {%-liquid
    assign number_column = mega_block.settings.number_column | times: 1
    assign banner1 = mega_block.settings.banner1
    assign banner2 = mega_block.settings.banner2
    assign number_banner = 0
    if banner1 != blank
        assign number_banner = number_banner | plus: 1
    endif
    if banner2 != blank
        assign number_banner = number_banner | plus: 1
    endif
    assign menu_width = 100
    assign banner_width = 100
-%}
<div class="smi-color-{{ color_schema }} smi-mega smi-mega--banner smi-dropdown--style smi-mega--divider-{{section.settings.show_divider}}" style="--column: {{ number_column }}; --banner: {{ number_banner }}; --position: {{ mega_block.settings.banner_position }}">
    <div class="smi-mega__outer smi-w-100">
        <div class="smi-container{%- if section.settings.full_width -%}-fluid{%- endif -%}">
            <div class="smi-mega__inner smi-d-block smi-d-lg-flex smi-align-items-start smi-py-xl smi-mega__column-{{number_column}} smi-g-columm smi-g-row">
                <span class="smi-menu-back smi-d-flex smi-d-lg-none smi-align-items-center smi-column-gap-xs smi-cursor-pointer smi-mt-sm">{{ arrow_down }} {{- link.title | escape -}}</span>
                {%- if link.links != blank -%}
                    {%-liquid
                        assign column_child = number_column | minus: number_banner
                        if column_child > link.links.size 
                            assign column_child = link.links.size
                        endif                
                    -%}
                    <div class="smi-item-links smi-d-block smi-d-lg-flex smi-g-columm smi-g-row smi-flex-wrap" style="--column-child: {{ column_child }}">
                        {%- for childlink in link.links -%}
                            <div
                                id="smi-menu-item-{{ link.handle }}-{{ childlink.handle }}"
                                class="smi-menu-item {% if childlink.current %} smi-menu-item--active {% endif %}"
                            >
                                <a href="{{ childlink.url }}" class="smi-d-flex smi-align-items-center smi-justify-content-between smi-text-menu smi-color-text smi-text-menu">
                                    <span>{{ childlink.title | escape }}</span>
                                    {%- if childlink.links != blank -%} 
                                        <span class=" smi-d-block smi-d-lg-none">{{ arrow_down }}</span>
                                    {%- endif -%}
                                </a>
                                {%- if childlink.links != blank -%}
                                    <ul class="smi-sub-mega-menu smi-px-0 smi-d-block smi-d-lg-flex smi-flex-column smi-row-gap-xs  smi-mt-sm">
                                        <span class="smi-menu-back smi-d-flex smi-d-lg-none smi-align-items-center smi-column-gap-xs smi-cursor-pointer smi-mt-sm">{{ arrow_down }} {{- childlink.title | escape -}}</span>
                                        {%- for grandchildlink in childlink.links -%}
                                            <li
                                                id="smi-menu-item-{{ link.handle }}-{{ childlink.handle }}-{{ grandchildlink.handle }}"
                                                class="smi-menu-item smi-list-style-none {% if grandchildlink.current %} smi-menu-item--active {% endif %}"
                                            >
                                                <a href="{{ grandchildlink.url }}" class="smi-d-flex smi-align-items-center smi-justify-content-between smi-text-menu smi-color-text-75"><span>{{ grandchildlink.title | escape }}</span></a>
                                            </li>
                                        {%- endfor -%}
                                    </ul>
                                {%- endif -%}
                            </div>
                        {%- endfor -%}
                    </div>
                {%- endif -%}
                {%- if banner1 or banner2 -%}
                    <div class="smi-item-banner smi-d-none smi-d-lg-flex smi-g-columm smi-g-row smi-flex-wrap smi-item-banner--column-{{ number_banner }}">
                        {%- if banner1 -%}
                            {%-liquid
                                assign banner1_heading = mega_block.settings.heading1 | strip    
                                assign banner1_link = mega_block.settings.link1
                            -%}
                            <div class="smi-menu-item-banner smi-menu-item-banner--banner1 smi-d-flex smi-flex-column smi-row-gap-sm">
                                <a class="smi-menu-item-banner__image smi-lh-0 {{ settings.smi_animations_hover_image | default: shop.metafields.smind.settings.value.imageHoverEffect | default: 'none' | prepend: ' smi-hover-image-' }} smi-media-wrapper smi-border smi-shadow" href="{{ banner1_link }}">
                                    {{ banner1 | image_url: width: 450 | image_tag: loading: 'lazy', class: 'smi-media-settings' }}
                                </a>
                                {%- if banner1_heading != blank -%}
                                    <h5 class="smi-menu-item-banner__heading {{mega_block.settings.heading1_size}} smi-color-text"><a href="{{ banner1_link }}">{{ banner1_heading }}</a></h5>
                                {%- endif -%}
                            </div>
                        {%- endif -%}
                        {%- if banner2 -%}
                            {%-liquid
                                assign banner2_heading = mega_block.settings.heading2 | strip    
                                assign banner2_link = mega_block.settings.link2
                            -%}
                            <div class="smi-menu-item-banner smi-menu-item-banner--banner2 smi-d-flex smi-flex-column smi-row-gap-sm">
                                <a class="smi-menu-item-banner__image smi-lh-0 {{ settings.smi_animations_hover_image | default: shop.metafields.smind.settings.value.imageHoverEffect | default: 'none' | prepend: ' smi-hover-image-' }} smi-media-wrapper smi-border smi-shadow" href="{{ banner2_link }}">
                                    {{ banner2 | image_url: width: 450 | image_tag: loading: 'lazy', class: 'smi-media-settings' }}
                                </a>
                                {%- if banner2_heading != blank -%}
                                    <h5 class="smi-menu-item-banner__heading {{mega_block.settings.heading2_size}} smi-color-text"><a href="{{ banner2_link }}">{{ banner2_heading }}</a></h5>
                                {%- endif -%}
                            </div>
                        {%- endif -%}
                    </div>
                {%- endif -%}
            </div>
        </div>
    </div>
</div>
                        {%- endif -%}
                        {%- if mega_block.type == 'mega_product' -%}
                            {{ 'smi-swiper-bundle.min.css' | asset_url | stylesheet_tag }}
<script src="{{ 'smi-swiper-bundle.min.js' | asset_url }}" defer data-id="swiper"></script>
<script src="{{ 'smi-slider.min.js' | asset_url }}" defer data-id="review"></script>
{%-liquid
    assign number_column = mega_block.settings.number_column | times: 1
    if number_column > link.links.size
        assign number_column = link.links.size
    endif
    assign product_heading = mega_block.settings.product_heading | strip
    assign enable_spacing = mega_block.settings.enable_spacing
    assign overlap = false
    if settings.smi_card_corner_radius == 0
        assign overlap = true
    endif
-%}
<div class="smi-mega smi-mega--product smi-dropdown--style smi-mega--divider-{{section.settings.show_divider}}" style="--column-gap: {{ number_column }}">
    <div class="smi-mega__outer smi-w-100">
    <div class="smi-container{%- if section.settings.full_width -%}-fluid{%- endif -%}">
        <div class="smi-mega__inner smi-d-block smi-d-lg-flex smi-py-xl smi-mega--column-{{number_column}} smi-g-columm smi-g-row smi-flex-wrap ">
            <span class="smi-menu-back smi-d-flex smi-d-lg-none smi-align-items-center smi-column-gap-xs smi-cursor-pointer smi-mt-sm">{{ arrow_down }} {{- link.title | escape -}}</span>
            <div class="smi-item-links smi-d-block smi-d-lg-flex smi-g-columm smi-g-row smi-flex-wrap" style="--column-child: {{ column_child }}">
            {%- if link.links != blank -%}
                    {%- for childlink in link.links -%}
                        <div
                            id="smi-menu-item-{{ link.handle }}-{{ childlink.handle }}"
                            class="smi-menu-item {% if childlink.current %} smi-menu-item--active {% endif %}"
                        >
                            <a href="{{ childlink.url }}" class="smi-d-flex smi-align-items-center smi-justify-content-between smi-text-menu smi-color-text smi-text-menu">
                                <span>{{ childlink.title | escape }}</span>
                                {%- if childlink.links != blank -%} 
                                    <span class=" smi-d-block smi-d-lg-none">{{ arrow_down }}</span>
                                {%- endif -%}
                            </a>
                            {%- if childlink.links != blank -%}
                                <ul class="smi-sub-mega-menu smi-px-0 smi-d-block smi-d-lg-flex smi-flex-column smi-row-gap-xs  smi-mt-sm">
                                    <span class="smi-menu-back smi-d-flex smi-d-lg-none smi-align-items-center smi-column-gap-xs smi-cursor-pointer smi-mt-sm">{{ arrow_down }} {{- childlink.title | escape -}}</span>
                                    {%- for grandchildlink in childlink.links -%}
                                        <li
                                            id="smi-menu-item-{{ link.handle }}-{{ childlink.handle }}-{{ grandchildlink.handle }}"
                                            class="smi-menu-item smi-list-style-none {% if grandchildlink.current %} smi-menu-item--active {% endif %}"
                                        >
                                            <a href="{{ grandchildlink.url }}" class="smi-d-flex smi-align-items-center smi-justify-content-between smi-text-menu smi-color-text-75"><span>{{ grandchildlink.title | escape }}</span></a>
                                        </li>
                                    {%- endfor -%}
                                </ul>
                            {%- endif -%}
                        </div>
                    {%- endfor -%}
            {%- endif -%}
            </div>
            {%- if mega_block.settings.product_list.count > 0 -%}
                    <style>
                        #shopify-section-{{ section.id }} .smi-product-card-wrapper {
                        --color-shadow-section: var(--color-shadow);
                        --color-border-section: var(--color-foreground);
                        }
                    </style>
                    {%-liquid
                        if settings.smi_card_style
                            assign card_style = settings.smi_card_style
                        else
                            assign global_settings = shop.metafields.smind.settings.value
                            assign card_style = global_settings.productCardStyle | default: 'standard'
                        endif
                    -%}
                    <div class="smi-spacing-{{ enable_spacing }} smi-overlap-{{ overlap }} smi-card-style-{{ card_style }} smi-media-{{ mega_block.settings.media_ratio }} smi-product-card-wrapper smi-blob-wrapper smi-d-none smi-d-lg-block smi-mega-products smi-mega-swiper {% if link.links == blank %} smi-mega-products--no-border {% endif %} {{ mega_block.settings.media_shape }}
                        " id="smi-mega-swiper-{{ mega_block.id }}-{{ menu_loop }}">
                        <div class="smi-mega-products__heading smi-mb-md smi-d-flex smi-align-items-center smi-justify-content-between">
                            {%- if product_heading != blank -%}
                                <h4 class="smi-h4 smi-color-text">{{- product_heading -}}</h4>
                            {%- endif -%}  
                            {% if section.settings.arrow_style != 'none' %}
  <div class="smi-component-arrow-slider">
    <div class="arrow-slider-content">
      <div class="{{ section.settings.arrow_style }} arrow-icon arrow-slider-left smi-cursor-pointer">
        {% if section.settings.arrow_style == 'arr-style-2' or 
          section.settings.arrow_style == 'arr-square-style-4' or
          section.settings.arrow_style == 'arr-square-style-5' or
          section.settings.arrow_style == 'arr-square-style-6' or
          section.settings.arrow_style == 'arr-circle-style-4' or
          section.settings.arrow_style == 'arr-circle-style-5'
        %}
            {% render 'smi-icons', icon: 'arrow-left-2' %}
        {% else %}
            {% render 'smi-icons', icon: 'arrow-left' %}
        {% endif %}
      </div>
      <div class="{{ section.settings.arrow_style }} arrow-icon arrow-slider-right smi-cursor-pointer">
        {% if section.settings.arrow_style == 'arr-style-2' or 
          section.settings.arrow_style == 'arr-square-style-4' or
          section.settings.arrow_style == 'arr-square-style-5' or
          section.settings.arrow_style == 'arr-square-style-6' or
          section.settings.arrow_style == 'arr-circle-style-4' or
          section.settings.arrow_style == 'arr-circle-style-5'
        %}
            {% render 'smi-icons', icon: 'arrow-right-2' %}
        {% else %}
            {% render 'smi-icons', icon: 'arrow-right' %}
      {% endif %}
      </div>
    </div>
  </div>
{% endif %}
                        </div>
                        {%- liquid
                            if mega_block.settings.enable_spacing == false
                                assign grid_horizontal = 0
                            else
                                assign grid_horizontal = settings.smi_spacing_grid_horizontal
                            endif
                            assign desktop_items = mega_block.settings.number_column | times: 1
                            assign tablet_items = 2
                            if desktop_items == 1
                            assign tablet_items = 1
                            endif
                            assign product_color_schema = section.settings.product_color_scheme
                        -%}
                            <div class="smi-items {{ mega_block.settings.media_shape }}">
                            <div
                                class="swiper smi-swiper"
                                data-slider='
                                    {
                                    "spaceBetween": 30,
                                    "destopItems": {{ desktop_items }},
                                    "tabletItems": {{ tablet_items }},
                                    "autoplay": {{ false }},
                                    "dotStyle": "none" 
                                    }
                                '
                            >
                                <div class="swiper-wrapper">
                                    {% assign shape_index = 1 %}                         
                                    {%- for product in mega_block.settings.product_list -%}
                                        {%-liquid
    assign media_ratio = block.settings.media_ratio
    assign media_shape = block.settings.media_shape
    assign media_classes = 'smi-w-100 smi-object-fit-cover '
    if media_shape != 'default' and media_shape != 'round'
        if shape_index > 6
            assign shape_index = 1
        endif
        if shape_index < 6 
            assign forloop_next = shape_index | plus: 1
        else
            assign forloop_next = 1
        endif
        assign media_classes = media_classes | append: ' smi-shape-blob-' | append: shape_index
        assign shape_index = shape_index | plus: 1
        assign shape_hover = '--shape-blob-' | append: forloop_next
    endif
    if media_ratio == 'auto' 
        assign media_classes = media_classes | append: ' smi-h-auto'
    else
        assign media_classes = media_classes | append: ' smi-h-100 smi-p-absolute'
    endif
    assign media_wrapper_classes = 'smi-media-wrapper smi-border smi-shadow smi-lh-0 smi-overflow-hidden smi-p-relative smi-' | append: media_shape
    if media_shape contains 'blob'
        assign media_wrapper_classes = media_wrapper_classes | append: ' smi-blob-wrapper smi-has-blob'
    endif
-%}
                                        <div class="swiper-slide">
                                            {%- liquid  
    assign show_vendor = block.settings.show_vendor
    assign show_second_image = block.settings.show_second_image
    assign media_ratio = block.settings.media_ratio
    assign media_shape = block.settings.media_shape
    assign show_swatch_color = block.settings.show_swatch_color
    assign content_alignment = block.settings.content_alignment
    if settings.smi_card_style
        assign card_style = settings.smi_card_style
    else
        assign global_settings = shop.metafields.smind.settings.value
        assign card_style = global_settings.productCardStyle | default: 'standard'
    endif
    assign target = product.selected_or_first_available_variant
    assign compare_at_price = target.compare_at_price
    assign price = target.price | default: 1999
    assign available = target.available | default: false
    if available == false and target.inventory_policy == 'continue' 
        assign available = true
    endif
    assign thumbnail_class = 'smi-image-inner smi-d-block smi-lh-0 smi-overflow-hidden smi-p-relative'
-%}
  <div class="smi-product-card smi-card smi-card--{{card_style}} smi-product-card--{{media_ratio-}}
    {%- if card_style == 'card' -%}
            {{- ' smi-color-' | append: product_color_schema -}}
            {{- ' smi-border smi-shadow' -}}
    {%- endif -%}
    {{ ' smi-product-card--' | append: content_alignment -}}
    " style="--media-ratio: {{ media_ratio }}; --alignment: {{ content_alignment }}">
    <div class="smi-product-card__thumbnail smi-p-relative smi-overflow-hidden
        {%- if card_style == 'standard' -%}
            {%- if media_shape != 'shape-blob' -%}
            {{- ' smi-border smi-shadow ' -}}
            smi-{{ media_shape -}}
            {%- endif -%}
            {{- ' smi-color-' | append: product_color_schema }}
            {{- ' smi-mb-sm' -}}            
        {%- endif -%}
        ">
        {%- if product.featured_media -%}
            {%-liquid
                assign has_second_image = false
                if product.media[1] != null and show_second_image
                    assign has_second_image = true
                endif    
                assign media_classes = media_classes | replace: 'smi-border', ''
                assign media_classes = media_classes | replace: 'smi-shadow', ''
                assign media_wrapper_classes = media_wrapper_classes | replace: 'smi-media-wrapper', ''
            -%}
            <a class="{{ thumbnail_class }} {%- if has_second_image %} smi-has-second-image {% endif -%} smi-{{media_shape}} {{ media_wrapper_classes }}" href="{{product.url}}" style="--media-ratio: {{ media_ratio }}; --shape-hover: var({{ shape_hover }})" data-type="item-image">
                <img loading="lazy" class="smi-opacity-1 smi-w-100 {% if media_ratio == 'auto' %} smi-h-auto {% else %} smi-p-absolute smi-object-fit-cover smi-top-left-0  smi-h-100 {% endif %} {{ media_classes }}" src="{{ product.featured_media | image_url: width: 600 }}" alt="{{ product.featured_media.alt | escape }}">
                {%- if has_second_image -%}
                    <img loading="lazy" class="smi-wh-100 smi-p-absolute smi-object-fit-cover smi-top-left-0 smi-opacity-0 {{ media_classes }}" src="{{ product.media[1] | image_url: width: 600 }}" alt="" >
                {%- endif -%}
            </a>
        {% else %}
            {%-liquid
                assign default_image_class = 'smi-default-image smi-opacity-1 smi-w-100 ' | append: media_classes
                if media_ratio == 'auto'
                    assign default_image_class = default_image_class | append: ' smi-h-auto'
                else
                    assign default_image_class = default_image_class | append: ' smi-p-absolute smi-object-fit-cover smi-top-left-0  smi-h-100'
                endif
            -%}
        <a class="{{ thumbnail_class }} smi-{{media_shape}} {{ media_wrapper_classes }}" href="{{product.url}}" style="--media-ratio: {{ media_ratio }}; --shape-hover: var({{ shape_hover }})">           
                {{ 'product-apparel-2' | placeholder_svg_tag: default_image_class }} 
            </a>
        {%- endif -%}
        {%- if available == true %}
        <div class="smi-button-cart {% if product.has_only_default_variant %} _cart_now {% endif %} smi-p-absolute smi-opacity-0 smi-visibility-hidden smi-button-wrapper">
            {% assign cart_added_text = 'smind.product.cart_added' | t %}
            {% assign add_cart_text = 'smind.product.add_to_cart' | t %}
            {% assign add_cart_failed = 'smind.product.cart_failed' | t %}
            {%- if product.has_only_default_variant -%}
                <a href="{{ product.url }}?variant={{target.id}}" data-id="{{ target.id }}" data-text-added="{{cart_added_text}}" data-text-add-cart="{{add_cart_text}}" data-text-failed="{{ add_cart_failed }}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow"><span class="smi-cart-text">{{ add_cart_text }}</span><span class="smi-loading smi-effect-loading smi-d-none"></span></a>
            {%- else -%}
                <a href="{{ product.url }}?variant={{target.id}}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow">{{- 'smind.product.select_options' | t -}}</a>
            {%- endif -%}
        </div>
        {% endif %}
        {%-liquid
            if settings.smi_enable_badges != nil
                assign enable_badges = settings.smi_enable_badges
            else
                assign global_settings = shop.metafields.smind.settings.value
                assign enable_badges = global_settings.enableBadges
                if enable_badges == nil
                    assign enable_badges = true
                endif
            endif
        -%}
      {% if enable_badges %}
          <div class="smi-labels smi-p-absolute smi-d-flex smi-flex-column smi-align-items-start smi-row-gap-xs">
            {%- if compare_at_price > price %}
                {%-liquid
                    assign sale_percent = compare_at_price | minus: price | times: 100.0 | divided_by: compare_at_price | round | append: '%'
                    assign sale_price = compare_at_price | minus: price | json | money    
                -%}
                <div class="smi-badges smi-text-badge smi-d-inline-block smi-text-transform-uppercase smi-px-sm smi-label smi-sale">
                    {{ 'smind.product.sale' | t: sale_percent: sale_percent, sale_amount: sale_price }}
                </div>
            {% endif -%}
            {%- if available == false %}
                <div class="smi-badges smi-badges--sold-out  smi-text-badge smi-d-inline-block smi-text-transform-uppercase smi-label smi-px-sm">{{ 'smind.product.sold_out' | t }}</div>
            {% endif -%}
          </div>
      {% endif %}
    </div>
    <div class="smi-product-card__info">
      {% if show_vendor %}
        <div class="smi-product-vendor smi-text-sm smi-color-text-75 smi-lsmi-03">{{ product.vendor }}</div>
      {% endif %}
      <h3 class="smi-h5 smi-product-title" >
        <a href="{{product.url}}" class="smi-color-text" data-type="item-heading">{{ product.title | escape }}</a>
      </h3>
      {% liquid
        assign currency_code_enabled = settings.smi_currency_code_enabled | default: shop.metafields.smind.settings.value.showCurrencyCode | default: false
        if currency_code_enabled
          assign money_price = price | money_with_currency
        else
          assign money_price = price | money
        endif
        if target == product and product.price_varies
          assign money_price = 'products.product.price.from_price_html' | t: price: money_price
        endif
      %}
      <div
        class="smi-price smi-d-flex smi-column-gap-xs 
          {%- if available == false %} smi-price--sold-out {% endif -%}
          {%- if compare_at_price > price %} smi-price--on-sale {% endif -%}
          {%- if product.price_varies == false and product.compare_at_price_varies %} smi-price--no-compare{% endif -%}
        "
      >
        {%- unless product.price_varies == false and product.compare_at_price_varies %}
            {%- if compare_at_price != blank -%}
                <span class="smi-price__origin smi-text-price-md smi-color-text-55 smi-text-decoration-line-through">
                {% if currency_code_enabled %}
                    {{ compare_at_price | money_with_currency }}
                {% else %}
                    {{ compare_at_price | money }}
                {% endif %}
                </span>
            {%- endif -%}
          {%- endunless -%}
        <span class="smi-price__sale smi-text-price-md smi-color-text">{{ money_price }}</span>
      </div>
      {%-liquid
        if settings.smi_color_configuration
            assign color_configuration_br = settings.smi_color_configuration |  newline_to_br |  split: '<br />'
        else
            assign global_settings = shop.metafields.smind.settings.value
            assign color_configuration_br = global_settings.variantValue |  newline_to_br |  split: '<br />'
        endif
      -%}
      <div class="smi-product-description">
          {{- product.description | strip_html | truncatewords: 15, '...' -}}
      </div>
      {%- unless product.has_only_default_variant -%}
        {% if show_swatch_color %}
            {%-liquid
                if settings.smi_color_variant_name
                    assign smi_color_variant_name_dc = settings.smi_color_variant_name | strip | downcase
                else
                    assign global_settings = shop.metafields.smind.settings.value
                    assign smi_color_variant_name_dc = global_settings.variantName | strip | downcase
                endif    
            -%}
          <div class="smi-variant-wrapper smi-variants smi-mt-xs smi-d-inline-flex smi-column-gap-xs smi-row-gap-fix-xs smi-flex-wrap">
          {%- for option in product.options_with_values -%}
              {%- assign option_name = option.name | strip | downcase -%}
              {%-liquid
                assign matchOption = false
                if smi_color_variant_name_dc != blank
                    if option_name == smi_color_variant_name_dc
                        assign matchOption = true
                    endif
                else
                    if option_name == 'color' or option_name == 'colour' or option_name == 'colors' or option_name == 'colours'
                        assign matchOption = true
                    endif
                endif
              -%}
              {% if matchOption == true %}
                  {%- assign product_option_position_0index = option.position | minus: 1 -%}
                  {%- assign number_options = option.values.size | times: 1 -%}
                  {%- for product_option_value in option.values -%}
                      {%- liquid
                      assign option_value_variant = false
                      for variant in product.variants
                          if variant.options[product_option_position_0index] == product_option_value
                          assign option_value_variant = variant
                          break
                          endif
                      endfor
                      assign is_unavailable = true
                      for variant in product.variants
                          if variant.available and variant.options[product_option_position_0index] == product_option_value
                          assign is_unavailable = false
                          break
                          endif
                      endfor
                      assign img_url = option_value_variant.featured_media | img_url: '1x1' | replace: '_1x1.', '_500x.'
                      assign color_name = product_option_value | escape | downcase
                      assign class_desktop_hidden = ''
                      assign class_mobile_hidden = ''
                      if forloop.index > 4
                        assign class_desktop_hidden = 'smi-variants__item--desktop-hidden'
                      endif
                      if forloop.index > 3
                        assign class_mobile_hidden = 'smi-variants__item--mobile-hidden'
                      endif
                      -%}
                      <div
                      class="smi-variants__item smi-cursor-pointer {{ class_desktop_hidden }} {{ class_mobile_hidden }} {% if forloop.index == 1 %} smi-variants__item--active {% endif %}"
                      {% if option_value_variant.featured_media %}
                          data-media-url="{{ img_url }}"
                      {% endif %}
                      data-price="{{ option_value_variant.price | money }}"
                      data-id="{{option_value_variant.id}}"
                      >
                      {%-liquid
                        assign is_image = false
                        for color_str in color_configuration_br
                            assign color_temp = color_str | strip | split: ':'
                            if color_temp.size == 2
                                assign color_temp_0 = color_temp[0] | strip | downcase
                                assign color_temp_1 = color_temp[1] | strip
                                if color_name == color_temp_0
                                    if color_temp_1 contains '.jpg' or color_temp_1 contains '.JPG' or color_temp_1 contains '.png' or color_temp_1 contains '.PNG' or color_temp_1 contains '.gif' or color_temp_1 contains '.GIF' or color_temp_1 contains '.jpeg'
                                        assign is_image = true
                                    endif
                                    assign color_name = color_temp_1
                                    break
                                endif
                            endif
                        endfor
                      -%}
                        {%- if is_image -%}
                            <span class="smi-d-block smi-wh-100 smi-p-relative smi-overflow-hidden">
                                <img src="{{ color_name | file_img_url: 'thumb' }}" width="" height="" alt="" class="smi-wh-100 smi-object-fit-cover smi-p-absolute">
                            </span>
                        {%- else -%}
                            <span class="smi-d-block smi-wh-100" style="background:{{ color_name }}"></span>
                        {%- endif -%}
                        <div class="smi-tooltip">{{ product_option_value }}</div>
                      </div>
                  {% endfor %}
                  {% if number_options > 4 %}
                    <div class="smi-variants__item smi-variants__item--more smi-cursor-pointer smi-align-items-center smi-justify-content-center smi-d-none smi-d-md-flex">
                        <span class="smi-text-xs smi-color-text smi-lsmi-03">+{{ number_options | minus: 4 }}</span>
                    </div>
                  {% endif %}
                  {% if number_options > 3 %}
                    <div class="smi-variants__item smi-variants__item--more smi-cursor-pointer smi-align-items-center smi-justify-content-center smi-d-flex smi-d-md-none">
                        <span class="smi-text-xs smi-color-text smi-lsmi-03">+{{ number_options | minus: 3 }}</span>
                    </div>
                  {% endif %}
              {% endif %}
          {% endfor %}
          </div>
      {% endif %}
    {% endunless %}
      {%- if available == true %}
        <div class="smi-button-cart {% if product.has_only_default_variant %} _cart_now {% endif %} smi-p-absolute smi-opacity-0 smi-visibility-hidden smi-button-wrapper">
            {% assign cart_added_text = 'smind.product.cart_added' | t %}
            {% assign add_cart_text = 'smind.product.add_to_cart' | t %}
            {% assign add_cart_failed = 'smind.product.cart_failed' | t %}
            {%- if product.has_only_default_variant -%}
                <a href="{{ product.url }}?variant={{target.id}}" data-id="{{ target.id }}" data-text-added="{{cart_added_text}}" data-text-add-cart="{{add_cart_text}}" data-text-failed="{{ add_cart_failed }}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow"><span class="smi-cart-text">{{ add_cart_text }}</span><span class="smi-loading smi-effect-loading smi-d-none"></span></a>
            {%- else -%}
                <a href="{{ product.url }}?variant={{target.id}}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow">{{- 'smind.product.select_options' | t -}}</a>
            {%- endif -%}
        </div>
      {% endif %}
    </div>
  </div>
                                        </div>
                                    {% endfor %}
                                </div>        
                            </div>
                            </div>
                    </div>
            {%- endif -%} 
        </div>
    </div>
</div>
</div>
                        {%- endif -%}
                        {%- if mega_block.type == 'mega_product_tab' -%}
                            {{ 'smi-swiper-bundle.min.css' | asset_url | stylesheet_tag }}
<script src="{{ 'smi-swiper-bundle.min.js' | asset_url }}" defer data-id="swiper"></script>
<script src="{{ 'smi-slider.min.js' | asset_url }}" defer data-id="review"></script>
{%-liquid
    assign number_column = mega_block.settings.number_column | times: 1
    assign product_heading = mega_block.settings.product_heading | strip
    assign show_vendor = mega_block.settings.show_vendor
    assign show_second_image = mega_block.settings.show_second_image
    assign media_ratio = mega_block.settings.media_ratio
    assign media_shape = mega_block.settings.media_shape
    assign show_swatch_color = mega_block.settings.show_swatch_color
    assign content_alignment = mega_block.settings.content_alignment
    assign enable_spacing = mega_block.settings.enable_spacing
    assign overlap = false
    if settings.smi_card_corner_radius == 0
        assign overlap = true
    endif
    if settings.smi_card_style
        assign card_style = settings.smi_card_style
    else
        assign global_settings = shop.metafields.smind.settings.value
        assign card_style = global_settings.productCardStyle | default: 'standard'
    endif
-%}
<div class="smi-color-{{ color_schema }} smi-mega smi-mega--product-tab smi-dropdown--style smi-mega--divider-{{section.settings.show_divider}}" style="--column-gap: {{ number_column }}">
    <style>
        #shopify-section-{{ section.id }} .smi-product-card-wrapper {
        --color-shadow-section: var(--color-shadow);
        --color-border-section: var(--color-foreground);
        }
    </style>
    <div class="smi-mega__outer smi-w-100">
        <div class="smi-container{%- if section.settings.full_width -%}-fluid{%- endif -%}">
            <div class="smi-mega__inner smi-d-block smi-d-lg-flex smi-py-lg smi-mega--column-{{number_column}} smi-column-gap-lg smi-g-row smi-flex-wrap">
                <span class="smi-menu-back smi-d-flex smi-d-lg-none smi-align-items-center smi-column-gap-xs smi-cursor-pointer smi-mt-sm">{{ arrow_down }} {{- link.title | escape -}}</span>
                <div class="smi-mega-tabs">
                    {%- for collection in mega_block.settings.collection_list -%}
                        <div class="smi-mega-tabs__item {% if forloop.index == 1 %} smi-mega-tabs__item--active {% endif %} smi-d-flex smi-flex-column">
                            <a href="{{ collection.url }}" class="smi-text-menu smi-color-text smi-d-flex smi-align-items-center smi-justify-content-between" data-target="smi-mega-swiper-{{ collection.id }}-{{ menu_loop }}">
                                {{ collection.title }}
                                {% render 'smi-icons', icon: 'arrow-right'  %}
                            </a>
                        </div>
                    {%- endfor -%}
                </div>
                <div class="smi-spacing-{{ enable_spacing }} smi-overlap-{{ overlap }} smi-card-style-{{ card_style }} smi-media-{{ mega_block.settings.media_ratio }} smi-product-card-wrapper smi-blob-wrapper smi-mega-products {{ mega_block.settings.media_shape }}" >                    
                {%- liquid
                    if mega_block.settings.enable_spacing == false
                        assign grid_horizontal = 0
                    else
                        assign grid_horizontal = settings.smi_spacing_grid_horizontal
                    endif
                    assign desktop_items = mega_block.settings.number_column | times: 1
                    assign tablet_items = 2
                    if desktop_items == 1
                    assign tablet_items = 1
                    endif
                    assign product_color_schema = section.settings.product_color_scheme
                -%}
                    {%- for collection in mega_block.settings.collection_list -%}
                        <div class="smi-items {{ mega_block.settings.media_shape }}">
                        <div class="smi-mega-swiper {% if forloop.index == 1 %} smi-mega-swiper--active {% endif %}" id="smi-mega-swiper-{{ collection.id }}-{{ menu_loop }}">
                            <div
                                class="swiper smi-swiper"
                                data-slider='
                                    {
                                    "spaceBetween": 30,
                                    "destopItems": {{ desktop_items }},
                                    "tabletItems": {{ tablet_items }},
                                    "autoplay": {{ false }},
                                    "dotStyle": "none" 
                                    }
                                '
                            >
                                <div class="swiper-wrapper">
                                    {% assign shape_index = 1 %}      
                                    {% assign product_size = collection.products.size %}
                                    {%- for product in collection.products limit: 12 -%}
                                        <div class="swiper-slide">
                                            {%- liquid  
    assign show_vendor = block.settings.show_vendor
    assign show_second_image = block.settings.show_second_image
    assign media_ratio = block.settings.media_ratio
    assign media_shape = block.settings.media_shape
    assign show_swatch_color = block.settings.show_swatch_color
    assign content_alignment = block.settings.content_alignment
    if settings.smi_card_style
        assign card_style = settings.smi_card_style
    else
        assign global_settings = shop.metafields.smind.settings.value
        assign card_style = global_settings.productCardStyle | default: 'standard'
    endif
    assign target = product.selected_or_first_available_variant
    assign compare_at_price = target.compare_at_price
    assign price = target.price | default: 1999
    assign available = target.available | default: false
    if available == false and target.inventory_policy == 'continue' 
        assign available = true
    endif
    assign thumbnail_class = 'smi-image-inner smi-d-block smi-lh-0 smi-overflow-hidden smi-p-relative'
-%}
  <div class="smi-product-card smi-card smi-card--{{card_style}} smi-product-card--{{media_ratio-}}
    {%- if card_style == 'card' -%}
            {{- ' smi-color-' | append: product_color_schema -}}
            {{- ' smi-border smi-shadow' -}}
    {%- endif -%}
    {{ ' smi-product-card--' | append: content_alignment -}}
    " style="--media-ratio: {{ media_ratio }}; --alignment: {{ content_alignment }}">
    <div class="smi-product-card__thumbnail smi-p-relative smi-overflow-hidden
        {%- if card_style == 'standard' -%}
            {%- if media_shape != 'shape-blob' -%}
            {{- ' smi-border smi-shadow ' -}}
            smi-{{ media_shape -}}
            {%- endif -%}
            {{- ' smi-color-' | append: product_color_schema }}
            {{- ' smi-mb-sm' -}}            
        {%- endif -%}
        ">
        {%- if product.featured_media -%}
            {%-liquid
                assign has_second_image = false
                if product.media[1] != null and show_second_image
                    assign has_second_image = true
                endif    
                assign media_classes = media_classes | replace: 'smi-border', ''
                assign media_classes = media_classes | replace: 'smi-shadow', ''
                assign media_wrapper_classes = media_wrapper_classes | replace: 'smi-media-wrapper', ''
            -%}
            <a class="{{ thumbnail_class }} {%- if has_second_image %} smi-has-second-image {% endif -%} smi-{{media_shape}} {{ media_wrapper_classes }}" href="{{product.url}}" style="--media-ratio: {{ media_ratio }}; --shape-hover: var({{ shape_hover }})" data-type="item-image">
                <img loading="lazy" class="smi-opacity-1 smi-w-100 {% if media_ratio == 'auto' %} smi-h-auto {% else %} smi-p-absolute smi-object-fit-cover smi-top-left-0  smi-h-100 {% endif %} {{ media_classes }}" src="{{ product.featured_media | image_url: width: 600 }}" alt="{{ product.featured_media.alt | escape }}">
                {%- if has_second_image -%}
                    <img loading="lazy" class="smi-wh-100 smi-p-absolute smi-object-fit-cover smi-top-left-0 smi-opacity-0 {{ media_classes }}" src="{{ product.media[1] | image_url: width: 600 }}" alt="" >
                {%- endif -%}
            </a>
        {% else %}
            {%-liquid
                assign default_image_class = 'smi-default-image smi-opacity-1 smi-w-100 ' | append: media_classes
                if media_ratio == 'auto'
                    assign default_image_class = default_image_class | append: ' smi-h-auto'
                else
                    assign default_image_class = default_image_class | append: ' smi-p-absolute smi-object-fit-cover smi-top-left-0  smi-h-100'
                endif
            -%}
        <a class="{{ thumbnail_class }} smi-{{media_shape}} {{ media_wrapper_classes }}" href="{{product.url}}" style="--media-ratio: {{ media_ratio }}; --shape-hover: var({{ shape_hover }})">           
                {{ 'product-apparel-2' | placeholder_svg_tag: default_image_class }} 
            </a>
        {%- endif -%}
        {%- if available == true %}
        <div class="smi-button-cart {% if product.has_only_default_variant %} _cart_now {% endif %} smi-p-absolute smi-opacity-0 smi-visibility-hidden smi-button-wrapper">
            {% assign cart_added_text = 'smind.product.cart_added' | t %}
            {% assign add_cart_text = 'smind.product.add_to_cart' | t %}
            {% assign add_cart_failed = 'smind.product.cart_failed' | t %}
            {%- if product.has_only_default_variant -%}
                <a href="{{ product.url }}?variant={{target.id}}" data-id="{{ target.id }}" data-text-added="{{cart_added_text}}" data-text-add-cart="{{add_cart_text}}" data-text-failed="{{ add_cart_failed }}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow"><span class="smi-cart-text">{{ add_cart_text }}</span><span class="smi-loading smi-effect-loading smi-d-none"></span></a>
            {%- else -%}
                <a href="{{ product.url }}?variant={{target.id}}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow">{{- 'smind.product.select_options' | t -}}</a>
            {%- endif -%}
        </div>
        {% endif %}
        {%-liquid
            if settings.smi_enable_badges != nil
                assign enable_badges = settings.smi_enable_badges
            else
                assign global_settings = shop.metafields.smind.settings.value
                assign enable_badges = global_settings.enableBadges
                if enable_badges == nil
                    assign enable_badges = true
                endif
            endif
        -%}
      {% if enable_badges %}
          <div class="smi-labels smi-p-absolute smi-d-flex smi-flex-column smi-align-items-start smi-row-gap-xs">
            {%- if compare_at_price > price %}
                {%-liquid
                    assign sale_percent = compare_at_price | minus: price | times: 100.0 | divided_by: compare_at_price | round | append: '%'
                    assign sale_price = compare_at_price | minus: price | json | money    
                -%}
                <div class="smi-badges smi-text-badge smi-d-inline-block smi-text-transform-uppercase smi-px-sm smi-label smi-sale">
                    {{ 'smind.product.sale' | t: sale_percent: sale_percent, sale_amount: sale_price }}
                </div>
            {% endif -%}
            {%- if available == false %}
                <div class="smi-badges smi-badges--sold-out  smi-text-badge smi-d-inline-block smi-text-transform-uppercase smi-label smi-px-sm">{{ 'smind.product.sold_out' | t }}</div>
            {% endif -%}
          </div>
      {% endif %}
    </div>
    <div class="smi-product-card__info">
      {% if show_vendor %}
        <div class="smi-product-vendor smi-text-sm smi-color-text-75 smi-lsmi-03">{{ product.vendor }}</div>
      {% endif %}
      <h3 class="smi-h5 smi-product-title" >
        <a href="{{product.url}}" class="smi-color-text" data-type="item-heading">{{ product.title | escape }}</a>
      </h3>
      {% liquid
        assign currency_code_enabled = settings.smi_currency_code_enabled | default: shop.metafields.smind.settings.value.showCurrencyCode | default: false
        if currency_code_enabled
          assign money_price = price | money_with_currency
        else
          assign money_price = price | money
        endif
        if target == product and product.price_varies
          assign money_price = 'products.product.price.from_price_html' | t: price: money_price
        endif
      %}
      <div
        class="smi-price smi-d-flex smi-column-gap-xs 
          {%- if available == false %} smi-price--sold-out {% endif -%}
          {%- if compare_at_price > price %} smi-price--on-sale {% endif -%}
          {%- if product.price_varies == false and product.compare_at_price_varies %} smi-price--no-compare{% endif -%}
        "
      >
        {%- unless product.price_varies == false and product.compare_at_price_varies %}
            {%- if compare_at_price != blank -%}
                <span class="smi-price__origin smi-text-price-md smi-color-text-55 smi-text-decoration-line-through">
                {% if currency_code_enabled %}
                    {{ compare_at_price | money_with_currency }}
                {% else %}
                    {{ compare_at_price | money }}
                {% endif %}
                </span>
            {%- endif -%}
          {%- endunless -%}
        <span class="smi-price__sale smi-text-price-md smi-color-text">{{ money_price }}</span>
      </div>
      {%-liquid
        if settings.smi_color_configuration
            assign color_configuration_br = settings.smi_color_configuration |  newline_to_br |  split: '<br />'
        else
            assign global_settings = shop.metafields.smind.settings.value
            assign color_configuration_br = global_settings.variantValue |  newline_to_br |  split: '<br />'
        endif
      -%}
      <div class="smi-product-description">
          {{- product.description | strip_html | truncatewords: 15, '...' -}}
      </div>
      {%- unless product.has_only_default_variant -%}
        {% if show_swatch_color %}
            {%-liquid
                if settings.smi_color_variant_name
                    assign smi_color_variant_name_dc = settings.smi_color_variant_name | strip | downcase
                else
                    assign global_settings = shop.metafields.smind.settings.value
                    assign smi_color_variant_name_dc = global_settings.variantName | strip | downcase
                endif    
            -%}
          <div class="smi-variant-wrapper smi-variants smi-mt-xs smi-d-inline-flex smi-column-gap-xs smi-row-gap-fix-xs smi-flex-wrap">
          {%- for option in product.options_with_values -%}
              {%- assign option_name = option.name | strip | downcase -%}
              {%-liquid
                assign matchOption = false
                if smi_color_variant_name_dc != blank
                    if option_name == smi_color_variant_name_dc
                        assign matchOption = true
                    endif
                else
                    if option_name == 'color' or option_name == 'colour' or option_name == 'colors' or option_name == 'colours'
                        assign matchOption = true
                    endif
                endif
              -%}
              {% if matchOption == true %}
                  {%- assign product_option_position_0index = option.position | minus: 1 -%}
                  {%- assign number_options = option.values.size | times: 1 -%}
                  {%- for product_option_value in option.values -%}
                      {%- liquid
                      assign option_value_variant = false
                      for variant in product.variants
                          if variant.options[product_option_position_0index] == product_option_value
                          assign option_value_variant = variant
                          break
                          endif
                      endfor
                      assign is_unavailable = true
                      for variant in product.variants
                          if variant.available and variant.options[product_option_position_0index] == product_option_value
                          assign is_unavailable = false
                          break
                          endif
                      endfor
                      assign img_url = option_value_variant.featured_media | img_url: '1x1' | replace: '_1x1.', '_500x.'
                      assign color_name = product_option_value | escape | downcase
                      assign class_desktop_hidden = ''
                      assign class_mobile_hidden = ''
                      if forloop.index > 4
                        assign class_desktop_hidden = 'smi-variants__item--desktop-hidden'
                      endif
                      if forloop.index > 3
                        assign class_mobile_hidden = 'smi-variants__item--mobile-hidden'
                      endif
                      -%}
                      <div
                      class="smi-variants__item smi-cursor-pointer {{ class_desktop_hidden }} {{ class_mobile_hidden }} {% if forloop.index == 1 %} smi-variants__item--active {% endif %}"
                      {% if option_value_variant.featured_media %}
                          data-media-url="{{ img_url }}"
                      {% endif %}
                      data-price="{{ option_value_variant.price | money }}"
                      data-id="{{option_value_variant.id}}"
                      >
                      {%-liquid
                        assign is_image = false
                        for color_str in color_configuration_br
                            assign color_temp = color_str | strip | split: ':'
                            if color_temp.size == 2
                                assign color_temp_0 = color_temp[0] | strip | downcase
                                assign color_temp_1 = color_temp[1] | strip
                                if color_name == color_temp_0
                                    if color_temp_1 contains '.jpg' or color_temp_1 contains '.JPG' or color_temp_1 contains '.png' or color_temp_1 contains '.PNG' or color_temp_1 contains '.gif' or color_temp_1 contains '.GIF' or color_temp_1 contains '.jpeg'
                                        assign is_image = true
                                    endif
                                    assign color_name = color_temp_1
                                    break
                                endif
                            endif
                        endfor
                      -%}
                        {%- if is_image -%}
                            <span class="smi-d-block smi-wh-100 smi-p-relative smi-overflow-hidden">
                                <img src="{{ color_name | file_img_url: 'thumb' }}" width="" height="" alt="" class="smi-wh-100 smi-object-fit-cover smi-p-absolute">
                            </span>
                        {%- else -%}
                            <span class="smi-d-block smi-wh-100" style="background:{{ color_name }}"></span>
                        {%- endif -%}
                        <div class="smi-tooltip">{{ product_option_value }}</div>
                      </div>
                  {% endfor %}
                  {% if number_options > 4 %}
                    <div class="smi-variants__item smi-variants__item--more smi-cursor-pointer smi-align-items-center smi-justify-content-center smi-d-none smi-d-md-flex">
                        <span class="smi-text-xs smi-color-text smi-lsmi-03">+{{ number_options | minus: 4 }}</span>
                    </div>
                  {% endif %}
                  {% if number_options > 3 %}
                    <div class="smi-variants__item smi-variants__item--more smi-cursor-pointer smi-align-items-center smi-justify-content-center smi-d-flex smi-d-md-none">
                        <span class="smi-text-xs smi-color-text smi-lsmi-03">+{{ number_options | minus: 3 }}</span>
                    </div>
                  {% endif %}
              {% endif %}
          {% endfor %}
          </div>
      {% endif %}
    {% endunless %}
      {%- if available == true %}
        <div class="smi-button-cart {% if product.has_only_default_variant %} _cart_now {% endif %} smi-p-absolute smi-opacity-0 smi-visibility-hidden smi-button-wrapper">
            {% assign cart_added_text = 'smind.product.cart_added' | t %}
            {% assign add_cart_text = 'smind.product.add_to_cart' | t %}
            {% assign add_cart_failed = 'smind.product.cart_failed' | t %}
            {%- if product.has_only_default_variant -%}
                <a href="{{ product.url }}?variant={{target.id}}" data-id="{{ target.id }}" data-text-added="{{cart_added_text}}" data-text-add-cart="{{add_cart_text}}" data-text-failed="{{ add_cart_failed }}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow"><span class="smi-cart-text">{{ add_cart_text }}</span><span class="smi-loading smi-effect-loading smi-d-none"></span></a>
            {%- else -%}
                <a href="{{ product.url }}?variant={{target.id}}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow">{{- 'smind.product.select_options' | t -}}</a>
            {%- endif -%}
        </div>
      {% endif %}
    </div>
  </div>
                                        </div>
                                    {% endfor %}
                                </div>    
                                {% if product_size > 0 and product_size > desktop_items %}
                                <div class="smi-arrows-wrapper">
                                    {% if section.settings.arrow_style != 'none' %}
  <div class="smi-component-arrow-slider">
    <div class="arrow-slider-content">
      <div class="{{ section.settings.arrow_style }} arrow-icon arrow-slider-left smi-cursor-pointer">
        {% if section.settings.arrow_style == 'arr-style-2' or 
          section.settings.arrow_style == 'arr-square-style-4' or
          section.settings.arrow_style == 'arr-square-style-5' or
          section.settings.arrow_style == 'arr-square-style-6' or
          section.settings.arrow_style == 'arr-circle-style-4' or
          section.settings.arrow_style == 'arr-circle-style-5'
        %}
            {% render 'smi-icons', icon: 'arrow-left-2' %}
        {% else %}
            {% render 'smi-icons', icon: 'arrow-left' %}
        {% endif %}
      </div>
      <div class="{{ section.settings.arrow_style }} arrow-icon arrow-slider-right smi-cursor-pointer">
        {% if section.settings.arrow_style == 'arr-style-2' or 
          section.settings.arrow_style == 'arr-square-style-4' or
          section.settings.arrow_style == 'arr-square-style-5' or
          section.settings.arrow_style == 'arr-square-style-6' or
          section.settings.arrow_style == 'arr-circle-style-4' or
          section.settings.arrow_style == 'arr-circle-style-5'
        %}
            {% render 'smi-icons', icon: 'arrow-right-2' %}
        {% else %}
            {% render 'smi-icons', icon: 'arrow-right' %}
      {% endif %}
      </div>
    </div>
  </div>
{% endif %}
                                </div>
                                {% endif %}
                                {% if product_size == 0 %}
                                    <p>There are no products in this collection</p>
                                {% endif %}
                            </div>
                        </div>
                        </div>
                    {%- endfor -%}
                </div>
            </div>
        </div>
    </div>
</div>
                        {%- endif -%}
                    {% else %}
                        {%- if link.links != blank -%}
                            <ul class="smi-color-{{ color_schema }} smi-sub-menu smi-sub-menu--depth-1 smi-d-block smi-d-lg-flex smi-flex-column smi-row-gap-xs smi-px-0 smi-dropdown--style smi-sub-menu--divider-{{section.settings.show_divider}} smi-border smi-shadow">
                                <span class="smi-menu-back smi-d-flex smi-d-lg-none smi-align-items-center smi-column-gap-xs smi-cursor-pointer smi-mt-sm">{{ arrow_down }} {{- link.title | escape -}}</span>
                                {%- for childlink in link.links -%}
                                    <li
                                        id="smi-menu-item-{{ link.handle }}-{{ childlink.handle }}"
                                        class="smi-menu-item smi-list-style-none {% if childlink.current %} smi-menu-item--active {% endif %} smi-p-relative smi-px-md"
                                    >
                                        <a href="{{ childlink.url }}" class="smi-d-flex smi-align-items-center smi-justify-content-between smi-column-gap-xxs smi-p-relative smi-text-md smi-color-text-75">
                                            <span>{{ childlink.title | escape }}</span>
                                            {%- if childlink.links != blank -%} {{ arrow_down }} {%- endif -%}
                                        </a>
                                        {%- if childlink.links != blank -%}
                                            <ul class="smi-sub-menu smi-sub-menu--depth-2 smi-d-block smi-d-lg-flex smi-flex-column smi-row-gap-xs smi-px-md smi-dropdown--style smi-border smi-shadow">
                                                <span class="smi-menu-back smi-d-flex smi-d-lg-none smi-align-items-center smi-column-gap-xs smi-cursor-pointer smi-mt-sm">{{ arrow_down }} {{- childlink.title | escape -}}</span>
                                                {%- for grandchildlink in childlink.links -%}
                                                    <li
                                                        id="smi-menu-item-{{ link.handle }}-{{ childlink.handle }}-{{ grandchildlink.handle }}"
                                                        class="smi-menu-item smi-list-style-none {% if grandchildlink.current %} smi-menu-item--active {% endif %}"
                                                    >
                                                        <a href="{{ grandchildlink.url }}" class="smi-text-md smi-color-text-75"><span>{{ grandchildlink.title | escape }}</span></a>
                                                    </li>
                                                {%- endfor -%}
                                            </ul>
                                        {%- endif -%}
                                    </li>
                                {%- endfor -%}
                            </ul>
                        {%- endif -%}
                    {% endif %}
                </li>
            {%- endfor -%}
        </ul>
    {%- endif -%}
    <div class="smi-actions smi-menu-actions">
        {%- if section.settings.enable_language and localization.available_languages.size > 1 -%}
    {% liquid
        assign language_size = localization.available_languages.size
    %}
    <smi-localization-form class="smi-lh-0 smi-h-100">
        {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form smi-h-100 smi-h-100 smi-m-0 smi-p-0' -%}
        <div class="smi-dropdown smi-p-relative smi-h-100 smi-dropdown-popup-wrapper">
            <button type="button" class="smi-h-100 smi-dropdown__button smi-d-flex smi-align-items-center smi-column-gap-xxs smi-border-none smi-p-0 bg-transparent smi-cursor-pointer">
                <span class="smi-text-md smi-color-text smi-lh-normal">{{ localization.language.endonym_name | capitalize }}</span>
                {%- render 'smi-icons', icon: 'arrow-down' -%}
            </button>
            <ul class="smi-color-{{ color_schema }} smi-dropdown__list smi-dropdown--style smi-dropdown--language smi-px-md smi-d-flex smi-flex-column smi-row-gap-xs smi-dropdown--divider-{{section.settings.show_divider}} smi-border smi-shadow">
                {%- for language in localization.available_languages -%}
                    <li class="smi-item smi-list-style-none {% if language.iso_code == localization.language.iso_code %} smi-item--active{% endif %}">
                        <a href="#" data-value="{{ language.iso_code }}" class="smi-text-md smi-color-text">
                            {{ language.endonym_name | capitalize }}
                        </a>
                    </li>
                {%- endfor -%}
            </ul>
            <input class="smi-selector" type="hidden" name="language_code" value="{{ localization.language.iso_code }}">
        </div>
        {%- endform -%}
    </smi-localization-form>
{% endif %}
        {%- if section.settings.enable_country  -%}
    {% liquid
        assign country_size = localization.available_countries.size
    %}
    <smi-localization-form class="smi-lh-0 smi-h-100">
        {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form smi-h-100 smi-m-0 smi-p-0' -%}
        <div class="smi-dropdown smi-p-relative smi-h-100 smi-dropdown-popup-wrapper">
            <button type="button" class="smi-h-100 smi-dropdown__button smi-d-flex smi-align-items-center smi-column-gap-xxs smi-border-none smi-p-0 bg-transparent smi-cursor-pointer">
                <p class="smi-d-flex smi-align-items-baseline smi-column-gap-xxs smi-mb-0">
                    <img src="//cdn.shopify.com/static/images/flags/{{ localization.country.iso_code | downcase }}.svg?width=32" alt="Canada" srcset="//cdn.shopify.com/static/images/flags/{{ localization.country.iso_code | downcase }}.svg?width=32 32w" width="32" height="24">
                    <span class="smi-text-md smi-color-text smi-lh-normal">{{- localization.country.currency.iso_code }}</span>
                </p>
                {%- render 'smi-icons', icon: 'arrow-down' -%}
            </button>
            <ul class="smi-color-{{ color_schema }} smi-dropdown__list smi-dropdown--style smi-dropdown--country smi-px-md smi-d-flex smi-flex-column smi-row-gap-xs smi-dropdown--divider-{{section.settings.show_divider}} smi-border smi-shadow">
                {%- for country in localization.available_countries -%}
                    <li class="smi-item smi-list-style-none {% if country.iso_code == localization.country.iso_code %} smi-item--active{% endif %}">
                        <a href="#" data-value="{{ country.iso_code }}" class="smi-text-md smi-color-text">
                            <img src="//cdn.shopify.com/static/images/flags/{{ country.iso_code | downcase }}.svg?width=32" alt="Canada" srcset="//cdn.shopify.com/static/images/flags/{{ country.iso_code | downcase }}.svg?width=32 32w" width="32" height="24">
                            {{ country.name }}
                            -
                            {{ country.currency.iso_code }}
                            {{ country.currency.symbol }}
                        </a>
                    </li>
                {%- endfor -%}
            </ul>
            <input class="smi-selector" type="hidden" name="country_code" value="{{ localization.language.iso_code }}">
        </div>
        {%- endform -%}
    </smi-localization-form>
{% endif %}
    </div>
</div>
{% endcapture %}
{% capture component_actions %}
    <div class="smi-actions smi-d-flex smi-align-items-center smi-column-gap-sm">
    {%- if desktop_layout == 'logo_top_center' -%}
        {% assign class_search = 'smi-hidden' %}
    {%- endif -%}
    {%- if section.settings.enable_language and localization.available_languages.size > 1 -%}
    {% liquid
        assign language_size = localization.available_languages.size
    %}
    <smi-localization-form class="smi-lh-0 smi-h-100">
        {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form smi-h-100 smi-h-100 smi-m-0 smi-p-0' -%}
        <div class="smi-dropdown smi-p-relative smi-h-100 smi-dropdown-popup-wrapper">
            <button type="button" class="smi-h-100 smi-dropdown__button smi-d-flex smi-align-items-center smi-column-gap-xxs smi-border-none smi-p-0 bg-transparent smi-cursor-pointer">
                <span class="smi-text-md smi-color-text smi-lh-normal">{{ localization.language.endonym_name | capitalize }}</span>
                {%- render 'smi-icons', icon: 'arrow-down' -%}
            </button>
            <ul class="smi-color-{{ color_schema }} smi-dropdown__list smi-dropdown--style smi-dropdown--language smi-px-md smi-d-flex smi-flex-column smi-row-gap-xs smi-dropdown--divider-{{section.settings.show_divider}} smi-border smi-shadow">
                {%- for language in localization.available_languages -%}
                    <li class="smi-item smi-list-style-none {% if language.iso_code == localization.language.iso_code %} smi-item--active{% endif %}">
                        <a href="#" data-value="{{ language.iso_code }}" class="smi-text-md smi-color-text">
                            {{ language.endonym_name | capitalize }}
                        </a>
                    </li>
                {%- endfor -%}
            </ul>
            <input class="smi-selector" type="hidden" name="language_code" value="{{ localization.language.iso_code }}">
        </div>
        {%- endform -%}
    </smi-localization-form>
{% endif %}
    {%- if section.settings.enable_country  -%}
    {% liquid
        assign country_size = localization.available_countries.size
    %}
    <smi-localization-form class="smi-lh-0 smi-h-100">
        {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form smi-h-100 smi-m-0 smi-p-0' -%}
        <div class="smi-dropdown smi-p-relative smi-h-100 smi-dropdown-popup-wrapper">
            <button type="button" class="smi-h-100 smi-dropdown__button smi-d-flex smi-align-items-center smi-column-gap-xxs smi-border-none smi-p-0 bg-transparent smi-cursor-pointer">
                <p class="smi-d-flex smi-align-items-baseline smi-column-gap-xxs smi-mb-0">
                    <img src="//cdn.shopify.com/static/images/flags/{{ localization.country.iso_code | downcase }}.svg?width=32" alt="Canada" srcset="//cdn.shopify.com/static/images/flags/{{ localization.country.iso_code | downcase }}.svg?width=32 32w" width="32" height="24">
                    <span class="smi-text-md smi-color-text smi-lh-normal">{{- localization.country.currency.iso_code }}</span>
                </p>
                {%- render 'smi-icons', icon: 'arrow-down' -%}
            </button>
            <ul class="smi-color-{{ color_schema }} smi-dropdown__list smi-dropdown--style smi-dropdown--country smi-px-md smi-d-flex smi-flex-column smi-row-gap-xs smi-dropdown--divider-{{section.settings.show_divider}} smi-border smi-shadow">
                {%- for country in localization.available_countries -%}
                    <li class="smi-item smi-list-style-none {% if country.iso_code == localization.country.iso_code %} smi-item--active{% endif %}">
                        <a href="#" data-value="{{ country.iso_code }}" class="smi-text-md smi-color-text">
                            <img src="//cdn.shopify.com/static/images/flags/{{ country.iso_code | downcase }}.svg?width=32" alt="Canada" srcset="//cdn.shopify.com/static/images/flags/{{ country.iso_code | downcase }}.svg?width=32 32w" width="32" height="24">
                            {{ country.name }}
                            -
                            {{ country.currency.iso_code }}
                            {{ country.currency.symbol }}
                        </a>
                    </li>
                {%- endfor -%}
            </ul>
            <input class="smi-selector" type="hidden" name="country_code" value="{{ localization.language.iso_code }}">
        </div>
        {%- endform -%}
    </smi-localization-form>
{% endif %}
    {{ 'smi-swiper-bundle.min.css' | asset_url | stylesheet_tag }}
<script src="{{ 'smi-swiper-bundle.min.js' | asset_url }}" defer data-id="swiper"></script>
<script src="{{ 'smi-slider.min.js' | asset_url }}" defer data-id="slider"></script>
{%-liquid
    assign search_block = section.blocks | where: 'type', 'header_search' | first
    assign block = search_block
    assign enable_recent = search_block.settings.enable_recent
    assign search_keywords = search_block.settings.search_keywords | strip
-%}
{%- if search_block -%}
<div class="smi-actions__search">
        <div class="smi-search-cover"></div>
        <div class="smi-search-button smi-cursor-pointer smi-lh-0 {{ class_search }}">
            {%- render 'smi-icons', icon: 'search' -%}
        </div>
        <div class="smi-search-panel smi-color-{{ color_schema }} smi-row-gap-lg smi-py-md smi-gradient">
            <div class="smi-search-panel__bar smi-d-flex smi-align-items-center smi-column-gap-md ">
                <div class="smi-p-relative smi-flex-1">
                    <div class="smi-inputs-wrapper smi-input smi-border smi-shadow smi-d-flex smi-align-items-center smi-column-gap-md sp-px-md">
                        <input type="text" placeholder="{{ 'smind.general.search' | t }}" value="{{ search.terms | escape }}">
                        <div class="smi-icons smi-d-flex smi-align-items-center smi-column-gap-sm">
                            <div class="smi-icon-clear smi-lh-0 smi-d-flex smi-align-items-center smi-column-gap-sm"><div class="_inner">{%- render 'smi-icons', icon: 'close' -%}</div><span></span></div>
                            <div class="smi-icon-search smi-lh-0">{%- render 'smi-icons', icon: 'search' -%} <span class="smi-loader"></span></div>
                        </div>
                    </div>
                    <p id="smi-no-result" class="smi-no-result smi-text-md smi-color-text-75 smi-p-absolute">No results could be found. Please try again with a different query.</p>
                </div>
                <div class="smi-search-close smi-cursor-pointer smi-lh-0">
                    {%- render 'smi-icons', icon: 'close' -%}
                </div>
            </div>
            <div class="smi-search-inner smi-d-flex smi-flex-column smi-row-gap-lg">
                <div class="smi-container smi-search-wrapper">
                    <div id="smi-search-result" class="smi-search-result"></div>
                </div>
                {%- if enable_recent -%}
                    <div class="smi-search-panel__recent smi-tags smi-d-dlex smi-flex-column smi-column-gap-xxs smi-hidden">
                        <div class="smi-tags__heading smi-text-sm smi-color-text-75">
                            {{ 'smind.general.recent_searches' | t }}
                        </div>
                        <div class="smi-d-flex smi-align-items-center smi-column-gap-xs smi-row-gap-xs smi-flex-wrap" id="smi-search-recent"></div>
                    </div>
                {%- endif -%}
                {%- if search_keywords != blank -%}
                    <div class="smi-search-panel__keywords smi-tags smi-d-dlex smi-flex-column smi-column-gap-xxs">
                        <div class="smi-tags__heading smi-text-sm smi-color-text-75">
                            {{ 'smind.general.popular_searches' | t }}
                        </div>
                        {%- assign search_keywords = search_keywords | split: ',' -%}
                        <div class="smi-d-flex smi-align-items-center smi-column-gap-xs smi-row-gap-xs smi-flex-wrap">
                            {%- for keyword in search_keywords -%}
                                {%- assign keyword_strip = keyword | strip -%}
                                <a href="#" class="smi-tags__item smi-d-inline-block smi-px-sm smi-text-sm smi-color-text">{{ keyword_strip }}</a>
                            {%- endfor -%}
                        </div>
                    </div>
                {%- endif -%}
                {%- if search_block.settings.product_list.count > 0 -%}
                    <div class="smi-container-search">
                    <div class="smi-mega-products smi-mega-swiper smi-pt-lg smi-mt-lg" id="smi-mega-swiper-{{ search_block.id }}">
                        <div class="smi-mega-products__heading smi-mb-md smi-d-flex smi-align-items-center smi-justify-content-between">
                            <h4 class="smi-h4 smi-color-text">{{- 'smind.general.popular_items' | t -}}</h4>
                            <div class="smi-custom-dots">{% if section.settings.arrow_style != 'none' %}
  <div class="smi-component-arrow-slider">
    <div class="arrow-slider-content">
      <div class="{{ section.settings.arrow_style }} arrow-icon arrow-slider-left smi-cursor-pointer">
        {% if section.settings.arrow_style == 'arr-style-2' or 
          section.settings.arrow_style == 'arr-square-style-4' or
          section.settings.arrow_style == 'arr-square-style-5' or
          section.settings.arrow_style == 'arr-square-style-6' or
          section.settings.arrow_style == 'arr-circle-style-4' or
          section.settings.arrow_style == 'arr-circle-style-5'
        %}
            {% render 'smi-icons', icon: 'arrow-left-2' %}
        {% else %}
            {% render 'smi-icons', icon: 'arrow-left' %}
        {% endif %}
      </div>
      <div class="{{ section.settings.arrow_style }} arrow-icon arrow-slider-right smi-cursor-pointer">
        {% if section.settings.arrow_style == 'arr-style-2' or 
          section.settings.arrow_style == 'arr-square-style-4' or
          section.settings.arrow_style == 'arr-square-style-5' or
          section.settings.arrow_style == 'arr-square-style-6' or
          section.settings.arrow_style == 'arr-circle-style-4' or
          section.settings.arrow_style == 'arr-circle-style-5'
        %}
            {% render 'smi-icons', icon: 'arrow-right-2' %}
        {% else %}
            {% render 'smi-icons', icon: 'arrow-right' %}
      {% endif %}
      </div>
    </div>
  </div>
{% endif %}
</div>
                        </div>
                        {%- liquid
                            assign desktop_items = 4
                            assign tablet_items = 2
                            if desktop_items == 1
                            assign tablet_items = 1
                            endif
                            assign product_color_schema = section.settings.product_color_scheme
                        -%}
                            <div
                                class="swiper smi-swiper"
                                data-slider='
                                    {
                                    "destopItems": {{ desktop_items }},
                                    "tabletItems": {{ tablet_items }},
                                    "autoplay": {{ false }},
                                    "dotStyle": "none" 
                                    }
                                '
                            >
                                <div class="swiper-wrapper smi-product-card-wrapper">
                                    {% assign shape_index = 1 %}
                                    {%- for product in search_block.settings.product_list -%}
                                        <div class="swiper-slide">
                                            {%- liquid  
    assign show_vendor = block.settings.show_vendor
    assign show_second_image = block.settings.show_second_image
    assign media_ratio = block.settings.media_ratio
    assign media_shape = block.settings.media_shape
    assign show_swatch_color = block.settings.show_swatch_color
    assign content_alignment = block.settings.content_alignment
    if settings.smi_card_style
        assign card_style = settings.smi_card_style
    else
        assign global_settings = shop.metafields.smind.settings.value
        assign card_style = global_settings.productCardStyle | default: 'standard'
    endif
    assign target = product.selected_or_first_available_variant
    assign compare_at_price = target.compare_at_price
    assign price = target.price | default: 1999
    assign available = target.available | default: false
    if available == false and target.inventory_policy == 'continue' 
        assign available = true
    endif
    assign thumbnail_class = 'smi-image-inner smi-d-block smi-lh-0 smi-overflow-hidden smi-p-relative'
-%}
  <div class="smi-product-card smi-card smi-card--{{card_style}} smi-product-card--{{media_ratio-}}
    {%- if card_style == 'card' -%}
            {{- ' smi-color-' | append: product_color_schema -}}
            {{- ' smi-border smi-shadow' -}}
    {%- endif -%}
    {{ ' smi-product-card--' | append: content_alignment -}}
    " style="--media-ratio: {{ media_ratio }}; --alignment: {{ content_alignment }}">
    <div class="smi-product-card__thumbnail smi-p-relative smi-overflow-hidden
        {%- if card_style == 'standard' -%}
            {%- if media_shape != 'shape-blob' -%}
            {{- ' smi-border smi-shadow ' -}}
            smi-{{ media_shape -}}
            {%- endif -%}
            {{- ' smi-color-' | append: product_color_schema }}
            {{- ' smi-mb-sm' -}}            
        {%- endif -%}
        ">
        {%- if product.featured_media -%}
            {%-liquid
                assign has_second_image = false
                if product.media[1] != null and show_second_image
                    assign has_second_image = true
                endif    
                assign media_classes = media_classes | replace: 'smi-border', ''
                assign media_classes = media_classes | replace: 'smi-shadow', ''
                assign media_wrapper_classes = media_wrapper_classes | replace: 'smi-media-wrapper', ''
            -%}
            <a class="{{ thumbnail_class }} {%- if has_second_image %} smi-has-second-image {% endif -%} smi-{{media_shape}} {{ media_wrapper_classes }}" href="{{product.url}}" style="--media-ratio: {{ media_ratio }}; --shape-hover: var({{ shape_hover }})" data-type="item-image">
                <img loading="lazy" class="smi-opacity-1 smi-w-100 {% if media_ratio == 'auto' %} smi-h-auto {% else %} smi-p-absolute smi-object-fit-cover smi-top-left-0  smi-h-100 {% endif %} {{ media_classes }}" src="{{ product.featured_media | image_url: width: 600 }}" alt="{{ product.featured_media.alt | escape }}">
                {%- if has_second_image -%}
                    <img loading="lazy" class="smi-wh-100 smi-p-absolute smi-object-fit-cover smi-top-left-0 smi-opacity-0 {{ media_classes }}" src="{{ product.media[1] | image_url: width: 600 }}" alt="" >
                {%- endif -%}
            </a>
        {% else %}
            {%-liquid
                assign default_image_class = 'smi-default-image smi-opacity-1 smi-w-100 ' | append: media_classes
                if media_ratio == 'auto'
                    assign default_image_class = default_image_class | append: ' smi-h-auto'
                else
                    assign default_image_class = default_image_class | append: ' smi-p-absolute smi-object-fit-cover smi-top-left-0  smi-h-100'
                endif
            -%}
        <a class="{{ thumbnail_class }} smi-{{media_shape}} {{ media_wrapper_classes }}" href="{{product.url}}" style="--media-ratio: {{ media_ratio }}; --shape-hover: var({{ shape_hover }})">           
                {{ 'product-apparel-2' | placeholder_svg_tag: default_image_class }} 
            </a>
        {%- endif -%}
        {%- if available == true %}
        <div class="smi-button-cart {% if product.has_only_default_variant %} _cart_now {% endif %} smi-p-absolute smi-opacity-0 smi-visibility-hidden smi-button-wrapper">
            {% assign cart_added_text = 'smind.product.cart_added' | t %}
            {% assign add_cart_text = 'smind.product.add_to_cart' | t %}
            {% assign add_cart_failed = 'smind.product.cart_failed' | t %}
            {%- if product.has_only_default_variant -%}
                <a href="{{ product.url }}?variant={{target.id}}" data-id="{{ target.id }}" data-text-added="{{cart_added_text}}" data-text-add-cart="{{add_cart_text}}" data-text-failed="{{ add_cart_failed }}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow"><span class="smi-cart-text">{{ add_cart_text }}</span><span class="smi-loading smi-effect-loading smi-d-none"></span></a>
            {%- else -%}
                <a href="{{ product.url }}?variant={{target.id}}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow">{{- 'smind.product.select_options' | t -}}</a>
            {%- endif -%}
        </div>
        {% endif %}
        {%-liquid
            if settings.smi_enable_badges != nil
                assign enable_badges = settings.smi_enable_badges
            else
                assign global_settings = shop.metafields.smind.settings.value
                assign enable_badges = global_settings.enableBadges
                if enable_badges == nil
                    assign enable_badges = true
                endif
            endif
        -%}
      {% if enable_badges %}
          <div class="smi-labels smi-p-absolute smi-d-flex smi-flex-column smi-align-items-start smi-row-gap-xs">
            {%- if compare_at_price > price %}
                {%-liquid
                    assign sale_percent = compare_at_price | minus: price | times: 100.0 | divided_by: compare_at_price | round | append: '%'
                    assign sale_price = compare_at_price | minus: price | json | money    
                -%}
                <div class="smi-badges smi-text-badge smi-d-inline-block smi-text-transform-uppercase smi-px-sm smi-label smi-sale">
                    {{ 'smind.product.sale' | t: sale_percent: sale_percent, sale_amount: sale_price }}
                </div>
            {% endif -%}
            {%- if available == false %}
                <div class="smi-badges smi-badges--sold-out  smi-text-badge smi-d-inline-block smi-text-transform-uppercase smi-label smi-px-sm">{{ 'smind.product.sold_out' | t }}</div>
            {% endif -%}
          </div>
      {% endif %}
    </div>
    <div class="smi-product-card__info">
      {% if show_vendor %}
        <div class="smi-product-vendor smi-text-sm smi-color-text-75 smi-lsmi-03">{{ product.vendor }}</div>
      {% endif %}
      <h3 class="smi-h5 smi-product-title" >
        <a href="{{product.url}}" class="smi-color-text" data-type="item-heading">{{ product.title | escape }}</a>
      </h3>
      {% liquid
        assign currency_code_enabled = settings.smi_currency_code_enabled | default: shop.metafields.smind.settings.value.showCurrencyCode | default: false
        if currency_code_enabled
          assign money_price = price | money_with_currency
        else
          assign money_price = price | money
        endif
        if target == product and product.price_varies
          assign money_price = 'products.product.price.from_price_html' | t: price: money_price
        endif
      %}
      <div
        class="smi-price smi-d-flex smi-column-gap-xs 
          {%- if available == false %} smi-price--sold-out {% endif -%}
          {%- if compare_at_price > price %} smi-price--on-sale {% endif -%}
          {%- if product.price_varies == false and product.compare_at_price_varies %} smi-price--no-compare{% endif -%}
        "
      >
        {%- unless product.price_varies == false and product.compare_at_price_varies %}
            {%- if compare_at_price != blank -%}
                <span class="smi-price__origin smi-text-price-md smi-color-text-55 smi-text-decoration-line-through">
                {% if currency_code_enabled %}
                    {{ compare_at_price | money_with_currency }}
                {% else %}
                    {{ compare_at_price | money }}
                {% endif %}
                </span>
            {%- endif -%}
          {%- endunless -%}
        <span class="smi-price__sale smi-text-price-md smi-color-text">{{ money_price }}</span>
      </div>
      {%-liquid
        if settings.smi_color_configuration
            assign color_configuration_br = settings.smi_color_configuration |  newline_to_br |  split: '<br />'
        else
            assign global_settings = shop.metafields.smind.settings.value
            assign color_configuration_br = global_settings.variantValue |  newline_to_br |  split: '<br />'
        endif
      -%}
      <div class="smi-product-description">
          {{- product.description | strip_html | truncatewords: 15, '...' -}}
      </div>
      {%- unless product.has_only_default_variant -%}
        {% if show_swatch_color %}
            {%-liquid
                if settings.smi_color_variant_name
                    assign smi_color_variant_name_dc = settings.smi_color_variant_name | strip | downcase
                else
                    assign global_settings = shop.metafields.smind.settings.value
                    assign smi_color_variant_name_dc = global_settings.variantName | strip | downcase
                endif    
            -%}
          <div class="smi-variant-wrapper smi-variants smi-mt-xs smi-d-inline-flex smi-column-gap-xs smi-row-gap-fix-xs smi-flex-wrap">
          {%- for option in product.options_with_values -%}
              {%- assign option_name = option.name | strip | downcase -%}
              {%-liquid
                assign matchOption = false
                if smi_color_variant_name_dc != blank
                    if option_name == smi_color_variant_name_dc
                        assign matchOption = true
                    endif
                else
                    if option_name == 'color' or option_name == 'colour' or option_name == 'colors' or option_name == 'colours'
                        assign matchOption = true
                    endif
                endif
              -%}
              {% if matchOption == true %}
                  {%- assign product_option_position_0index = option.position | minus: 1 -%}
                  {%- assign number_options = option.values.size | times: 1 -%}
                  {%- for product_option_value in option.values -%}
                      {%- liquid
                      assign option_value_variant = false
                      for variant in product.variants
                          if variant.options[product_option_position_0index] == product_option_value
                          assign option_value_variant = variant
                          break
                          endif
                      endfor
                      assign is_unavailable = true
                      for variant in product.variants
                          if variant.available and variant.options[product_option_position_0index] == product_option_value
                          assign is_unavailable = false
                          break
                          endif
                      endfor
                      assign img_url = option_value_variant.featured_media | img_url: '1x1' | replace: '_1x1.', '_500x.'
                      assign color_name = product_option_value | escape | downcase
                      assign class_desktop_hidden = ''
                      assign class_mobile_hidden = ''
                      if forloop.index > 4
                        assign class_desktop_hidden = 'smi-variants__item--desktop-hidden'
                      endif
                      if forloop.index > 3
                        assign class_mobile_hidden = 'smi-variants__item--mobile-hidden'
                      endif
                      -%}
                      <div
                      class="smi-variants__item smi-cursor-pointer {{ class_desktop_hidden }} {{ class_mobile_hidden }} {% if forloop.index == 1 %} smi-variants__item--active {% endif %}"
                      {% if option_value_variant.featured_media %}
                          data-media-url="{{ img_url }}"
                      {% endif %}
                      data-price="{{ option_value_variant.price | money }}"
                      data-id="{{option_value_variant.id}}"
                      >
                      {%-liquid
                        assign is_image = false
                        for color_str in color_configuration_br
                            assign color_temp = color_str | strip | split: ':'
                            if color_temp.size == 2
                                assign color_temp_0 = color_temp[0] | strip | downcase
                                assign color_temp_1 = color_temp[1] | strip
                                if color_name == color_temp_0
                                    if color_temp_1 contains '.jpg' or color_temp_1 contains '.JPG' or color_temp_1 contains '.png' or color_temp_1 contains '.PNG' or color_temp_1 contains '.gif' or color_temp_1 contains '.GIF' or color_temp_1 contains '.jpeg'
                                        assign is_image = true
                                    endif
                                    assign color_name = color_temp_1
                                    break
                                endif
                            endif
                        endfor
                      -%}
                        {%- if is_image -%}
                            <span class="smi-d-block smi-wh-100 smi-p-relative smi-overflow-hidden">
                                <img src="{{ color_name | file_img_url: 'thumb' }}" width="" height="" alt="" class="smi-wh-100 smi-object-fit-cover smi-p-absolute">
                            </span>
                        {%- else -%}
                            <span class="smi-d-block smi-wh-100" style="background:{{ color_name }}"></span>
                        {%- endif -%}
                        <div class="smi-tooltip">{{ product_option_value }}</div>
                      </div>
                  {% endfor %}
                  {% if number_options > 4 %}
                    <div class="smi-variants__item smi-variants__item--more smi-cursor-pointer smi-align-items-center smi-justify-content-center smi-d-none smi-d-md-flex">
                        <span class="smi-text-xs smi-color-text smi-lsmi-03">+{{ number_options | minus: 4 }}</span>
                    </div>
                  {% endif %}
                  {% if number_options > 3 %}
                    <div class="smi-variants__item smi-variants__item--more smi-cursor-pointer smi-align-items-center smi-justify-content-center smi-d-flex smi-d-md-none">
                        <span class="smi-text-xs smi-color-text smi-lsmi-03">+{{ number_options | minus: 3 }}</span>
                    </div>
                  {% endif %}
              {% endif %}
          {% endfor %}
          </div>
      {% endif %}
    {% endunless %}
      {%- if available == true %}
        <div class="smi-button-cart {% if product.has_only_default_variant %} _cart_now {% endif %} smi-p-absolute smi-opacity-0 smi-visibility-hidden smi-button-wrapper">
            {% assign cart_added_text = 'smind.product.cart_added' | t %}
            {% assign add_cart_text = 'smind.product.add_to_cart' | t %}
            {% assign add_cart_failed = 'smind.product.cart_failed' | t %}
            {%- if product.has_only_default_variant -%}
                <a href="{{ product.url }}?variant={{target.id}}" data-id="{{ target.id }}" data-text-added="{{cart_added_text}}" data-text-add-cart="{{add_cart_text}}" data-text-failed="{{ add_cart_failed }}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow"><span class="smi-cart-text">{{ add_cart_text }}</span><span class="smi-loading smi-effect-loading smi-d-none"></span></a>
            {%- else -%}
                <a href="{{ product.url }}?variant={{target.id}}" class="smi-w-100 smi-d-flex smi-align-items-center smi-justify-content-center smi-text-center smi-button smi-button--solid smi-text-button smi-hover-{{- settings.smi_animations_hover_elements | default: shop.metafields.smind.settings.value.buttonHoverEffect | default: 'none' }} smi-border smi-shadow">{{- 'smind.product.select_options' | t -}}</a>
            {%- endif -%}
        </div>
      {% endif %}
    </div>
  </div>
                                        </div>
                                    {% endfor %}
                                </div>        
                            </div>
                    </div>
                </div>
                {%- endif -%} 
            </div>
        </div>
    </div>
{%- endif -%}
    {%- if shop.customer_accounts_enabled and section.settings.enable_account -%}
    <div class="smi-actions__account smi-lh-0">
        <a href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}" class="smi-d-block">
            {%- render 'smi-icons', icon: 'account' -%}
        </a>
    </div>
{%- endif -%}
    {%-liquid
    assign cart_type = settings.smi_cart_type | default: shop.metafields.smind.settings.value.cartType | default: 'page'
-%}
<div class="smi-actions__account smi-lh-0" id="smi-cart-button">
<a href="{{ routes.cart_url }}" class="{% if cart_type == 'drawer' %}smi-cart-button{% endif  %} smi-p-relative smi-d-block">
        {%- render 'smi-icons', icon: 'cart' -%}
        {%- if cart != empty -%}
        <div class="smi-cart-badges smi-text-xs smi-lsmi-03 smi-p-absolute smi-d-flex smi-align-items-center smi-justify-content-center">{{ cart.item_count }}</div>
        {%- endif -%}
    </a>
</div>
</div>
{% endcapture %}
{% if section.settings.sticky_header != 'none' %}
    <smi-sticky-header data-sticky-type="{{ section.settings.sticky_header }}">
{% endif %}
    <div id="smi-{{ section.id }}" class="smi-section__inner smi-prevent smi-gradient smi-section-header-1 smi-color-{{- color_schema -}}
        {%- if is_transparent -%} 
            {{- ' smi-color-' | append: color_schema_transparent -}} 
        {%- endif -%}
        {{- header_classes -}} 
        {%- if desktop_layout == 'drawer_logo_center' or desktop_layout == 'drawer' -%} 
            {{- ' smi-header-mobile' -}}
        {%- endif -%}" data-color-transparent="smi-color-{{ color_schema_transparent }}"  data-section="header-1" data-name="✧Header 1">
          
        <div class="smi-container{%- if section.settings.full_width -%}-fluid{%- endif -%}">
            <div class="smi-header smi-d-flex smi-align-items-stretch smi-justify-content-between smi-column-gap-xxl smi-header--mobile-{{section.settings.mobile_layout}}">
                <div class="smi-hamburger-icon smi-lh-0 smi-cursor-pointer smi-d-block smi-d-lg-none">
                    {%- render 'smi-icons', icon: 'hamburger' -%}
                    <div class="smi-menu-cover smi-p-fixed smi-wh-100"></div>
                </div>
                {%- if desktop_layout == 'logo_top_center' -%}
                    <div class="smi-actions smi-actions--pos1 smi-d-flex smi-align-items-center smi-column-gap-sm">
    {% assign search_block = section.blocks | where: 'type', 'header_search' | first %}
    {%- if search_block -%}
        <div class="smi-actions__search2">
            <div class="smi-search-button smi-cursor-pointer smi-lh-0">
                {%- render 'smi-icons', icon: 'search' -%}
            </div>
        </div>
    {%- endif -%}
</div>
                {%- endif -%}
                {{ component_logo }}
                {{ component_menu }}
                {{ component_actions }}
            </div>
        </div>
    </div>
{% if section.settings.sticky_header != 'none' %}
    </smi-sticky-header> 
{% endif %}
{% schema %}
{
	"name": "✧Header 1-8",
	"tag": "section",
	"class": "smi-section smi-header-1",
	"settings": [
		{
			"type": "checkbox",
			"id": "full_width",
			"label": "Container full-width",
			"default": false
		},
		{
			"type": "checkbox",
			"id": "show_divider",
			"label": "Show bottom divider",
			"default": true
		},
		{
			"type": "checkbox",
			"id": "show_shadow",
			"label": "Show shadow",
			"default": false
		},
		{
			"type": "header",
			"content": "Logo"
		},
		{
			"type": "image_picker",
			"id": "logo",
			"label": "Default logo"
		},
		{
			"type": "image_picker",
			"id": "logo_transparent",
			"label": "Transparent logo"
		},
		{
			"type": "range",
			"id": "logo_width",
			"min": 50,
			"max": 300,
			"step": 10,
			"default": 100,
			"unit": "px",
			"label": "Desktop logo width"
		},
		{
			"type": "range",
			"id": "mobile_logo_width",
			"min": 30,
			"max": 300,
			"step": 10,
			"default": 60,
			"unit": "px",
			"label": "Mobile logo width"
		},
		{
			"type": "header",
			"content": "General"
		},
		{
			"type": "link_list",
			"id": "menu",
			"label": "Menu"
		},
		{
			"type": "select",
			"id": "header_style",
			"label": "Header style",
			"options": [
				{
					"value": "classic",
					"label": "Classic"
				},
				{
					"value": "transparent",
					"label": "Transparent"
				}
			],
			"default": "classic",
			"info": "Edit your logo in theme settings."
		},
		{
			"type": "select",
			"id": "desktop_layout",
			"label": "Desktop layout",
			"options": [
				{
					"value": "logo_top_left",
					"label": "Logo top left"
				},
				{
					"value": "logo_top_center",
					"label": "Logo top center"
				},
				{
					"value": "logo_middle_left",
					"label": "Logo middle left"
				},
				{
					"value": "logo_middle_left_nav_center",
					"label": "Logo middle left (nav center)"
				},
				{
					"value": "logo_middle_center",
					"label": "Logo middle center"
				},
				{
					"value": "drawer",
					"label": "Drawer"
				},
				{
					"value": "drawer_logo_center",
					"label": "Drawer (logo center)"
				}
			],
			"default": "logo_middle_left"
		},
		{
			"type": "select",
			"id": "mobile_layout",
			"label": "Mobile layout",
			"options": [
				{
					"value": "logo_center",
					"label": "Logo center"
				},
				{
					"value": "logo_left",
					"label": "Logo left"
				}
			],
			"default": "logo_center"
		},
		{
			"type": "select",
			"id": "sticky_header",
			"label": "Sticky header",
			"options": [
				{
					"value": "none",
					"label": "None"
				},
				{
					"value": "on_scroll_up",
					"label": "On scroll up"
				},
				{
					"value": "always",
					"label": "Always"
				},
				{
					"value": "alway_reduce_logo",
					"label": "Always, reduce logo size"
				}
			],
			"default": "on_scroll_up"
		},
		{
			"type": "checkbox",
			"id": "enable_language",
			"label": "Enable language selector",
			"default": true,
			"info": "To add a language, go to your [language settings.](/admin/settings/languages)"
		},
		{
			"type": "checkbox",
			"id": "enable_country",
			"label": "Enable country/region selector",
			"default": true,
			"info": "To add a country/region, go to your [market settings.](/admin/settings/markets)"
		},
		{
			"type": "checkbox",
			"id": "enable_account",
			"label": "Enable account",
			"default": true,
			"info": "How to enable “Account”. [Learn more](https://docs.smind.io/guides/enabling-account)"
		},
		{
			"type": "header",
			"content": "Color"
		},
		{
			"type": "select",
            "options": [
                {
                    "value": "scheme_1",
                    "label": "Scheme 1"
                },
                {
                    "value": "scheme_2",
                    "label": "Scheme 2"
                },
                {
                    "value": "scheme_3",
                    "label": "Scheme 3"
                },
                {
                    "value": "scheme_4",
                    "label": "Scheme 4"
                },
                {
                    "value": "scheme_5",
                    "label": "Scheme 5"
                },
                {
                    "value": "scheme_6",
                    "label": "Scheme 6"
                },
                {
                    "value": "scheme_7",
                    "label": "Scheme 7"
                },
                {
                    "value": "scheme_8",
                    "label": "Scheme 8"
                },
                {
                    "value": "scheme_9",
                    "label": "Scheme 9"
                },
                {
                    "value": "scheme_10",
                    "label": "Scheme 10"
                }
            ],
			"id": "color_scheme",
			"label": "Default color scheme"
		},
		{
			"type": "select",
            "options": [
                {
                    "value": "scheme_1",
                    "label": "Scheme 1"
                },
                {
                    "value": "scheme_2",
                    "label": "Scheme 2"
                },
                {
                    "value": "scheme_3",
                    "label": "Scheme 3"
                },
                {
                    "value": "scheme_4",
                    "label": "Scheme 4"
                },
                {
                    "value": "scheme_5",
                    "label": "Scheme 5"
                },
                {
                    "value": "scheme_6",
                    "label": "Scheme 6"
                },
                {
                    "value": "scheme_7",
                    "label": "Scheme 7"
                },
                {
                    "value": "scheme_8",
                    "label": "Scheme 8"
                },
                {
                    "value": "scheme_9",
                    "label": "Scheme 9"
                },
                {
                    "value": "scheme_10",
                    "label": "Scheme 10"
                }
            ],
			"id": "transparent_color_scheme",
			"label": "Transparent color scheme"
		},
		{
			"type": "select",
            "options": [
                {
                    "value": "scheme_1",
                    "label": "Scheme 1"
                },
                {
                    "value": "scheme_2",
                    "label": "Scheme 2"
                },
                {
                    "value": "scheme_3",
                    "label": "Scheme 3"
                },
                {
                    "value": "scheme_4",
                    "label": "Scheme 4"
                },
                {
                    "value": "scheme_5",
                    "label": "Scheme 5"
                },
                {
                    "value": "scheme_6",
                    "label": "Scheme 6"
                },
                {
                    "value": "scheme_7",
                    "label": "Scheme 7"
                },
                {
                    "value": "scheme_8",
                    "label": "Scheme 8"
                },
                {
                    "value": "scheme_9",
                    "label": "Scheme 9"
                },
                {
                    "value": "scheme_10",
                    "label": "Scheme 10"
                }
            ],
			"id": "product_color_scheme",
			"label": "Product card color scheme",
			"info": "To use color scheme: Step 1: Hide color block in section. Step 2: Customize colors in color block of “✧Styles” section in global area. [Learn more](https://docs.smind.io/guides/color-block-and-color-scheme)"
		},
		{
			"type": "header",
			"content": "Section padding"
		},
		{
			"type": "range",
			"id": "padding_top",
			"min": 0,
			"max": 200,
			"step": 2,
			"unit": "px",
			"label": "Top padding",
			"default": 50
		},
		{
			"type": "range",
			"id": "padding_bottom",
			"min": 0,
			"max": 200,
			"step": 2,
			"unit": "px",
			"label": "Bottom padding",
			"default": 50
		}
	],
	"blocks": [
		{
			"name": "Color",
			"limit": 1,
			"type": "color",
			"settings": [
				{
					"type": "paragraph",
					"content": "How to use “Color block” and “Color scheme”. [Learn more](https://docs.smind.io/guides/color-block-and-color-scheme)"
				},
				{
					"type": "header",
					"content": "Default"
				},
				{
					"type": "color",
					"id": "background_color",
					"default": "#FFFFFF",
					"label": "Background"
				},
				{
					"type": "color_background",
					"id": "background_gradient_color",
					"label": "Background gradient",
					"info": "Background gradient replaces background where possible."
				},
				{
					"type": "color",
					"id": "text_color",
					"default": "#1F1F21",
					"label": "Text"
				},
				{
					"type": "color",
					"id": "solid_background_button_color",
					"default": "#1F1F21",
					"label": "Solid button background"
				},
				{
					"type": "color",
					"id": "solid_button_label_color",
					"default": "#FFFFFF",
					"label": "Solid button label"
				},
				{
					"type": "color",
					"id": "shadow_color",
					"default": "#000000",
					"label": "Shadow"
				},
				{
					"type": "paragraph",
					"content": "This color scheme applies to the border and shadow of cards. [Learn more](https://docs.smind.io/guides/color-block-and-color-scheme#how-to-configure-border-and-shadow-colors-in-sections-with-two-color-schemes)"
				},
				{
					"type": "header",
					"content": "Transparent"
				},
				{
					"type": "color_background",
					"id": "transparent_background_gradient_color",
					"label": "Background gradient",
					"info": "Background gradient replaces background where possible."
				},
				{
					"type": "color",
					"id": "transparent_text_color",
					"default": "#1F1F21",
					"label": "Text"
				},
				{
					"type": "color",
					"id": "transparent_solid_background_button_color",
					"default": "#1F1F21",
					"label": "Solid button background"
				},
				{
					"type": "color",
					"id": "transparent_solid_button_label_color",
					"default": "#FFFFFF",
					"label": "Solid button label"
				},
				{
					"type": "header",
					"content": "Product card"
				},
				{
					"type": "color",
					"id": "product_background_color",
					"default": "#FFFFFF",
					"label": "Background"
				},
				{
					"type": "color_background",
					"id": "product_background_gradient_color",
					"label": "Background gradient",
					"info": "Background gradient replaces background where possible."
				},
				{
					"type": "color",
					"id": "product_text_color",
					"default": "#1F1F21",
					"label": "Text"
				},
				{
					"type": "color",
					"id": "product_solid_background_button_color",
					"default": "#1F1F21",
					"label": "Solid button background"
				},
				{
					"type": "color",
					"id": "product_solid_button_label_color",
					"default": "#FFFFFF",
					"label": "Solid button label"
				},
				{
					"type": "color",
					"id": "product_shadow_color",
					"default": "#000000",
					"label": "Shadow"
				},
				{
					"type": "header",
					"content": "Sale badge"
				},
				{
					"type": "color",
					"id": "badge_sale_background_color",
					"default": "#ED2626",
					"label": "Background"
				},
				{
					"type": "color",
					"id": "badge_sale_text_color",
					"default": "#1F1F21",
					"label": "Text"
				},
				{
					"type": "header",
					"content": "Sold out badge"
				},
				{
					"type": "color",
					"id": "badge_sold_out_background_color",
					"default": "#1F1F21",
					"label": "Background"
				},
				{
					"type": "color",
					"id": "badge_sold_out_text_color",
					"default": "#FFFFFF",
					"label": "Text"
				}
			]
		},
		{
			"name": "Mega menu (Classic)",
			"type": "mega_classic",
			"settings": [
				{
					"type": "text",
					"id": "menu_item",
					"label": "Menu item",
					"info": "Enter the menu item to apply a mega menu dropdown, each menu is separated by commas. e.g. “Shop, Collection”."
				},
				{
					"type": "select",
					"id": "number_column",
					"label": "Number of columns on desktop",
					"options": [
						{
							"value": "2",
							"label": "2"
						},
						{
							"value": "3",
							"label": "3"
						},
						{
							"value": "4",
							"label": "4"
						},
						{
							"value": "5",
							"label": "5"
						},
						{
							"value": "6",
							"label": "6"
						}
					],
					"default": "4"
				}
			]
		},
		{
			"name": "Mega menu (Collection)",
			"type": "mega_collection",
			"settings": [
				{
					"type": "text",
					"id": "menu_item",
					"label": "Menu item",
					"info": "Enter the menu item to apply a mega menu dropdown."
				},
				{
					"type": "select",
					"id": "number_column",
					"label": "Number of columns on desktop",
					"options": [
						{
							"value": "2",
							"label": "2"
						},
						{
							"value": "3",
							"label": "3"
						},
						{
							"value": "4",
							"label": "4"
						},
						{
							"value": "5",
							"label": "5"
						},
						{
							"value": "6",
							"label": "6"
						}
					],
					"default": "5"
				},
				{
					"type": "collection_list",
					"id": "collection_list",
					"label": "Collections",
					"limit": 16
				}
			]
		},
		{
			"name": "Mega menu (Banner)",
			"type": "mega_banner",
			"settings": [
				{
					"type": "text",
					"id": "menu_item",
					"label": "Menu item",
					"info": "Enter the menu item to apply a mega menu dropdown."
				},
				{
					"type": "select",
					"id": "number_column",
					"label": "Number of columns on desktop",
					"options": [
						{
							"value": "2",
							"label": "2"
						},
						{
							"value": "3",
							"label": "3"
						},
						{
							"value": "4",
							"label": "4"
						},
						{
							"value": "5",
							"label": "5"
						},
						{
							"value": "6",
							"label": "6"
						}
					],
					"default": "4"
				},
				{
					"type": "select",
					"id": "banner_position",
					"label": "Banner position",
					"options": [
						{
							"value": "row-reverse",
							"label": "Left"
						},
						{
							"value": "row",
							"label": "Right"
						}
					],
					"default": "row"
				},
				{
					"type": "header",
					"content": "Banner 1"
				},
				{
					"type": "image_picker",
					"id": "banner1",
					"label": "Image"
				},
				{
					"type": "inline_richtext",
					"id": "heading1",
					"default": "SUMMER SALE",
					"label": "Heading"
				},
				{
					"type": "select",
					"id": "heading1_size",
					"label": "Heading size",
					"options": [
						{
							"value": "smi-h6",
							"label": "XS"
						},
						{
							"value": "smi-h5",
							"label": "S"
						},
						{
							"value": "smi-h4",
							"label": "M"
						},
						{
							"value": "smi-h3",
							"label": "L"
						}
					],
					"default": "smi-h5"
				},
				{
					"type": "url",
					"id": "link1",
					"label": "Link"
				},
				{
					"type": "header",
					"content": "Banner 2"
				},
				{
					"type": "image_picker",
					"id": "banner2",
					"label": "Image"
				},
				{
					"type": "inline_richtext",
					"id": "heading2",
					"default": "SUMMER SALE",
					"label": "Heading"
				},
				{
					"type": "select",
					"id": "heading2_size",
					"label": "Heading size",
					"options": [
						{
							"value": "smi-h6",
							"label": "XS"
						},
						{
							"value": "smi-h5",
							"label": "S"
						},
						{
							"value": "smi-h4",
							"label": "M"
						},
						{
							"value": "smi-h3",
							"label": "L"
						}
					],
					"default": "smi-h5"
				},
				{
					"type": "url",
					"id": "link2",
					"label": "Link"
				}
			]
		},
		{
			"name": "Mega menu (Products)",
			"type": "mega_product",
			"settings": [
				{
					"type": "text",
					"id": "menu_item",
					"label": "Menu item",
					"info": "Enter the menu item to apply a mega menu dropdown, each menu is separated by commas. e.g. “Shop, Collection”."
				},
				{
					"type": "select",
					"id": "number_column",
					"label": "Number of columns on desktop",
					"options": [
						{
							"value": "2",
							"label": "2"
						},
						{
							"value": "3",
							"label": "3"
						},
						{
							"value": "4",
							"label": "4"
						},
						{
							"value": "5",
							"label": "5"
						},
						{
							"value": "6",
							"label": "6"
						}
					],
					"default": "4"
				},
				{
					"type": "header",
					"content": "Products"
				},
				{
					"type": "text",
					"id": "product_heading",
					"label": "Heading",
					"default": "Popular Items"
				},
				{
					"type": "product_list",
					"id": "product_list",
					"label": "Products",
					"limit": 16
				},
				{
					"type": "checkbox",
					"id": "enable_spacing",
					"label": "Enable spacing between items",
					"default": true
				},
				{
					"type": "header",
					"content": "Product card"
				},
				{
					"type": "paragraph",
					"content": "To edit the style of the product card, go to your [theme settings.](/editor?context=theme&category=✧Product cards)"
				},
				{
					"type": "select",
					"id": "media_ratio",
					"label": "Media ratio",
					"options": [
						{
							"value": "auto",
							"label": "Adapt"
						},
						{
							"value": "3/2",
							"label": "Landscape"
						},
						{
							"value": "1/1",
							"label": "Square"
						},
						{
							"value": "3/4",
							"label": "Portrait"
						}
					],
					"default": "3/4"
				},
				{
					"type": "select",
					"id": "media_shape",
					"label": "Media shape",
					"options": [
						{
							"value": "default",
							"label": "Default"
						},
						{
							"value": "round",
							"label": "Round"
						},
						{
							"value": "shape-blob",
							"label": "Blob"
						}
					],
					"default": "default",
					"info": "Media theme settings don't apply to the \"Blob\" shape."
				},
				{
					"type": "text_alignment",
					"id": "content_alignment",
					"label": "Content alignment",
					"default": "left"
				},
				{
					"type": "checkbox",
					"id": "show_second_image",
					"label": "Show second image on hover",
					"default": true
				},
				{
					"type": "checkbox",
					"id": "show_vendor",
					"label": "Show vendor"
				},
				{
					"type": "checkbox",
					"id": "show_swatch_color",
					"label": "Show color swatch",
					"info": "If no color swatches are visible, upload your own. [Learn more](https://docs.smind.io/guides/configuring-color-swatches)"
				}
			]
		},
		{
			"name": "Mega menu (Product tabs)",
			"type": "mega_product_tab",
			"settings": [
				{
					"type": "text",
					"id": "menu_item",
					"label": "Menu item",
					"info": "Enter the menu item to apply a mega menu dropdown."
				},
				{
					"type": "collection_list",
					"id": "collection_list",
					"label": "Collections"
				},
				{
					"type": "select",
					"id": "number_column",
					"label": "Number of product columns",
					"options": [
						{
							"value": "2",
							"label": "2"
						},
						{
							"value": "3",
							"label": "3"
						},
						{
							"value": "4",
							"label": "4"
						}
					],
					"default": "4"
				},
				{
					"type": "checkbox",
					"id": "enable_spacing",
					"label": "Enable spacing between items",
					"default": true
				},
				{
					"type": "header",
					"content": "Product card"
				},
				{
					"type": "paragraph",
					"content": "To edit the style of the product card, go to your [theme settings.](/editor?context=theme&category=✧Product cards)"
				},
				{
					"type": "select",
					"id": "media_ratio",
					"label": "Media ratio",
					"options": [
						{
							"value": "auto",
							"label": "Adapt"
						},
						{
							"value": "3/2",
							"label": "Landscape"
						},
						{
							"value": "1/1",
							"label": "Square"
						},
						{
							"value": "3/4",
							"label": "Portrait"
						}
					],
					"default": "3/4"
				},
				{
					"type": "select",
					"id": "media_shape",
					"label": "Media shape",
					"options": [
						{
							"value": "default",
							"label": "Default"
						},
						{
							"value": "round",
							"label": "Round"
						},
						{
							"value": "shape-blob",
							"label": "Blob"
						}
					],
					"default": "default",
					"info": "Media theme settings don't apply to the \"Blob\" shape."
				},
				{
					"type": "text_alignment",
					"id": "content_alignment",
					"label": "Content alignment",
					"default": "left"
				},
				{
					"type": "checkbox",
					"id": "show_second_image",
					"label": "Show second image on hover",
					"default": true
				},
				{
					"type": "checkbox",
					"id": "show_vendor",
					"label": "Show vendor"
				},
				{
					"type": "checkbox",
					"id": "show_swatch_color",
					"label": "Show color swatch",
					"info": "If no color swatches are visible, upload your own. [Learn more](https://docs.smind.io/guides/configuring-color-swatches)"
				}
			]
		},
		{
			"name": "Search suggestions",
			"type": "header_search",
			"limit": 1,
			"settings": [
				{
					"type": "checkbox",
					"id": "enable_recent",
					"label": "Enable recent searches",
					"default": true
				},
				{
					"type": "textarea",
					"id": "search_keywords",
					"label": "Popular search keywords",
					"info": "Each keyword is separated by a comma. e.g. “Shoes, Winter, Costs”",
					"default": "Shoes, Winter, Coats, Women, Kids"
				},
				{
					"type": "header",
					"content": "Product recommendation"
				},
				{
					"type": "product_list",
					"id": "product_list",
					"label": "Products",
					"limit": 16
				},
				{
					"type": "paragraph",
					"content": "To edit the style of the product card, go to your [theme settings.](/editor?context=theme&category=✧Product cards)"
				},
				{
					"type": "select",
					"id": "media_ratio",
					"label": "Media ratio",
					"options": [
						{
							"value": "auto",
							"label": "Adapt"
						},
						{
							"value": "3/2",
							"label": "Landscape"
						},
						{
							"value": "1/1",
							"label": "Square"
						},
						{
							"value": "3/4",
							"label": "Portrait"
						}
					],
					"default": "3/4"
				},
				{
					"type": "select",
					"id": "media_shape",
					"label": "Media shape",
					"options": [
						{
							"value": "default",
							"label": "Default"
						},
						{
							"value": "round",
							"label": "Round"
						},
						{
							"value": "shape-blob",
							"label": "Blob"
						}
					],
					"default": "default",
					"info": "Media theme settings don't apply to the \"Blob\" shape."
				},
				{
					"type": "text_alignment",
					"id": "content_alignment",
					"label": "Content alignment",
					"default": "left"
				},
				{
					"type": "checkbox",
					"id": "show_second_image",
					"label": "Show second image on hover",
					"default": true
				},
				{
					"type": "checkbox",
					"id": "show_vendor",
					"label": "Show vendor"
				},
				{
					"type": "checkbox",
					"id": "show_swatch_color",
					"label": "Show color swatch",
					"info": "If no color swatches are visible, upload your own. [Learn more](https://docs.smind.io/guides/configuring-color-swatches)"
				}
			]
		}
	],
	"presets": [
		{
			"name": "✧Header 1-8",
			"settings": {
				"full_width": false,
				"show_divider": true,
				"show_shadow": false,
				"menu": "header-classic",
				"header_style": "classic",
				"desktop_layout": "logo_middle_left",
				"mobile_layout": "logo_left",
				"sticky_header": "none",
				"enable_language": true,
				"enable_country": true,
				"enable_account": true,
				"padding_top": 24,
				"padding_bottom": 24
			},
			"blocks": [
				{
					"type": "header_search",
					"settings": {
						"enable_recent": true,
						"search_keywords": "Shoes, Winter, Coats, Women, Kids",
						"media_ratio": "1/1",
						"media_shape": "default",
						"content_alignment": "left",
						"show_second_image": true,
						"show_vendor": false,
						"show_swatch_color": false
					}
				},
				{
					"type": "mega_collection",
					"settings": {
						"menu_item": "product",
						"number_column": "5"
					}
				},
				{
					"type": "color",
					"settings": {
						"background_color": "#ffffff",
						"background_gradient_color": "",
						"text_color": "#000000",
						"solid_background_button_color": "#000000",
						"solid_button_label_color": "#ffffff",
						"shadow_color": "#000000",
						"transparent_background_gradient_color": "",
						"transparent_text_color": "#000000",
						"transparent_solid_background_button_color": "#000000",
						"transparent_solid_button_label_color": "#ffffff",
						"product_background_color": "#ffffff",
						"product_background_gradient_color": "",
						"product_text_color": "#000000",
						"product_solid_background_button_color": "#000000",
						"product_solid_button_label_color": "#ffffff",
						"product_shadow_color": "#000000"
					}
				}
			]
		}
	]
}
{% endschema %}
<script defer>
var SMI_ProductCard = (function () {
    'use strict'
    class SMI_ProductCard {
        options = {
            card: '.smi-product-card',
            thumbnail: '.smi-product-card__thumbnail',
            variants: {
                wrapper: '.smi-variants',
                item: '.smi-variants__item'
            }
        }

        constructor(_options = {}) {
            this.options = { ...this.options, ..._options }
            this.handleVariantClick()
            this.handleAddToCart()
        }

        handleVariantClick() {
            const variants = document.querySelectorAll(this.options.variants.wrapper)
            const activeClass = this.options.variants.item.replace('.', '') + '--active'
            variants.forEach(variant => {
                const items = variant.querySelectorAll(this.options.variants.item)
                items.forEach(item => {
                    item.addEventListener('click', (e) => {
                        const activedItem = variant.querySelector(`${this.options.variants.item}.${activeClass}`)
                        if (activedItem) {
                            activedItem.classList.remove(activeClass)
                        }
                        item.classList.add(activeClass)
                        const mediaUrl = item.dataset.mediaUrl
                        if (mediaUrl) {
                            const parent = variant.closest(this.options.card)
                            const firstImage = parent.querySelector(`${this.options.thumbnail} img:nth-child(1)`)
                            if (firstImage) {
                                firstImage.setAttribute('src', mediaUrl)
                            }
                        }

                        const dataId = item.getAttribute('data-id')
                        if (dataId) {
                            const cartParent = item.closest('.smi-product-card')
                            const aItems = cartParent.querySelectorAll('a')
                            if (aItems.length) {
                                aItems.forEach(aItem => {
                                    const _hrefFull = aItem.getAttribute('href')
                                    const _href = _hrefFull.split('?')[0]
                                    aItem.setAttribute('href', `${_href}?variant=${dataId}`)
                                })
                            }
                        }
                    })
                })
            })
        }

        handleAddToCart() {
            const buttons = document.querySelectorAll('.smi-button-cart._cart_now a')
            if (buttons.length) {
                buttons.forEach(item => {
                    item.addEventListener('click', (e) => {
                        e.preventDefault()

                        
                        const cartObj = document.querySelector('cart-notification') || document.querySelector('cart-drawer');
                        

                        const variantId = item.getAttribute('data-id')
                        item.classList.add('smi-cart-adding')
                        const textOrigin = item.getAttribute('data-text-add-cart');
                        const textAdded = item.getAttribute('data-text-added');
                        const textFailed = item.getAttribute('data-text-failed');
                        const textEl = item.querySelector('.smi-cart-text')
                        const cartType = window.smiObject ? window.smiObject.cartType : 'page'

                        let sectionsPayload = this.getSectionsToRender().map((section) => section.section)

                        
                        if (cartObj) {
                            let _sectionsPayload = cartObj.getSectionsToRender().map((section) => section.id)
                            sectionsPayload = [...sectionsPayload, ..._sectionsPayload]
                        }
                        console.log(sectionsPayload);
                        

                        let formData = {
                            quantity: 1,
                            id: parseInt(variantId),
                            sections: sectionsPayload,
                            sections_url: window.location.pathname
                        };

                        fetch("/cart/add.js", {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(formData)
                        }).then((response) => response.json()).then((data) => {
                            let isError = false
                            if (data?.status == 422 || data?.message === 'Cart Error') {
                                isError = true
                                textEl.innerText = textFailed
                            } else {
                                textEl.innerText = textAdded
                            }

                            const textTimer = setTimeout(() => {
                                textEl.innerText = textOrigin
                                clearTimeout(textTimer)
                            }, 2000)

                            if (!isError) {
                                const sectionRender = this.getSectionsToRender()
                                sectionRender.forEach((section) => {
                                    const _sectionEl = document.getElementById(section.id)
                                    if (_sectionEl) {
                                        const _elementToReplace = _sectionEl.querySelector(section.selector);
                                        let elementToReplace = null
                                        if (_elementToReplace) {
                                            elementToReplace = _elementToReplace
                                        } else {
                                            elementToReplace = _sectionEl
                                        }
                                        if (elementToReplace) {
                                            elementToReplace.innerHTML = this.getSectionInnerHTML(
                                                data.sections[section.section],
                                                section.selector
                                            );
                                            if (typeof SMI_CartDrawer === 'function' && cartType === 'drawer') {
                                                setTimeout(() => {
                                                    const drawerObj = new SMI_CartDrawer('.smi-cart-drawer-1')
                                                    drawerObj.handleToggle()
                                                    drawerObj.openDrawer()
                                                }, 150)
                                            } else {
                                                window.location.href = window.smiObject.routes.cart_url
                                            }
                                        }
                                    }
                                });

                                
                                if (cartObj) {
                                    if (typeof cartObj['renderContents'] === 'function') {
                                        cartObj.renderContents(data)
                                    }
                                } else {
                                    if (typeof SMI_CartDrawer !== 'function' && window.smiObject) {
                                        window.location.href = window.smiObject.routes.cart_url
                                    }
                                }
                                
                            }
                        }).finally(() => {
                            item.classList.remove('smi-cart-adding')

                            
                            if (cartObj && cartObj.classList.contains('is-empty')) cartObj.classList.remove('is-empty');
                            
                        });
                    })
                })
            }
        }

        getSectionsToRender() {
            const drawerCart = document.getElementById('smi-drawer-items')
            const res = [
                {
                    id: 'smi-cart-button',
                    section: 'smi-cart-icon-bubble',
                    selector: '.shopify-section',
                }
            ]

            if (drawerCart) {
                res.push({
                    id: 'shopify-section-' + drawerCart.dataset.id,
                    section: drawerCart.dataset.id,
                    selector: '.smi-drawer-items_w',
                })
            }

            return res

        }

        getSectionInnerHTML(html, selector) {
            return new DOMParser().parseFromString(html, 'text/html').querySelector(selector).innerHTML;
        }
    }

    return SMI_ProductCard

})();

(function () {
    if (Shopify.designMode) {
        new SMI_ProductCard()
    } else {
        window.addEventListener('DOMContentLoaded', (event) => {
            new SMI_ProductCard()
        })
    }
})()
;
var SMI_ProductCard = (function () {
    'use strict'
    class SMI_ProductCard {
        options = {
            card: '.smi-product-card',
            thumbnail: '.smi-product-card__thumbnail',
            variants: {
                wrapper: '.smi-variants',
                item: '.smi-variants__item'
            }
        }

        constructor(_options = {}) {
            this.options = { ...this.options, ..._options }
            this.handleVariantClick()
            this.handleAddToCart()
        }

        handleVariantClick() {
            const variants = document.querySelectorAll(this.options.variants.wrapper)
            const activeClass = this.options.variants.item.replace('.', '') + '--active'
            variants.forEach(variant => {
                const items = variant.querySelectorAll(this.options.variants.item)
                items.forEach(item => {
                    item.addEventListener('click', (e) => {
                        const activedItem = variant.querySelector(`${this.options.variants.item}.${activeClass}`)
                        if (activedItem) {
                            activedItem.classList.remove(activeClass)
                        }
                        item.classList.add(activeClass)
                        const mediaUrl = item.dataset.mediaUrl
                        if (mediaUrl) {
                            const parent = variant.closest(this.options.card)
                            const firstImage = parent.querySelector(`${this.options.thumbnail} img:nth-child(1)`)
                            if (firstImage) {
                                firstImage.setAttribute('src', mediaUrl)
                            }
                        }

                        const dataId = item.getAttribute('data-id')
                        if (dataId) {
                            const cartParent = item.closest('.smi-product-card')
                            const aItems = cartParent.querySelectorAll('a')
                            if (aItems.length) {
                                aItems.forEach(aItem => {
                                    const _hrefFull = aItem.getAttribute('href')
                                    const _href = _hrefFull.split('?')[0]
                                    aItem.setAttribute('href', `${_href}?variant=${dataId}`)
                                })
                            }
                        }
                    })
                })
            })
        }

        handleAddToCart() {
            const buttons = document.querySelectorAll('.smi-button-cart._cart_now a')
            if (buttons.length) {
                buttons.forEach(item => {
                    item.addEventListener('click', (e) => {
                        e.preventDefault()

                        
                        const cartObj = document.querySelector('cart-notification') || document.querySelector('cart-drawer');
                        

                        const variantId = item.getAttribute('data-id')
                        item.classList.add('smi-cart-adding')
                        const textOrigin = item.getAttribute('data-text-add-cart');
                        const textAdded = item.getAttribute('data-text-added');
                        const textFailed = item.getAttribute('data-text-failed');
                        const textEl = item.querySelector('.smi-cart-text')
                        const cartType = window.smiObject ? window.smiObject.cartType : 'page'

                        let sectionsPayload = this.getSectionsToRender().map((section) => section.section)

                        
                        if (cartObj) {
                            let _sectionsPayload = cartObj.getSectionsToRender().map((section) => section.id)
                            sectionsPayload = [...sectionsPayload, ..._sectionsPayload]
                        }
                        console.log(sectionsPayload);
                        

                        let formData = {
                            quantity: 1,
                            id: parseInt(variantId),
                            sections: sectionsPayload,
                            sections_url: window.location.pathname
                        };

                        fetch("/cart/add.js", {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(formData)
                        }).then((response) => response.json()).then((data) => {
                            let isError = false
                            if (data?.status == 422 || data?.message === 'Cart Error') {
                                isError = true
                                textEl.innerText = textFailed
                            } else {
                                textEl.innerText = textAdded
                            }

                            const textTimer = setTimeout(() => {
                                textEl.innerText = textOrigin
                                clearTimeout(textTimer)
                            }, 2000)

                            if (!isError) {
                                const sectionRender = this.getSectionsToRender()
                                sectionRender.forEach((section) => {
                                    const _sectionEl = document.getElementById(section.id)
                                    if (_sectionEl) {
                                        const _elementToReplace = _sectionEl.querySelector(section.selector);
                                        let elementToReplace = null
                                        if (_elementToReplace) {
                                            elementToReplace = _elementToReplace
                                        } else {
                                            elementToReplace = _sectionEl
                                        }
                                        if (elementToReplace) {
                                            elementToReplace.innerHTML = this.getSectionInnerHTML(
                                                data.sections[section.section],
                                                section.selector
                                            );
                                            if (typeof SMI_CartDrawer === 'function' && cartType === 'drawer') {
                                                setTimeout(() => {
                                                    const drawerObj = new SMI_CartDrawer('.smi-cart-drawer-1')
                                                    drawerObj.handleToggle()
                                                    drawerObj.openDrawer()
                                                }, 150)
                                            } else {
                                                window.location.href = window.smiObject.routes.cart_url
                                            }
                                        }
                                    }
                                });

                                
                                if (cartObj) {
                                    if (typeof cartObj['renderContents'] === 'function') {
                                        cartObj.renderContents(data)
                                    }
                                } else {
                                    if (typeof SMI_CartDrawer !== 'function' && window.smiObject) {
                                        window.location.href = window.smiObject.routes.cart_url
                                    }
                                }
                                
                            }
                        }).finally(() => {
                            item.classList.remove('smi-cart-adding')

                            
                            if (cartObj && cartObj.classList.contains('is-empty')) cartObj.classList.remove('is-empty');
                            
                        });
                    })
                })
            }
        }

        getSectionsToRender() {
            const drawerCart = document.getElementById('smi-drawer-items')
            const res = [
                {
                    id: 'smi-cart-button',
                    section: 'smi-cart-icon-bubble',
                    selector: '.shopify-section',
                }
            ]

            if (drawerCart) {
                res.push({
                    id: 'shopify-section-' + drawerCart.dataset.id,
                    section: drawerCart.dataset.id,
                    selector: '.smi-drawer-items_w',
                })
            }

            return res

        }

        getSectionInnerHTML(html, selector) {
            return new DOMParser().parseFromString(html, 'text/html').querySelector(selector).innerHTML;
        }
    }

    return SMI_ProductCard

})();

(function () {
    if (Shopify.designMode) {
        new SMI_ProductCard()
    } else {
        window.addEventListener('DOMContentLoaded', (event) => {
            new SMI_ProductCard()
        })
    }
})()
;
var SMI_ProductCard = (function () {
    'use strict'
    class SMI_ProductCard {
        options = {
            card: '.smi-product-card',
            thumbnail: '.smi-product-card__thumbnail',
            variants: {
                wrapper: '.smi-variants',
                item: '.smi-variants__item'
            }
        }

        constructor(_options = {}) {
            this.options = { ...this.options, ..._options }
            this.handleVariantClick()
            this.handleAddToCart()
        }

        handleVariantClick() {
            const variants = document.querySelectorAll(this.options.variants.wrapper)
            const activeClass = this.options.variants.item.replace('.', '') + '--active'
            variants.forEach(variant => {
                const items = variant.querySelectorAll(this.options.variants.item)
                items.forEach(item => {
                    item.addEventListener('click', (e) => {
                        const activedItem = variant.querySelector(`${this.options.variants.item}.${activeClass}`)
                        if (activedItem) {
                            activedItem.classList.remove(activeClass)
                        }
                        item.classList.add(activeClass)
                        const mediaUrl = item.dataset.mediaUrl
                        if (mediaUrl) {
                            const parent = variant.closest(this.options.card)
                            const firstImage = parent.querySelector(`${this.options.thumbnail} img:nth-child(1)`)
                            if (firstImage) {
                                firstImage.setAttribute('src', mediaUrl)
                            }
                        }

                        const dataId = item.getAttribute('data-id')
                        if (dataId) {
                            const cartParent = item.closest('.smi-product-card')
                            const aItems = cartParent.querySelectorAll('a')
                            if (aItems.length) {
                                aItems.forEach(aItem => {
                                    const _hrefFull = aItem.getAttribute('href')
                                    const _href = _hrefFull.split('?')[0]
                                    aItem.setAttribute('href', `${_href}?variant=${dataId}`)
                                })
                            }
                        }
                    })
                })
            })
        }

        handleAddToCart() {
            const buttons = document.querySelectorAll('.smi-button-cart._cart_now a')
            if (buttons.length) {
                buttons.forEach(item => {
                    item.addEventListener('click', (e) => {
                        e.preventDefault()

                        
                        const cartObj = document.querySelector('cart-notification') || document.querySelector('cart-drawer');
                        

                        const variantId = item.getAttribute('data-id')
                        item.classList.add('smi-cart-adding')
                        const textOrigin = item.getAttribute('data-text-add-cart');
                        const textAdded = item.getAttribute('data-text-added');
                        const textFailed = item.getAttribute('data-text-failed');
                        const textEl = item.querySelector('.smi-cart-text')
                        const cartType = window.smiObject ? window.smiObject.cartType : 'page'

                        let sectionsPayload = this.getSectionsToRender().map((section) => section.section)

                        
                        if (cartObj) {
                            let _sectionsPayload = cartObj.getSectionsToRender().map((section) => section.id)
                            sectionsPayload = [...sectionsPayload, ..._sectionsPayload]
                        }
                        console.log(sectionsPayload);
                        

                        let formData = {
                            quantity: 1,
                            id: parseInt(variantId),
                            sections: sectionsPayload,
                            sections_url: window.location.pathname
                        };

                        fetch("/cart/add.js", {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(formData)
                        }).then((response) => response.json()).then((data) => {
                            let isError = false
                            if (data?.status == 422 || data?.message === 'Cart Error') {
                                isError = true
                                textEl.innerText = textFailed
                            } else {
                                textEl.innerText = textAdded
                            }

                            const textTimer = setTimeout(() => {
                                textEl.innerText = textOrigin
                                clearTimeout(textTimer)
                            }, 2000)

                            if (!isError) {
                                const sectionRender = this.getSectionsToRender()
                                sectionRender.forEach((section) => {
                                    const _sectionEl = document.getElementById(section.id)
                                    if (_sectionEl) {
                                        const _elementToReplace = _sectionEl.querySelector(section.selector);
                                        let elementToReplace = null
                                        if (_elementToReplace) {
                                            elementToReplace = _elementToReplace
                                        } else {
                                            elementToReplace = _sectionEl
                                        }
                                        if (elementToReplace) {
                                            elementToReplace.innerHTML = this.getSectionInnerHTML(
                                                data.sections[section.section],
                                                section.selector
                                            );
                                            if (typeof SMI_CartDrawer === 'function' && cartType === 'drawer') {
                                                setTimeout(() => {
                                                    const drawerObj = new SMI_CartDrawer('.smi-cart-drawer-1')
                                                    drawerObj.handleToggle()
                                                    drawerObj.openDrawer()
                                                }, 150)
                                            } else {
                                                window.location.href = window.smiObject.routes.cart_url
                                            }
                                        }
                                    }
                                });

                                
                                if (cartObj) {
                                    if (typeof cartObj['renderContents'] === 'function') {
                                        cartObj.renderContents(data)
                                    }
                                } else {
                                    if (typeof SMI_CartDrawer !== 'function' && window.smiObject) {
                                        window.location.href = window.smiObject.routes.cart_url
                                    }
                                }
                                
                            }
                        }).finally(() => {
                            item.classList.remove('smi-cart-adding')

                            
                            if (cartObj && cartObj.classList.contains('is-empty')) cartObj.classList.remove('is-empty');
                            
                        });
                    })
                })
            }
        }

        getSectionsToRender() {
            const drawerCart = document.getElementById('smi-drawer-items')
            const res = [
                {
                    id: 'smi-cart-button',
                    section: 'smi-cart-icon-bubble',
                    selector: '.shopify-section',
                }
            ]

            if (drawerCart) {
                res.push({
                    id: 'shopify-section-' + drawerCart.dataset.id,
                    section: drawerCart.dataset.id,
                    selector: '.smi-drawer-items_w',
                })
            }

            return res

        }

        getSectionInnerHTML(html, selector) {
            return new DOMParser().parseFromString(html, 'text/html').querySelector(selector).innerHTML;
        }
    }

    return SMI_ProductCard

})();

(function () {
    if (Shopify.designMode) {
        new SMI_ProductCard()
    } else {
        window.addEventListener('DOMContentLoaded', (event) => {
            new SMI_ProductCard()
        })
    }
})()
;
(function () {
    'use strict';

    if (Shopify.designMode) {
        let timerCounter = 0
        const timer = setInterval(() => {
            timerCounter++
            if (typeof SMI_Slider === 'function' || timerCounter >= 500) {
                clearInterval(timer)
                initHeader()
            }
        }, 10)
        initSticky()
    } else {
        window.addEventListener('DOMContentLoaded', (event) => {
            initSticky()
            initHeader()
        })
    }

    function calcBorderAll(parentId) {
        const productThumbnails = document.querySelectorAll(`#${parentId}.smi-card-style-standard  .smi-product-card__thumbnail`)
        if (productThumbnails.length) {
            productThumbnails.forEach((product, idx) => {
                const currentHeight = product.getBoundingClientRect().height
                if (productThumbnails[idx + 1]) {
                    const nextHeight = productThumbnails[idx + 1].getBoundingClientRect().height
                    if (nextHeight >= currentHeight) {
                        productThumbnails[idx + 1].style.setProperty('--border-height', (nextHeight - currentHeight) + 'px');
                        productThumbnails[idx + 1].classList.add('smi-virtual-border')
                    } else {
                        productThumbnails[idx + 1].classList.remove('smi-virtual-border')
                    }
                }
                if (productThumbnails[idx + 2]) {
                    const nextHeight = productThumbnails[idx + 1].getBoundingClientRect().height
                    const nextNextHeight = productThumbnails[idx + 2].getBoundingClientRect().height
                    if (nextHeight >= nextNextHeight) {
                        productThumbnails[idx + 1].style.setProperty('--border-right-height', (nextHeight - nextNextHeight) + 'px');
                        productThumbnails[idx + 1].classList.add('smi-virtual-border-right')
                    } else {
                        productThumbnails[idx + 1].classList.remove('smi-virtual-border-right')
                    }
                }
            })
        }
    }

    function initHeader() {
        class SMI_Header {
            constructor() {
                this.wrapper = document.querySelector('#smi-{{ section.id }}.smi-section-header-1')
                if (this.wrapper) {
                    this.wrapper.style.display = 'block'

                    this.abortController = new AbortController();
                    this.searchResultEl = this.wrapper.querySelector('#smi-search-result')
                    this.searchRecentEl = this.wrapper.querySelector('#smi-search-recent')
                    this.noResultEl = this.wrapper.querySelector('#smi-no-result')
                    this.searchInput = this.wrapper.querySelector(".smi-actions__search input")
                    this.searchButton = this.wrapper.querySelectorAll(".smi-search-button")
                    this.searchPanel = this.wrapper.querySelector(".smi-actions__search")
                    this.searchCover = this.wrapper.querySelector(".smi-actions__search .smi-search-cover")
                    this.searchClose = this.wrapper.querySelector(".smi-actions__search .smi-search-close")
                    this.searchClear = this.wrapper.querySelector(".smi-actions__search .smi-icon-clear")
                    this.searchIcon = this.wrapper.querySelector(".smi-actions__search .smi-icon-search")
                    this.transparentClass = '.smi-section-header-1--transparent'
                    this.searchTerm = ''
                    this.hiddenClass = 'smi-hidden'
                    this.recentKey = 'smi_recent_search_keywords'

                    
                    
                    
                    this.activeMenu()
                    this.handleTab()
                    this.megaSwiper()
                    this.menuMobile()
                    this.search()
                    this.arrow()
                    this.compatible()
                    this.setHeaderHeight()

                    document.addEventListener('smiReloadSection', e => {
                        this.megaSwiper()
                    })
                }
            }

            setHeaderHeight() {
                const headerInner = this.wrapper.parentNode.querySelector('.smi-section-header-1--transparent')
                if (headerInner) {
                    headerInner.style.position = 'absolute'
                }
            }

            compatible() {
                if (typeof subscribe === 'function') {
                    try {
                        subscribe(PUB_SUB_EVENTS.cartUpdate, (event) => {
                            console.log('PUB_SUB_EVENTS.cartUpdate')
                            fetch("/?sections=smi-cart-icon-bubble").then((response) => response.json()).then((data) => {
                                const html = new DOMParser().parseFromString(data['smi-cart-icon-bubble'], 'text/html')
                                const _cartIconEl = html.querySelector('.shopify-section a')
                                if (_cartIconEl) {
                                    const cartIconEl = document.querySelector('#smi-{{ section.id }} .smi-cart-button')
                                    if (cartIconEl) {
                                        cartIconEl.innerHTML = _cartIconEl.innerHTML
                                    }
                                }
                            })
                        });
                    } catch (error) { }
                }
            }

            arrow() {
                const toggleDots = () => {
                    const customDots = document.querySelector('#smi-{{ section.id }} .smi-custom-dots')
                    if (customDots) {
                        const lockItems = customDots.querySelectorAll('.swiper-button-lock')
                        if (lockItems.length && lockItems.length == 2) {
                            customDots.classList.add('smi-hidden')
                        } else {
                            customDots.classList.remove('smi-hidden')
                        }
                    }
                }
                toggleDots()
                window.addEventListener('resize', () => {
                    toggleDots()
                })
            }

            
            moveSearchToTop(open = true) {
                if (open) {
                    this.wrapper.parentNode.classList.add('smi-zindex-999999999')
                } else {
                    this.wrapper.parentNode.classList.remove('smi-zindex-999999999')
                }
            }

            demoOpenMenu(open = true) {
                const _parent = this.wrapper.closest('.smi-header-1')
                if (open) {
                    if (_parent) {
                        _parent.classList.add('smi-zindex-999999999')
                    }
                } else {
                    if (_parent) {
                        _parent.classList.remove('smi-zindex-999999999')
                    }
                }
            }
            

            activeMenu() {
                const _location = window.location
                const _path = _location.pathname
                const _menuItems = this.wrapper.querySelectorAll('.smi-menu-item a')
                if (_menuItems.length) {
                    _menuItems.forEach(_menuItem => {
                        const _hrefFull = _menuItem.getAttribute('href')
                        const _hrefPath = _hrefFull.split('?')[0]
                        if (_hrefPath === _path) {
                            _menuItem.parentNode.classList.add('smi-menu-item--active')
                            const _parent1 = _menuItem.parentNode.parentNode.closest('.smi-menu-item')
                            if (_parent1) {
                                const isMega = _parent1.closest('.smi-mega')
                                if (!isMega) {
                                    _parent1.classList.add('smi-menu-item--active')
                                }
                                const _parent2 = _parent1.parentNode.closest('.smi-menu-item')
                                if (_parent2) {
                                    _parent2.classList.add('smi-menu-item--active')
                                }
                            }
                        }
                    })
                }
            }

            search() {
                
                if (!this.searchButton.length) {
                    return;
                }

                let recentKeywords = this._getRecentSearchKeywords()
                if (this.searchRecentEl) {
                    let searchRecentWrapper = this.searchRecentEl.closest('.smi-tags')
                    if (!recentKeywords.length) {
                        searchRecentWrapper.classList.add(this.hiddenClass)
                    } else {
                        let recentHtml = ``
                        for (let i = 0; i < 3; i++) {
                            if (recentKeywords[i]) {
                                recentHtml += `<a href="#" class="smi-d-inline-block smi-px-sm smi-text-sm smi-color-text">${recentKeywords[i]}</a>`
                            }
                        }
                        this.searchRecentEl.innerHTML = recentHtml
                        searchRecentWrapper.classList.remove(this.hiddenClass)
                    }
                }

                //Search input
                const recentSearchItems = this.wrapper.querySelectorAll('.smi-tags a')
                if (recentSearchItems.length) {
                    recentSearchItems.forEach(item => {
                        item.addEventListener('click', (e) => {
                            e.preventDefault()
                            this.searchTerm = this.searchInput.value = item.innerText
                            const parent = this.searchInput.closest('.smi-search-panel')
                            parent.classList.add('smi-open')
                            this.searchPanel.classList.add('has-value')
                            this._getSearchResult()
                        })
                    })
                }

                let searchTimer
                this.searchInput.addEventListener("input", (e) => {
                    const parent = e.target.closest('.smi-search-panel')
                    parent.classList.add('smi-open')
                    clearTimeout(searchTimer);
                    this.searchTerm = e.target.value.trim()
                    searchTimer = setTimeout(() => {
                        //Add cookie
                        if (this.searchRecentEl) {
                            if (!recentKeywords.includes(this.searchTerm)) {
                                if (recentKeywords.length > 0 && recentKeywords.length <= 2) {
                                    recentKeywords = [this.searchTerm].concat([...recentKeywords])
                                } else if (recentKeywords.length > 2) {
                                    recentKeywords = [this.searchTerm].concat([recentKeywords[0], recentKeywords[1]])
                                } else {
                                    recentKeywords = [this.searchTerm]
                                }
                            }
                            localStorage.setItem(this.recentKey, JSON.stringify(recentKeywords))
                        }
                        parent.classList.add('smi-loading')
                        this._getSearchResult()
                    }, 500);

                    if (this.searchTerm !== '') {
                        this.searchPanel.classList.add('has-value')
                    } else {
                        this.searchPanel.classList.remove('has-value')
                        parent.classList.remove('smi-open')
                        if (this.noResultEl) {
                            this.noResultEl.style.display = 'none'
                        }
                    }
                });

                this.searchButton.forEach(searchButtonItem => {
                    searchButtonItem.addEventListener('click', () => {
                        this.searchPanel.classList.add('smi-open')
                        document.documentElement.classList.add('smi-overflow-hidden')

                        //CODE DEMO
                        this.moveSearchToTop(true)
                        //END CODE DEMO
                    })
                })

                this.searchClose.addEventListener('click', () => {
                    this.searchPanel.classList.remove('smi-open')
                    document.documentElement.classList.remove('smi-overflow-hidden')

                    //CODE DEMO
                    this.moveSearchToTop(false)
                    //END CODE DEMO
                })

                this.searchCover.addEventListener('click', () => {
                    this.searchPanel.classList.remove('smi-open')
                    document.documentElement.classList.remove('smi-overflow-hidden')

                    //CODE DEMO
                    this.moveSearchToTop(false)
                    //END CODE DEMO
                })

                if (this.searchInput) {
                    if (this.searchInput.value.trim() !== '') {
                        this.searchPanel.classList.add('has-value')
                    } else {
                        this.searchPanel.classList.remove('has-value')
                        const parent = this.searchInput.closest('.smi-search-panel')
                        parent.classList.remove('smi-open')
                        if (this.noResultEl) {
                            this.noResultEl.style.display = 'none'
                        }
                    }
                }

                if (this.searchClear) {
                    this.searchClear.addEventListener('click', () => {
                        this.searchInput.value = ''
                        this.searchPanel.classList.remove('has-value')

                        //
                        const parent = this.searchInput.closest('.smi-search-panel')
                        parent.classList.remove('smi-open')
                        if (this.noResultEl) {
                            this.noResultEl.style.display = 'none'
                        }
                    })
                }
                if (this.searchIcon) {
                    this.searchIcon.addEventListener('click', () => {
                        if (this.searchInput.value !== '') {
                            window.location.href = `${window.smiObject.routes.search_url}?q=${encodeURIComponent(this.searchInput.value)}&options[prefix]=last`
                        }
                    })
                }
            }

            _getRecentSearchKeywords() {
                let recents = localStorage.getItem(this.recentKey) || '[]'
                return JSON.parse(recents)
            }

            _getSearchResult() {
                fetch(`${window.smiObject.routes.predictive_search_url}?q=${encodeURIComponent(this.searchTerm)}&section_id=smi-predictive-search`, {
                    signal: this.abortController.signal,
                }).then((response) => {
                    return response.text();
                }).then((text) => {
                    const parent = this.searchInput.closest('.smi-search-panel')
                    parent.classList.remove('smi-loading')
                    if (this.searchInput.value.trim() !== '') {
                        const htmlDOM = new DOMParser().parseFromString(text, 'text/html')
                        let html = null
                        let noResult = null
                        if (htmlDOM) {
                            html = htmlDOM.querySelector('#shopify-section-smi-predictive-search');
                            noResult = html.querySelector('#smi-no-result-target')
                        }
                        if (noResult) {
                            if (this.noResultEl) {
                                this.noResultEl.style.display = 'block'
                                this.searchResultEl.innerHTML = ''
                            }
                        } else {
                            if (this.noResultEl) {
                                this.noResultEl.style.display = 'none'
                            }
                            this.searchResultEl.innerHTML = html.innerHTML

                            if (this.wrapper) {
                                this.searchButton = this.wrapper.querySelector('#smi-search-button')
                                if (this.searchButton) {
                                    this.searchButton.addEventListener('click', () => {
                                        window.location.href = `${window.smiObject.routes.search_url}?q=${encodeURIComponent(this.searchTerm)}&options[prefix]=last`
                                    })
                                }
                            }
                        }
                    }
                })
            }

            menuMobile() {
                const parent = document.getElementById('smi-{{ section.id }}')
                const menuItems = parent.querySelectorAll('.smi-menu-item')
                if (menuItems.length) {
                    menuItems.forEach(menuItem => {
                        
                        const megaMenu = menuItem.querySelector('.smi-mega')
                        const subMenu = menuItem.querySelector('.smi-sub-menu')
                        const subMegaMenu = menuItem.querySelector('.smi-sub-mega-menu')
                        if (subMenu || megaMenu || subMegaMenu) {
                            menuItem.querySelector('a').addEventListener('click', (e) => {
                                e.preventDefault()
                                menuItem.classList.add('smi-open')
                            })
                        }
                    })
                }

                const menuBacks = parent.querySelectorAll('.smi-menu-back')
                if (menuBacks.length) {
                    menuBacks.forEach(menuBack => {
                        menuBack.addEventListener('click', (e) => {
                            const menuItemOpened = menuBack.closest('.smi-menu-item.smi-open')
                            if (menuItemOpened) {
                                menuItemOpened.classList.remove('smi-open')
                            }
                        })
                    })
                }

                const menuIcon = parent.querySelector('.smi-hamburger-icon')
                menuIcon.addEventListener('click', () => {
                    if (parent.classList.contains('smi-open')) {
                        parent.classList.remove('smi-open')
                        document.documentElement.classList.remove('smi-overflow-hidden')
                        
                        const allMenuOpenned = parent.querySelectorAll('.smi-menu .smi-open')
                        if (allMenuOpenned.length) {
                            allMenuOpenned.forEach(openned => {
                                openned.classList.remove('smi-open')
                            })
                        }
                        
                        this.demoOpenMenu(false)
                        
                    } else {
                        parent.classList.add('smi-open')
                        document.documentElement.classList.add('smi-overflow-hidden')
                        
                        this.demoOpenMenu(true)
                        
                    }
                })

                const menuClose = parent.querySelector('.smi-menu__close')
                menuClose.addEventListener('click', () => {
                    parent.classList.remove('smi-open')
                    document.documentElement.classList.remove('smi-overflow-hidden')
                    
                    const allMenuOpenned = parent.querySelectorAll('.smi-menu .smi-open')
                    if (allMenuOpenned.length) {
                        allMenuOpenned.forEach(openned => {
                            openned.classList.remove('smi-open')
                        })
                    }

                    
                    this.demoOpenMenu(false)
                    
                })
            }

            megaSwiper() {
                const swipers = document.querySelectorAll('#smi-{{ section.id }}  .smi-mega-swiper')
                if (swipers.length) {
                    swipers.forEach(item => {
                        if (typeof SMI_Slider !== 'undefined') {
                            const parentId = item.getAttribute('id')
                            const selector = `#${parentId} .smi-swiper`
                            const parent = document.querySelector(selector)
                            if (parent) {
                                
                                const styles = window.getComputedStyle(this.wrapper);
                                let gridHorizontal = styles.getPropertyValue("--grid-desktop-horizontal-spacing");

                                let options = JSON.parse(parent.getAttribute('data-slider'));
                                const spaceBetween = parseInt(gridHorizontal);
                                const _options = {
                                    spaceBetween: spaceBetween,
                                    watchSlidesProgress: true,
                                    loop: false,
                                    slidesPerView: parseInt(options.destopItems),
                                    breakpoints: {
                                        0: {
                                            spaceBetween: spaceBetween > 15 ? 15 : spaceBetween,
                                            slidesPerGroup: 1,
                                            slidesPerView: 1.2
                                        },
                                        768: {
                                            slidesPerView: parseInt(options.tabletItems),
                                            spaceBetween: spaceBetween
                                        },
                                        992: {
                                            slidesPerView: parseInt(options.destopItems),
                                            spaceBetween: spaceBetween
                                        }
                                    }
                                }
                                new SMI_Slider(selector, { ...options, ..._options })
                            }

                            if (item.classList.contains('smi-spacing-false') && item.classList.contains('smi-overlap-true')) {
                                const _swiperDOM = document.querySelector(selector)
                                if (_swiperDOM) {
                                    const _swiper = _swiperDOM.swiper
                                    _swiper.on('transitionEnd', function () {
                                        calcBorderAll(parentId)
                                    })
                                }

                                calcBorderAll(parentId)
                                setTimeout(() => {
                                    calcBorderAll(parentId)
                                }, 500)

                                if (item.classList.contains('smi-card-style-standard')) {
                                    const productThumbnails = item.querySelectorAll('.smi-product-card__thumbnail')
                                    const resizeObserver = new ResizeObserver((entries) => {
                                        calcBorderAll(parentId)
                                    });
                                    productThumbnails.forEach(item => {
                                        resizeObserver.observe(productThumbnails[0]);
                                    })
                                }
                            }
                        }
                    })
                }
            }

            handleTab() {
                const excuteTab = () => {
                    const wrapper = document.querySelectorAll('#smi-{{ section.id }} .smi-mega--product-tab')
                    if (wrapper) {
                        wrapper.forEach(mega => {
                            const tab = mega.querySelector('.smi-mega-tabs')
                            tab.querySelectorAll('.smi-mega-tabs__item a').forEach(item => {
                                item.addEventListener('click', (e) => {
                                    e.preventDefault()
                                    const target = item.dataset.target
                                    mega.querySelector('.smi-mega-swiper.smi-mega-swiper--active').classList.remove('smi-mega-swiper--active')
                                    mega.querySelector(`.smi-mega-swiper#${target}`).classList.add('smi-mega-swiper--active')
                                    mega.querySelector(`.smi-mega-tabs .smi-mega-tabs__item.smi-mega-tabs__item--active`).classList.remove('smi-mega-tabs__item--active')
                                    item.parentNode.classList.add('smi-mega-tabs__item--active')
                                })
                            })
                        })
                    }
                }
                if (!this.wrapper.classList.contains('smi-header-mobile')) {
                    excuteTab()
                }

                const enableHandleTab = (x) => {
                    if (x.matches) {
                        const wrapper = document.querySelectorAll('#smi-{{ section.id }} .smi-mega--product-tab')
                        if (wrapper) {
                            wrapper.forEach(mega => {
                                const tab = mega.querySelector('.smi-mega-tabs')
                                tab.querySelectorAll('.smi-mega-tabs__item a').forEach(item => {
                                    item.addEventListener('click', (e) => {
                                        if (x.matches) {
                                            window.location.href = item.getAttribute('href')
                                        }
                                    })
                                })
                            })
                        }
                        this._toggleMobileClass()
                    } else {
                        this._toggleMobileClass(true)
                        excuteTab()
                    }
                }


                var x = window.matchMedia("(max-width: 991px)")
                enableHandleTab(x)
                x.addListener(enableHandleTab)
            }

            _toggleMobileClass(remove = false) {
                const headerClassList = this.wrapper.classList
                if (!headerClassList.contains('smi-section-header-1--drawer') && !headerClassList.contains('smi-section-header-1--drawer_logo_center')) {
                    if (!!remove) {
                        this.wrapper.classList.remove('smi-header-mobile')
                    } else {
                        this.wrapper.classList.add('smi-header-mobile')
                    }
                }
            }
        }
        new SMI_Header()
    }

    function initSticky() {
        if (!customElements.get('smi-sticky-header')) {
            class SMI_Sticky_Header extends HTMLElement {
                constructor() {
                    super();
                }

                connectedCallback() {
                    this.header = this.parentNode
                    this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always' || this.getAttribute('data-sticky-type') === 'alway_reduce_logo';
                    this.headerBounds = {};

                    this.setHeaderHeight();

                    window.matchMedia('(max-width: 767px)').addEventListener('change', this.setHeaderHeight.bind(this));

                    if (this.headerIsAlwaysSticky) {
                        this.header.classList.add('smi-shopify-section-header-sticky');
                    };

                    this.currentScrollTop = 0;
                    this.preventReveal = false;
                    this.predictiveSearch = this.querySelector('predictive-search');

                    this.headerInner = this.querySelector('.smi-section-header-1--transparent')

                    this.onScrollHandler = this.onScroll.bind(this);
                    this.hideHeaderOnScrollUp = () => this.preventReveal = true;

                    this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
                    window.addEventListener('scroll', this.onScrollHandler, false);

                    this.createObserver();
                }

                setHeaderHeight() {
                    document.documentElement.style.setProperty('--header-height', `${window.getComputedStyle(this.header).height}`);
                    const headerInner = this.querySelector('.smi-section-header-1--transparent')
                    if (headerInner) {
                        headerInner.style.position = 'absolute'
                    }
                }

                disconnectedCallback() {
                    this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
                    window.removeEventListener('scroll', this.onScrollHandler);
                }

                createObserver() {
                    let observer = new IntersectionObserver((entries, observer) => {
                        this.headerBounds = entries[0].intersectionRect;
                        observer.disconnect();
                    });
                    observer.observe(this.header);
                }

                onScroll() {
                    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

                    if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

                    if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
                        this.header.classList.add('smi-scrolled-past-header');
                        if (this.headerInner) {
                            this.headerInner.classList.remove(this.headerInner.getAttribute('data-color-transparent'))
                        }
                        if (this.preventHide) return;
                        requestAnimationFrame(this.hide.bind(this));
                    } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
                        this.header.classList.add('smi-scrolled-past-header');
                        if (this.headerInner) {
                            this.headerInner.classList.remove(this.headerInner.getAttribute('data-color-transparent'))
                        }
                        if (!this.preventReveal) {
                            requestAnimationFrame(this.reveal.bind(this));
                        } else {
                            window.clearTimeout(this.isScrolling);
                            this.isScrolling = setTimeout(() => {
                                this.preventReveal = false;
                            }, 66);
                            requestAnimationFrame(this.hide.bind(this));
                        }
                    } else if (scrollTop <= this.headerBounds.top) {
                        this.header.classList.remove('smi-scrolled-past-header');
                        if (this.headerInner) {
                            this.headerInner.classList.add(this.headerInner.getAttribute('data-color-transparent'))
                        }
                        requestAnimationFrame(this.reset.bind(this));
                    }
                    this.currentScrollTop = scrollTop;
                }

                hide() {
                    if (this.headerIsAlwaysSticky) return;
                    this.header.classList.add('smi-shopify-section-header-hidden', 'smi-shopify-section-header-sticky');
                }

                reveal() {
                    if (this.headerIsAlwaysSticky) return;
                    this.header.classList.add('smi-shopify-section-header-sticky', 'animate');
                    this.header.classList.remove('smi-shopify-section-header-hidden');
                }

                reset() {
                    if (this.headerIsAlwaysSticky) return;
                    this.header.classList.remove('smi-shopify-section-header-hidden', 'smi-shopify-section-header-sticky', 'animate');
                }
            }
            customElements.define('smi-sticky-header', SMI_Sticky_Header);
        }
    }
})();

</script>